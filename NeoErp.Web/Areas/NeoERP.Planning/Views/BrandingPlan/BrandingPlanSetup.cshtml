@using NeoErp.Core;
@using NeoErp.Core.Infrastructure;
@model List<NeoErp.Planning.Service.Models.MyColumnSettings>
@{
    ViewBag.Title = "Branding Plan Setup";
    string planCode = ViewBag.PlanCode;
    Layout = null;
    var workingContent = EngineContext.Current.Resolve<IWorkContext>();
    var company_code = workingContent.CurrentUserinformation.company_code;
}
<style>
    div#ndp-nepali-box {
        z-index: 10076 !important;
    }

    .ui-datepicker {
        z-index: 10076 !important;
    }


    .input-medium {
        width: 100% !important;
    }

    .form-horizontal .control-label {
        padding-top: 0px !important;
        margin-bottom: 5px;
        text-align: right;
    }

    #PlanSetupTreeList input {
        width: 100%;
        border: none;
        background: none !important;
        height: 17px !important;
        display: block;
    }

        #PlanSetupTreeList input:focus {
            border: solid #ddd 1px;
        }

    #PlanSetupTreeList td {
        border: 0px;
        border-bottom: solid #c5c5c5 1px;
    }

    #PlanSetupTreeList td {
        border-style: none;
        border-width: 0 0 0 0;
    }

    .mulitiitem-select legend {
        width: 13%;
        border-bottom: none !important;
        border-bottom: none !important;
    }

    input:focus {
        outline: none !important;
    }

    #PlanSetupTreeList .k-treelist .k-alt {
        background-color: #eee;
    }

    .k-grid-content-locked {
        background-color: #ffffff;
        /*border-right: none;*/
        border: none;
    }

    #operationContent td[role="gridcell"] {
        font-size: 11px;
        border-right: solid #c5c5c5 1px;
        border-bottom: solid #c5c5c5 1px;
    }

    .labelGap {
        padding-right: 80px;
    }

    .groupColor {
        background-color: #ebebeb !important;
    }

    .k-treelist {
        margin-top: 0px;
    }

    #salesReferenceOptionModal.modal.fade.in {
        top: 30%;
        margin: auto;
    }

    .portlet.light .portlet-body {
        padding-top: 0px;
    }

    .titleheading {
        padding-bottom: 0px !important;
    }
</style>
<div class="content">
    <div class="page-bar">
        <ul class="page-breadcrumb">
        </ul>
    </div>

</div>
<div class="row">
<div class="col-md-12">
    <div id="BrandingPlanSetupCtrl" class="portlet light bordered">
        <div class="portlet-title titleheading">
            <div class="col-md-7 setup_description">
                <div class="row">
                    <span class="text-center" style="text-align:center">
                        <i class="fa fa-list-alt"></i>
                        Plan : <strong id="PlanName"></strong>  |
                        <!--For : <strong id="plan_for"></strong> |-->
                        Frequency : <strong id="choosed_frequency"></strong> |
                        Date Between : <strong id="planStartDate"></strong> &nbsp;&nbsp;to&nbsp;&nbsp;<strong id="planEndDate"></strong>
                    </span>
                </div>
                <div class="row">
                    <span class="text-center" style="text-align:center">
                        <i class="fa fa-list-alt"></i>
                        <!--<span class="">
                            Customer : <strong class="customerName"></strong>
                        </span>
                        <span class="employee-span">
                            | Employee : <strong class="employeeName"></strong>
                        </span>-->
                        <span class="division-span">
                            Division : <strong class="divisionName"></strong>
                        </span>
                        <span class="branch-span">
                            | Branch : <strong class="branchName"></strong>
                        </span>
                    </span>
                </div>
            </div>
            <div class="col-md-5">
                <span class="pull-right">
                    <button type="button" id="resetBtn" ng-click="cancelForm()" class="btn btn-default btn-circle btn-sm cancelButton"><i class="fa fa-times"></i> Cancel</button>
                    @*<button type="button" id="salesReferenceplan" name="salesReferenceplan" class="btn btn-success btn-circle btn-sm"><i class="fa fa-at"></i> Reference</button>*@
                    <button type="button" id="clearBtn" onclick="$('input[type=number]').val('')" class="btn btn-primary btn-circle btn-sm"><i class="fa fa-eraser"></i> Clear</button>
                    <button type="button" id="backBtn" ng-click="gotoBack()" class="btn btn-warning btn-circle btn-sm"><i class="fa fa-caret-left"></i> Back</button>
                    <button type="button" id="SaveBrandingPlanSetup" class="btn btn-green btn-circle btn-sm"><i class="fa fa-save"></i> Save</button>
                </span>
            </div>
        </div>
        <div class="portlet-body">
            <form id="planSetupForm" name="planSetupForm" novalidate class="form-horizontal1">
                <input type="hidden" id="END_DATE" name="END_DATE" value="" />
                <input type="hidden" id="IS_ITEMS_VISIBLE_ONLY" name="IS_ITEMS_VISIBLE_ONLY" value="" />
                <input type="hidden" id="ITEM_CODE" name="ITEM_CODE" value="" />
                <input type="hidden" id="IsCustomerProduct" name="IsCustomerProduct" value="" />
                <input type="hidden" id="PLAN_CODE" name="PLAN_CODE" value="" ng-model="p_code" />
                <input type="hidden" id="PLAN_EDESC" name="PLAN_EDESC" value="" />
                <input type="hidden" id="PLAN_FOR" name="PLAN_FOR" value="" />
                <input type="hidden" id="PLAN_TYPE" name="PLAN_TYPE" value="" />
                <input type="hidden" id="REMARKS" name="REMARKS" value="" />
                <input type="hidden" id="START_DATE" name="START_DATE" value="" />
                <input type="hidden" id="TIME_FRAME_CODE" name="TIME_FRAME_CODE" value="" />
                <input type="hidden" id="TIME_FRAME_EDESC" name="TIME_FRAME_EDESC" value="" />
                <input type="hidden" id="customerCode" name="customerCode" value="" />
                <input type="hidden" id="branchCode" name="branchCode" value="" />
                <input type="hidden" id="divisionCode" name="divisionCode" value="" />
                <input type="hidden" id="employeeCode" name="employeeCode" value="" />
                <input type="hidden" id="dateFormat" name="dateFormat" value="" />
                <input type="hidden" id="salesRateType" name="salesRateType" value="" />
                <div class="row itemHeader" style="display:none;">
                  
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label ">
                                Frequency <strong id="choosed_frequency"></strong>
                                <input type="hidden" id="frequency_code" name="frequency_code" value="" />
                            </label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">
                            Start Date :<strong id="planStartDate"></strong>, &nbsp; &nbsp;
                            End Date :<strong id="planEndDate"></strong>
                        </label>
                    </div>
                </div>
            </form>
            <div id="selectedItemsList_temp" ng-bind="param" class="hidden"></div>
            <div id="PlanSetupTreeList" style="margin: 10px 0px 0px 0px;"></div>
        </div>
    </div>
</div>
    </div>
<!-- reference modal-->
<div id="salesReferenceOptionModal" class="modal fade" tabindex="-1" data-width="760">
    <div class="modal-busy-loader">
        <div id="modalpreloader" class="modalloader"></div>
        <span style="color:white">Processing...<small><i>(It may take some time)</i></small></span>
    </div>
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
        <h4 class="modal-title">Branding Reference</h4>
    </div>
    <div class="modal-body">
        <div class="row">
            <div class="form-group">
                <div class="col-md-6">
                    <div class="form-horizontal">
                        <label class="control-label">Date Filter &nbsp;&nbsp;</label>
                        <select class="dateFilterSelect form-control" id="ddlDateFilterVoucher" name="DateStep" ngSelected="onDateChange()"></select>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-6">
                    <div class="form-horizontal">
                        <label class="control-label">BS Date Range</label>
                        <div class="input-group input-medium date-picker input-daterange" data-date="10/11/2012" data-date-format="mm/dd/yyyy">
                            <input type="text" id="fromInputDateVoucher" ng-model="startdate" name="startdate" class="frmDataInput form-control" placeholder="From Date" />
                            <span class="input-group-addon"> to </span>
                            <input type="text" class="frmDataInput form-control" id="toInputDateVoucher" placeholder="To Date">
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-horizontal">
                        <label class="control-label">AD Date Range</label>
                        <div class="input-group input-medium date-picker input-daterange" data-date="10/11/2012" data-date-format="mm/dd/yyyy">
                            <input type="text" name="FromDateVoucher" id="FromDateVoucher" class="form-control frmDataInput" readonly="readonly" placeholder="From Date" />
                            <span class="input-group-addon"> to </span>
                            <input type="text" name="ToDateVoucher" class="form-control frmDataInput" readonly="readonly" id="ToDateVoucher" placeholder="To Date">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group">
                <div class="col-md-6">
                    <div class="form-horizontal">
                        <label class="control-label">Increment/Decrement &nbsp;</label>
                        <div class="input-group">
                            <input type="number" id="increment_decrement_percent" class="form-control text-right" autofocus name="increment_decrement_percent" value="0" />
                            <label class="input-group-addon" for="increment_decrement_percent">%</label>
                        </div>
                        <label class="caption"><small><i>0 for no change value, (+ve) value for Increment and (-ve) Negative value for Decrement. </i></small></label>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-horizontal">
                        <label class="control-label">Consolidate Filter</label>
                        <div id="consolidateTreeView" style="max-height:400px;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" data-dismiss="modal" class="btn btn-outline dark">Close</button>
        <button type="button" class="btn green" id="searchSalesItemReference" data-loading-text="Loading...">OK</button>
    </div>
</div>
<!--end reference modal-->
<script type="text/x-kendo-tmpl" id="ItemTemplate">
    <input class="autoFillNum" dir="rtl" style="width:70px !important" type="number" />
</script>
<script type="text/x-kendo-tmpl" id="FreqTemplate">
    <input class="autoFillItemNum" dir="rtl" style="width:100% !important " type="number" />
</script>
<script src="@Scripts.Url("~/Areas/NeoERP.Planning/Scripts/DateFilterWithADBS.js")" type="text/javascript"></script>

<script>
    var p_code = '@planCode';
    var retrievedItem = null;
    var retrievedSalesPlanDetail = null;
    var isParamLoaded = $.Deferred();
    DateFilter.init('BS', dateTrigger);
    function dateTrigger() {
        $('#ddlDateFilterVoucher').val('This Year');
        $('#ddlDateFilterVoucher').trigger('change');
    }
    $('#salesReferenceOptionModal').on('show.bs.modal', function () {
        $(this).find('.modal-body').css({
            'max-height': '100%'
        });
    });
    
    setTimeout(function () {
        $('.portlet.light.bordered').css({ 'height': window.innerHeight - 80 });
    }, 100);
    (function () {
        $.when(isParamLoaded).then(function (returned) {
            setTimeout(function () {

                retrievedItem = angular.element(document.getElementById('selectedItemsList_temp')).scope().param;
                if (p_code != null && p_code != '' && (retrievedItem == null || retrievedItem == undefined)) {
                    $.ajax({
                        url: window.location.protocol + "//" + window.location.host + "/api/BrandingPlanApi/GetPlanDetailValueByPlanCode",
                        data: { plancode: p_code }
                    }).success(function (result) {

                        //CoaPlan
                        //CoaPlanDtlList
                        //CoaPlanItems
                        console.log(result);
                        var existedData = {
                            PLAN_CODE: result.CoaPlan.PLAN_CODE,
                            PLAN_EDESC: result.CoaPlan.PLAN_EDESC,
                            ITEM_CODE: result.CoaPlan.ITEM_CODE,
                            START_DATE: result.CoaPlan.START_DATE,
                            END_DATE: result.CoaPlan.END_DATE,
                            REMARKS: result.CoaPlan.REMARKS,
                            //PLAN_TYPE: result.PLAN_TYPE,
                            //PLAN_FOR: (result.SALES_QUANTITY != '' && result.SALES_QUANTITY != null) ? 'QUANTITY' : 'AMOUNT', //result.PLAN_FOR,
                            TIME_FRAME_CODE: result.CoaPlan.TIME_FRAME_CODE,
                            TIME_FRAME_EDESC: result.CoaPlan.TIME_FRAME_EDESC,
                            //IS_ITEMS_VISIBLE_ONLY: result.IS_ITEMS_VISIBLE_ONLY,
                            dateFormat: result.CoaPlan.CALENDAR_TYPE,
                            //customerCode: result.customerCode,
                            //customerName: result.CUSTOMER_EDESC,
                            selectedItemsList: result.CoaPlanItems,
                            branchcode: result.CoaPlanDtlList[0].BRANCH_CODE,
                            branchName: result.CoaPlanDtlList[0].branchName,
                            divisioncode: result.CoaPlanDtlList[0].DIVISION_CODE,
                            divisionName: result.CoaPlanDtlList[0].divisionName,
                            //employeecode: result.salesPlanDetail[0].EMPLOYEE_CODE,
                            //employeeName: result.salesPlanDetail[0].employeeName,
                            dateFilter: '',
                        }
                        retrievedItem = existedData;

                        retrievedSalesPlanDetail = result.CoaPlanDtlList; // old retrieved from database.
                        var retrievedFromEditMode = angular.element(document.getElementById('selectedItemsList_temp')).scope().param;
                        if (retrievedFromEditMode != undefined) {
                            var uniqItems = _.uniq(retrievedFromEditMode.selectedItemsList, 'ITEM_CODE');
                            retrievedItem.selectedItemsList = uniqItems;
                            if (retrievedFromEditMode != null || retrievedFromEditMode != undefined) {
                                //retrievedItem.employeeName = retrievedFromEditMode.employeeName;
                                retrievedItem.divisionName = retrievedFromEditMode.divisionName;
                                retrievedItem.branchName = retrievedFromEditMode.branchName;
                            }
                        }
                        renderView();
                    }).fail(function (failEx) {

                    }).error(function (err) {

                    });
                }
                else if (p_code != null && p_code != '' && retrievedItem != null) {

                    $.ajax({
                        url: window.location.protocol + "//" + window.location.host + "/api/BrandingPlanApi/GetPlanDetailValueByPlanCode",
                        data: { plancode: p_code }
                    }).success(function (result) {
                        retrievedSalesPlanDetail = result.CoaPlanDtlList; // old retrieved from database.
                        retrievedItem.selectedItemsList = _.uniq(retrievedItem.selectedItemsList, 'ITEM_CODE');
                        renderView();
                    });

                }
                else {
                    if (retrievedItem == undefined) {
                        //$('.cancelButton').trigger('click');
                        window.location.href = "/Planning/Home/Index#!Planning/CreateBrandingPlan";
                    } else {
                        retrievedItem.selectedItemsList = _.uniq(retrievedItem.selectedItemsList, 'ITEM_CODE');
                        renderView();
                    }
                }
            }, 3000);
        });

        $("#searchSalesItemReference").on('click',
            function () {
                var treeData = _.uniq($("#treelist").data("kendoTreeList").dataItems(), 'ITEM_CODE');
                var items = _.pluck(treeData, 'ITEM_CODE').toString();
                var StartDate = $("#FromDateVoucher").val();
                var EndDate = $("#ToDateVoucher").val();
                var incrementVal = $("#increment_decrement_percent").val();
                if (incrementVal === "" || incrementVal === undefined) {
                    displayPopupNotification("Please enter increment or decrement value", "error");
                    return;
                }
                var planFor = retrievedItem.PLAN_FOR;
                var condition = $('input[name=increment_decrement]:checked').val();

                var objCheckedItem = getCheckedItems_consolidate($("#consolidateTreeView").data("kendoTreeView"));
                var valCheckedItem = [];
                $.each(objCheckedItem, function (i, v) {
                    valCheckedItem.push(v.branch_Code);
                })
                var choosedBranched = valCheckedItem.length > 0 ? valCheckedItem.join(',') : retrievedItem.branchcode;

                var EndDate = $("#ToDateVoucher").val();
                var param = {
                    ItemList: items,
                    startDate: StartDate,
                    endDate: EndDate,
                    //customerCode: retrievedItem.customerCode,
                    divisionCode: retrievedItem.divisioncode,
                    //branchCode: retrievedItem.branchcode,
                    branchCode: choosedBranched,
                    dateFormat: retrievedItem.dateFormat,
                    frequency: retrievedItem.TIME_FRAME_EDESC
                };
                
                var $btn = $(this);
                $btn.button('loading');
                $.ajax({
                    //url: window.location.protocol + "//" + window.location.host + "/api/PlanSetupApi/getSalesItemDataForReference",
                    url: window.location.protocol + "//" + window.location.host + "/api/BrandingPlanApi/getCOADataForReference",
                    data: param
                }).success(function (result) {
                    
                    var result_length = result.DATA.length;
                    if (result_length < 1) {
                        displayPopupNotification("Reference Data not found.", "info");
                    }
                    _.each(result.DATA, function (v, i) {
                        var calValue = 0;
                        var amt = v.AMOUNT;
                        calValue = parseFloat(amt) + (parseFloat(amt) * parseFloat(incrementVal) / 100);
                        if (calValue == "0")
                            $('input[type=number]').val('');
                        $("." + v.COLNAME).val(calValue);
                        if (calValue != "0") {
                            $("." + v.COLNAME).trigger('change');
                        }
                        //$("." + v.COLNAME).trigger('change');
                        //if (i == (result_length - 1)) {
                        //    $("." + v.COLNAME).trigger('change');
                        //}
                    });
                    $btn.button('reset');
                    $('#salesReferenceOptionModal').modal('toggle');
                    
                }).fail(function (failEx) {
                    hideloader();
                }).error(function (err) {
                    displayPopupNotification(err, "error");
                    hidemodalloader();
                });
            });

    })();

    function renderView() {
        showloader();
        if (retrievedItem == undefined) {
            window.location.href = "/Planning/Home/Setup#!Planning/BrandingPlan";
            hideloader();
        }
        else {

            $('#PlanName').html(retrievedItem.PLAN_EDESC);
            //$("#plan_type").html(retrievedItem.PLAN_TYPE);
            //$("#plan_for").html(retrievedItem.PLAN_FOR);
            $("#choosed_frequency").html(retrievedItem.TIME_FRAME_EDESC);
            $("#frequency_code").val(retrievedItem.TIME_FRAME_CODE);
            var startDate = $.datepicker.formatDate("d-M-yy", new Date(retrievedItem.START_DATE));
            var endDate = $.datepicker.formatDate("d-M-yy", new Date(retrievedItem.END_DATE));
            $("#planStartDate").html(startDate);
            $("#planEndDate").html(endDate);
            //$(".customerName").html(retrievedItem.customerName == "" ? "N/A" : retrievedItem.customerName);
            //$(".employeeName").html(retrievedItem.employeeName == "" ? "N/A" : retrievedItem.employeeName);
            $(".divisionName").html(retrievedItem.divisionName == "" ? "N/A" : retrievedItem.divisionName);
            $(".branchName").html(retrievedItem.branchName == "" ? "N/A" : retrievedItem.branchName);
            $('input[name=END_DATE]').val(retrievedItem.END_DATE);
            $('input[name=IS_ITEMS_VISIBLE_ONLY]').val(retrievedItem.IS_ITEMS_VISIBLE_ONLY);
            $('input[name=ITEM_CODE]').val(retrievedItem.ITEM_CODE);
            $('input[name=IsCustomerProduct]').val(retrievedItem.IsCustomerProduct);
            $('input[name=PLAN_CODE]').val(retrievedItem.PLAN_CODE);
            if (p_code != '') {
                $('input[name=PLAN_CODE]').val(p_code);
            }
            $('input[name=PLAN_EDESC]').val(retrievedItem.PLAN_EDESC);
            //$('input[name=PLAN_FOR]').val(retrievedItem.PLAN_FOR);
            //$('input[name=PLAN_TYPE]').val(retrievedItem.PLAN_TYPE);
            $('input[name=REMARKS]').val(retrievedItem.REMARKS);
            $('input[name=START_DATE]').val(retrievedItem.START_DATE);
            $('input[name=TIME_FRAME_CODE]').val(retrievedItem.TIME_FRAME_CODE);
            $('input[name=TIME_FRAME_EDESC]').val(retrievedItem.TIME_FRAME_EDESC);
            //$('input[name=customerCode]').val(retrievedItem.customerCode);
            //$('input[name=employeeCode]').val(retrievedItem.employeecode);
            $('input[name=branchCode]').val(retrievedItem.branchcode);
            $('input[name=divisionCode]').val(retrievedItem.divisioncode);
            $('input[name=dateFormat]').val(retrievedItem.dateFormat);
            //$("input[name=salesRateType]").val(retrievedItem.salesRateType);

            GetPlanSetupTreeList(startDate, endDate, retrievedItem.TIME_FRAME_CODE, retrievedItem.TIME_FRAME_EDESC, retrievedItem.dateFormat);
            if (retrievedItem.branchName != "") {
                $('.branch-span').visible
            }
        }
    }

    function CollapseAllTree() {
        var treeList = $("#treelist").data("kendoTreeList");
        var rows = $("tr.k-treelist-group", treeList.tbody);
        $.each(rows, function (idx, row) {
            treeList.collapse(row);
        });
    }

    function ExpandAllTree() {
        showloader();
        var treeList = $("#treelist").data("kendoTreeList");
        var tr = treeList.dataItems();
        var rows = $("tr.k-treelist-group", treeList.tbody);
        $.each(rows, function (idx, row) {
            treeList.expand(row);
            if (idx == (rows.length - 1)) {
                hideloader();
            }
        });
    }
    var frequencyTitleObject = null;
    function GetPlanSetupTreeList(startDate, endDate, timeFrameCode, timeFrameName, dateformat) {
        //var savePlanUrl = window.location.protocol + "//" + window.location.host + "/Plan/LoadPlanSetupTreeListPartial";
        var savePlanUrl = window.location.protocol + "//" + window.location.host + "/BrandingPlan/LoadPlanSetupTreeListPartial";
        startDate = moment(startDate).format('MM-DD-YYYY');
        endDate = moment(endDate).format('MM-DD-YYYY')
        var param = {
            startDate: startDate,
            endDate: endDate,
            timeFrameCode: timeFrameCode,
            timeFrameName: timeFrameName,
            datetype: dateformat
        };
        FrequencyTitleParameter = param;
        $.ajax({
            type: 'GET',
            url: savePlanUrl,
            data: param,
            dataType: 'html',
            success: function (partial) {
                $("#PlanSetupTreeList").html(partial);
                $.ajax({
                    type: 'GET',
                    url: window.location.protocol + "//" + window.location.host + "/Planning/Plan/getFrequencyTitle",
                    data: param,
                    dataType: 'html',
                    async: false,
                    success: function (result) {

                        frequencyTitleObject = JSON.parse(result);
                    }
                });
                BindTreeList(p_code, 0, 0, retrievedSalesPlanDetail);

                var isItemGroupEntry = 'N';
                $.ajax({
                    type: 'GET',
                    url: window.location.protocol + "//" + window.location.host + "/api/PlanSetupApi/GetItemGoupEntryPreferenceSetup",
                    async: false,
                    success: function (result) {
                        isItemGroupEntry = result.ITEM_GROUP_ENTRY;
                    }
                })
                var treeRow = $("#treelist").find('table tbody tr');
                $.each(treeRow, function (i, v) {

                    if (v.hasAttribute('aria-expanded') == true) {
                        if (isItemGroupEntry == 'N') {
                            $(this).find('td input[type=number]').attr('readonly', true);
                        }
                    }
                });
            },
            error: function (error) {
                displayPopupNotification(error, "error");
            }
        });
    };

    function GetItemDataIfPlanSetupDone(plancode, itemcode) {
        return $.ajax({
            url: window.location.protocol + "//" + window.location.host + "/api/PlanSetupApi/GetPlanDetailValue",
            data: { plancode: plancode, itemcode: itemcode }
        })
    }



    $("#resetBtn").on('click', function () {
        $("input[type='number']").val("");
    })

    $("#SaveBrandingPlanSetup").on('click', function () {
        showloader();
        var savePlanUrl = window.location.protocol + "//" + window.location.host + "/BrandingPlan/saveBrandingPlan";
        var dataList = $('#treeListForm').serialize();
        var sp = $('#planSetupForm').serialize();
        var data = JSON.stringify(dataList + "&" + sp);
        console.log(data);
        setTimeout(function () {
            $.ajax({
                type: 'POST',
                url: savePlanUrl,
                data: data,
                async: false,
                dataType: 'json',
                beforeSend: function () {
                    showloader();
                },
                complete: function () {
                    hideloader();
                },
                success: function (data) {
                    if (data == "error") {
                        displayPopupNotification(data, "error");
                    }
                    else {
                        displayPopupNotification("Succesfully Saved.", "success");
                        var startdate = $('input[name=START_DATE]').val()
                        var enddate = $('input[name=END_DATE]').val();
                        //window.location = "/Planning/Home/Setup#!Planning/Startdate/" + startdate + "/Enddate/" + enddate;
                        window.location.href = "/Planning/Home/Setup#!Planning/BrandingPlan";
                    }
                },
                error: function (error) {
                    if (error.responseText == "constraint") {
                        displayPopupNotification("Plan setup already created.", "warning");
                    }
                    else {
                        displayPopupNotification(error, "error");
                    }
                }
            });
        }, 1)
    });

    function BindPlanName(planCode) {
        var mainurl = window.location.protocol + "//" + window.location.host + "/api/PlanSetupApi/GetAllPlanNames";
        $("#ItemPlan").kendoDropDownList({
            optionLabel: "--Select Product Plan Name--",
            filter: "contains",
            dataTextField: "ITEM_EDESC",
            dataValueField: "PLAN_CODE",
            suggest: true,
            dataSource: {
                type: "json",
                serverFiltering: true,
                transport: {
                    read: {
                        url: mainurl,
                    },
                    parameterMap: function (data, action) {

                        if (data.filter != undefined) {
                            if (data.filter.filters[0] != undefined) {
                                var newParams = {
                                    filter: data.filter.filters[0].value
                                };
                                return newParams;
                            }
                            else {
                                var newParams = {
                                    filter: ""
                                };
                                return newParams;
                            }
                        }
                        else {
                            var newParams = {
                                filter: planCode
                            };
                            return newParams;
                        }
                    }
                }
            },
            dataBound: function (e) {
                if (p_code != "") {
                    showloader();
                    this.select(1);
                    if ($("#treelist").data("kendoTreeList") != undefined) {
                        $("#treelist").html('');
                        $("#treelist").data("kendoTreeList").dataSource.data([]);
                    }

                    var planCode = this.dataItem().PLAN_CODE;
                    var itemCode = this.dataItem().ITEM_CODE;
                    var freqCode = this.dataItem().TIME_FRAME_CODE;
                    var preItemCode = this.dataItem().ITEM_PRE_CODE;
                    $("#plan_type").html(this.dataItem().PLAN_TYPE);
                    $("#plan_for").html(this.dataItem().PLAN_FOR);
                    $("#choosed_frequency").html(this.dataItem().TIME_FRAME_EDESC);
                    $("#frequency_code").val(freqCode);
                    var startDate = $.datepicker.formatDate("M d, yy", new Date(this.dataItem().START_DATE));
                    var endDate = $.datepicker.formatDate("M d, yy", new Date(this.dataItem().END_DATE));
                    $("#planStartDate").html(startDate);
                    $("#planEndDate").html(endDate);
                    $('.itemHeader').css({ display: "block" });
                    GetPlanSetupTreeList(planCode, itemCode, preItemCode);
                }
            },
            change: function (e) {
                showloader();
                if ($("#treelist").data("kendoTreeList") != undefined) {
                    $("#treelist").html('');
                    $("#treelist").data("kendoTreeList").dataSource.data([]);
                }
                var planCode = this.dataItem().PLAN_CODE;
                var itemCode = this.dataItem().ITEM_CODE;
                var freqCode = this.dataItem().TIME_FRAME_CODE;
                var preItemCode = this.dataItem().ITEM_PRE_CODE;
                $("#plan_type").html(this.dataItem().PLAN_TYPE);
                $("#plan_for").html(this.dataItem().PLAN_FOR);
                $("#choosed_frequency").html(this.dataItem().TIME_FRAME_EDESC);
                $("#frequency_code").val(freqCode);
                var startDate = $.datepicker.formatDate("M d, yy", new Date(this.dataItem().START_DATE));
                var endDate = $.datepicker.formatDate("M d, yy", new Date(this.dataItem().END_DATE));
                $("#planStartDate").html(startDate);
                $("#planEndDate").html(endDate);
                $('.itemHeader').css({ display: "block" });
                GetPlanSetupTreeList(planCode, itemCode, preItemCode);
                $('.form-wizard.custom-plantwizard ul>li').first().find('a').attr("href", "/Planning/Home/Index#!Planning/CreatePlan/" + planCode);
            },
        });
    }

    function BindPartial() {
        var savePlanUrl = window.location.protocol + "//" + window.location.host + "/Plan/LoadDynamicCol";
        var param = {
            planCode: "85"
        };
        $.ajax({
            type: 'POST',
            url: savePlanUrl,
            data: JSON.stringify(param),
            async: false,
            dataType: 'json',
            success: function (data) {
                if (data == "error") {
                    displayPopupNotification(data, "error");
                }
                else {
                    displayPopupNotification("Succesfully Saved.", "success");
                }

            },
            error: function (error) {
                displayPopupNotification(error, "error");
            }
        });
    }
    $('#salesReferenceplan').on('click', function (e) {
        e.preventDefault();
        $('#salesReferenceOptionModal').modal('toggle');
    });
    $('.k-list.k-reset').slimScroll({});
</script>

<script>
    var companyCode = "@company_code";
    companyCode = companyCode == '' ? '01' : companyCode;
    var oldCompanyCode = "";
    @*var consolidate = function () {
        return {
            init: function (callback) {
                var loadAllBranchUrl = window.location.protocol + "//" + window.location.host + "/api/SalesHome/GetAllConsolidateNodes";
                var consolidateTreeDataSource = new kendo.data.HierarchicalDataSource({
                    transport: {
                        read: function (options) {
                            if (typeof options.data.branch_Code != 'undefined') {
                                $.ajax({
                                    url: loadAllBranchUrl,
                                    data: {
                                        company_code: options.data.branch_Code,
                                    },
                                    type: "GET",
                                    success: function (result) {
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                });

                            }
                            else {
                                $.ajax({
                                    url: loadAllBranchUrl,
                                    type: "GET",
                                    success: function (result) {
                                        options.success(result);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                });
                            }
                        }
                    },
                    schema: {
                        model: {
                            id: "branch_Code",
                            hasChildren: "hasBranch",
                        }
                    }
                });
                var count = 0;
                $("#consolidateTreeView").kendoTreeView({
                    checkboxes: {
                        checkChildren: true
                    },
                    autoScroll: true,
                    autoBind: true,
                    dataSource: consolidateTreeDataSource,
                    dataTextField: "branch_edesc",
                    height: 400,
                    scrollable: {
                        virtual: true
                    },
                    check: onCheck,
                    dataBound: function () {
                        try {
                            if (count == 0) {
                                var treeview = $("#consolidateTreeView").data("kendoTreeView");
                                var updateCheck = treeview.findByText('@workingContent.CurrentUserinformation.company_name');
                                if (updateCheck.length > 0)
                                    treeview.dataItem(updateCheck).set("checked", true);
                                $("#consolidateTreeView").data("kendoTreeView").expand(updateCheck);
                                count = count + 1;
                            } else if (count == 1) {
                                count = count + 1;
                                if (callback != undefined) {
                                    callback();
                                }
                            }
                        } catch (e) { }
                    }
                });
            }
        }
    }();*@
              var consolidate = function () {
        return {
            init: function (callback) {
                var loadAllBranchUrl = window.location.protocol + "//" + window.location.host + "/api/SalesHome/GetAllConsolidateNodes";
                var consolidateTreeDataSource = new kendo.data.HierarchicalDataSource({
                    transport: {
                        read: {
                            url: loadAllBranchUrl,
                            dataType: "json"
                        }
                    },
                    schema: {
                        model: {
                            id: "branch_Code",
                            children:"Items",
                            hasChildren: "hasBranch",
                        },
                        parse: function (response) {
                            
                            return _.each(_.filter(response, function (x) {
                                return x.pre_branch_code == '00';
                            }), function (y) {
                                y.Items = _.filter(response, function (z) {
                                    return z.pre_branch_code == y.branch_Code;
                                });
                                y.hasBranch = y.Items.length == 0 ? false : true;
                                });
                        }
                    }
                });
                var count = 0;
                $("#consolidateTreeView").kendoTreeView({
                    checkboxes: {
                        checkChildren: true
                    },
                    autoScroll: true,
                    autoBind: true,
                    dataSource: consolidateTreeDataSource,
                    dataTextField: "branch_edesc",
                    height: 400,
                    scrollable: {
                        virtual: true
                    },
                    //loadOnDemand: false,
                    check: onCheck,
                    dataBound: function () {
                        try {
                            if (count == 0) {
                                //check all the nodes accroding to preference
                                try {


                                }
                                catch (e) {
                                    
                                    var updateCheck = treeview.findByText('@workingContent.CurrentUserinformation.company_name');
                                    if (updateCheck.length > 0)
                                        treeview.dataItem(updateCheck).set("checked", true);
                                    treeview.expand(updateCheck);
                                }
                                count = count + 1;
                                if (count == 1) {
                                    count = count + 1;
                                    if (callback != undefined) {
                                        setTimeout(function () {
                                            callback();
                                        });

                                    }
                                }
                            }
                        } catch (e) {
                            
                        }
                    }

                });

                //  $("#consolidateTreeView").data("kendoTreeView").expand(".treeNode");
            }
        }
    }();
    function getConsolidateData(callback) {
        var kendoData = $("#consolidateTreeView").data("kendoTreeView");
        var items = getCheckedItems_consolidate(kendoData);
        var branchCodeArray = [];
        if (items.length != 0) {
            for (var i = 0; i < items.length; i++) {
                branchCodeArray[i] = items[i].branch_Code;
            }
        }
        $.each(branchCodeArray, function (i, val) {
            if (val.indexOf('.') == -1) {
                companyCode = val;
                return false;
            } else {
                companyCode = val.substring(0, val.indexOf('.'));
                return false;
            }
        });
        if (companyCode != oldCompanyCode) {
            $.post(window.location.protocol + "//" + window.location.host + "/Home/UpdateCompanyCode?companyCode=" + companyCode);
            oldCompanyCode = companyCode;
            if (callback != undefined) {
                callback();
            }
        }
    }

    function onCheck(e) {
        var treeview = $("#consolidateTreeView").data("kendoTreeView")
        var data = treeview.dataItem(e.node);
        var isExpanded = $(e.node).attr("data-expanded");
        if (data.pre_branch_code == "00") {
            if (typeof isExpanded === 'undefined' || isExpanded === false) {
                //treeview.expand(".k-item");
                treeview.collapse(".k-item");
                treeview.expand(e.node);
            }
        }
    }

    function getCheckedItems_consolidate(treeview) {
        var nodes = treeview.dataSource.view();
        return getCheckedNodes_consolidate(nodes);
    }

    function getCheckedNodes_consolidate(nodes) {
        var node, childCheckedNodes;
        var checkedNodes = [];
        for (var i = 0; i < nodes.length; i++) {
            node = nodes[i];
            if (node.checked) {
                checkedNodes.push(node);
            }
            if (node.hasChildren) {
                childCheckedNodes = getCheckedNodes_consolidate(node.children.view());
                if (childCheckedNodes.length > 0) {
                    checkedNodes = checkedNodes.concat(childCheckedNodes);
                }
            }
        }
        return checkedNodes;
    }

    consolidate.init();
</script>
<script src="@Scripts.Url(" ~/Areas/NeoERP.Planning/js/controller/PlanningMenuNavigation.js")"></script>