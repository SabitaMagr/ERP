
@{
    ViewBag.Title = "OrderDispatch";
    Layout = null;
}

<style>

    .not-active {
        pointer-events: none;
        cursor: default;
        text-decoration: none;
        color: black;
    }

    .k-splitbar.k-splitbar-horizontal {
        width: 5px;
    }


    .k-splitter {
        height: 490px !important;
    }

    .portlet-title.mingap {
        min-height: auto !important;
    }

    .bottomspance {
        padding: 2px 15px !important;
    }

    .portlet-title.mingap {
        min-height: auto !important;
    }

    .bottomspance .portlet-body {
        padding-top: 2px !important;
    }

    .portlet {
        margin-top: 0px;
        margin-bottom: 7px !important;
    }


    .bodyController {
        margin-top: 4px;
    }



    .main .k-widget.k-dropdown.k-header {
        min-height: 22px !important;
    }

    .main .k-dropdown-wrap.k-state-default {
        min-height: 24px !important;
        font-size: 11px;
    }



    .k-splitter .k-scrollable {
        overflow-y: hidden !important;
    }

    .k-scrollable .k-widget.k-treeview {
        max-height: 444px;
        overflow: auto !important;
    }

    .k-i-calendar {
        margin-top: -10px;
    }

    span.k-icon.k-i-warning {
        display: none;
    }

    .calendar-icon-2 {
        top: 24px !important;
    }
</style>

<div class="row" id="OrderDispatchCtrl" ng-controller="OrderDispatchCtrl">

    <div class="col-md-12">

        <div class="portlet light form-fit bordered bottomspance">
            <div class="portlet mingap">

                <div class="portlet-title">

                    <div class="caption caption-title ng-binding">
                        <a class="btn-back pull-left" data-toggle="tooltip" data-placement="top" title="Back To Dashboard" href="/DocumentTemplate/Home/Dashboard">
                            <i class="fa fa-arrow-circle-left"></i>
                        </a>
                        <i class="fa fa-gift font-green-haze"></i>
                        <span class="caption-subject font-green-haze bold uppercase">{{FormName}}</span>
                    </div>

                    <div class="actions">

                        <a  id="PrintDispatch" data-toggle="tooltip" title="(Alt + P)" ng-click="printDispatch()" href="javascript:;">
                            <div class="btn btn-circle btn-icon-only btn-default" data-placement="left" data-html="true" data-container="body" data-toggle="tooltip"  title="Print Dispatch">
                                <i class="fa fa-print"></i>
                            </div>
                        </a>


                       @Html.Partial("~/Views/Shared/Controls/ConsolidateFilter.cshtml",true)

                        <a class="btn btn-success" data-toggle="tooltip" data-placement="top" title="(Alt + P)" ng-click="findOrderDispatchForDocument([])" href="javascript:;">
                            <i class="fa fa-search-plus"></i> View Planning
                        </a>
                        <a class="btn btn-success" data-toggle="tooltip" data-placement="top" title="(Alt + P)" ng-click="viewPlannedReport()" href="javascript:;">
                            <i class="fa fa-file-excel-o"></i> View Planned
                        </a>

                    </div>

                </div>

                <div class="portlet-body">

                    <div class="row">

                        <div class="col-md-12 col-sm-12 form-group">
                            <div class="form-group col-md-3 col-sm-3">
                                <label for="element">Dispatch Log No.</label>
                                <div>
                                    <input type="text" id="dispatchlog" name="dispatchlog" ng-model="Dispatch_no" disabled />
                                </div>

                            </div>
                            <div class="form-group  col-md-3 col-sm-3">
                                <label for="element">Dispatch From:</label>
                                <div>
                                    <input type="text" id="dispatchfrom" name="dispatchfrom" ng-model="Dispatcher" />
                                </div>
                            </div>
                            <div class="form-group col-md-3 col-sm-3">
                                <label for="element">Document:</label>
                                <div class="btn-group menuDropdown">
                                    <div class="btn-group">
                                        <select class="form-control input-medium" ng-model="selectedDocument" name="document" id="document"
                                                ng-options="dl.FORM_EDESC for dl in DocumentList">
                                            <option value="">Select Document</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group  col-md-3 col-sm-3">
                                <label for="element">Dealer/Party:</label>
                                <div class="btn-group menuDropdown">
                                    <div class="btn-group">
                                        <select class="form-control input-medium" ng-model="selectedDocument" name="dealer" id="dealer"
                                                ng-options="id.PARTY_TYPE_EDESC for id in AllPartyType">
                                            <option value="">Select Dealer</option>
                                        </select>
                                        @*<select class="form-control input-medium" ng-model="selectedDealer" name="dealerDdl" id="dealerDdl">
                                            <option value="">Select Dealer</option>
                                            <option value="DLR">Dealer</option>
                                            <option value="LCD">Lc Dealer</option>
                                            <option value="LD">Local Debtors</option>
                                            <option value="SE">Suhani Enterprises</option>
                                            <option value="SCI">Sundry Creditors-Import</option>
                                            <option value="SCS">Sundry Creditors-Scrap</option>
                                            <option value="SCC">Sundry Creditors Coal</option>
                                            <option value="SCL">Sundry Creditors-Local</option>
                                            <option value="SCSS">Sundry Creditors-Store</option>
                                            <option value="SD">Sundry Debtors</option>
                                        </select>*@
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-12 col-sm-12 form-group">

                            <div class="col-md-6 col-sm-6">

                                <label for="element">From Date:</label>
                                <div>
                                    <input id="englishdatedocument" kendo-date-picker
                                           ng-model="Dispatch_From"
                                           k-options="monthSelectorOptionsSingle" data-toggle="tooltip" title="Select date" />


                                    <div class="col-xs-6 col-sm-6 col-md-6 nopadding-left pl-1">
                                        <input type="text" id="nepaliDate5" ng-model="Dispatch_To" data-checkfor="englishdatedocument" onchange="ConvertNepToEng(this)" data-toggle="tooltip" title="Select date" class="nepali-calendar" />
                                        <i class="fa fa-calendar form-control-feedback calendar-icon-2" data-toggle="tooltip" title="Select date" style="top:5px !important;"></i>
                                    </div>

                                </div>
                            </div>

                            <div class="col-md-6 col-sm-6">
                                <label for="element">Planning as on Date:</label>
                                <div>
                                    <input id="englishdatedocument1" kendo-date-picker
                                           ng-model="PlanningDate"
                                           k-options="monthSelectorOptionsSingle1" data-toggle="tooltip" title="Select date" />


                                    <div class="col-xs-6 col-sm-6 col-md-6 nopadding-left pl-1">
                                        <input type="text" id="nepaliDate51" ng-model="PlanningTo" data-checkfor="englishdatedocument" onchange="ConvertNepToEng(this)" data-toggle="tooltip" title="Select date" class="nepali-calendar" />
                                        <i class="fa fa-calendar form-control-feedback calendar-icon-2" data-toggle="tooltip" title="Select date" style="top:5px !important;"></i>
                                    </div>

                                </div>
                            </div>


                        </div>

                    </div>


                    <div class="divider"></div>


                    <div class="row">

                        <div class="tabbable">
                            <a class="btn btn-success not-active dispatch" style="float:right;margin-right:17px;" data-toggle="tooltip" data-placement="top" title="(Alt + D)" ng-click="dispatchOrder()" href="javascript:;">
                                <i class="fa fa-plus"></i> Dispatch
                            </a>
                            <br />
                            <hr />
                            <div class="" style="overflow:auto">
                                @Html.Partial("~/Areas/NeoERP.DocumentTemplate/Views/Shared/PartialView/_GridToolbar.cshtml")
                                <kendo-grid id="dispatchGrid" options="dispatchGridOptions" k-rebind="dispatchGridOptions" class="kendo_gride_table" style="width:180%;">
                                </kendo-grid>
                            </div>
                        </div>

                    </div>


                </div>


                <div class="modal fade-out" id="dispatchTagModal" data-backdrop="static" tabindex="-1" data-width="500">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <div type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="close()" next-on-tab>&times;</div>
                                <h4 class="modal-title">
                                    <span class="fa fa-file"></span>
                                   Select all Company and Branches
                                </h4>
                            </div>
                            <div class="modal-body mb--8">

                                <div class="row">
                                     <div id="companyBranchTreeView" style="max-height:400px;"></div>
                                  
                                </div>

                            </div>

                            <div class="modal-footer">

                                <div class="form-group col-md-12">
                                    <button class="btn btn-green-light" id="btnConfirmToTag">Ok</button>
                                    <button class="btn btn-green-light" id="btnConfirmToTag" ng-click="close()" data-dismiss="modal">Cancel</button>
                                </div>

                            </div>

                        </div>
                    </div>
                </div>
            </div>

    </div>

   </div>
</div>
                
    <script>

        function showloader() {
            $(".busy-loader").css("display", "block");
        }
        function hideloader() {
            $(".busy-loader").css("display", "none");
        }

        function toogleDispatch(event) {
            row = event.closest("tr"),
                grid = $("#dispatchGrid").data("kendoGrid"),
                dataItem = grid.dataItem(row);


           // $("#txtPlanning_" + dataItem.DISPATCH_NO).show();
          
           // document.getElementById("txtPlanning_" + dataItem.DISPATCH_NO).value = dataItem.QUANTITY;
           // $('#txtPlanning_' + dataItem.DISPATCH_NO).focus();
            var qty = dataItem.PendingToPlanning;
            $("#txtPlanning_" + dataItem.DISPATCH_NO).val(qty);
            $("#txtPlanning_" + dataItem.DISPATCH_NO).show();
            var checkBox = document.getElementById("isDispatch_" + dataItem.DISPATCH_NO);
            if (checkBox.checked == true) {

                $(".dispatch").removeClass("not-active");
            } else {
                $(".dispatch").addClass("not-active");
                $("#txtPlanning_" + dataItem.DISPATCH_NO).hide();
                $("#txtPendingToDispatch_" + dataItem.DISPATCH_NO).hide();
                $("#txtPlanningAmount_" + dataItem.DISPATCH_NO).hide();
            }
        }


        function validateDispatch(event) {
            debugger;
            row = event.closest("tr"),
                grid = $("#dispatchGrid").data("kendoGrid"),
                dataItem = grid.dataItem(row);

            if (dataItem.DUE_QTY < event.value) {
                console.log("dataItem.DueQTY=================>>>>>" + dataItem.DUE_QTY);
                console.log("event.Value=================>>>>>" + event.value);
                alert("Dispatch Planning QTY is greater then Pending Planning QTY");
                $(event).closest("tr").removeClass();
                $('#txtPlanning_' + dataItem.DISPATCH_NO).hide();
                document.getElementById("isDispatch_" + dataItem.DISPATCH_NO).checked = false;
                $(".dispatch").addClass("not-active");
            } else {
                var planningAmount = $('#txtPlanning_' + dataItem.DISPATCH_NO).val() * dataItem.UNIT_PRICE;
                var pendingToDispatch = dataItem.PendingToPlanning - $('#txtPlanning_' + dataItem.DISPATCH_NO).val();

                $('#txtPendingToDispatch_' + dataItem.DISPATCH_NO).show();
                $('#txtPendingToDispatch_' + dataItem.DISPATCH_NO).val(pendingToDispatch);

                $('#txtPlanningAmount_' + dataItem.DISPATCH_NO).show();
                $('#txtPlanningAmount_' + dataItem.DISPATCH_NO).val(planningAmount);
            }
            // alert(event.val);
        }



        $(".nepali-calendar").nepaliDatePicker({
            npdMonth: true,
            onFocus: true,
            npdYear: true,
            npdYearCount: 10,
            altFormat: "dd-MMM-YYYY",
            dateFormat: "dd-MMM-YYYY",
            onChange: function (evt) {
                var nepalidate = $("#nepaliDate5").val();
                var nepalidate1 = $("#nepaliDate51").val();
                var Engdate = BS2AD(nepalidate);
                var Engdate1 = BS2AD(nepalidate1);
                var FormattedEngDate = moment(Engdate).format('DD-MMM-YYYY');
                var FormattedEngDate1 = moment(Engdate1).format('DD-MMM-YYYY');
                $("#englishdatedocument").val(FormattedEngDate);
                $("#englishdatedocument1").val(FormattedEngDate1);
            }
        });

        function ConvertNepToEng(e) {
            var date = BS2AD($("#nepaliDate5").val());
            var date1 = BS2AD($("#nepaliDate51").val());
            var FormattedEngDate = moment(date).format('DD-MMM-YYYY');
            var FormattedEngDate1 = moment(date1).format('DD-MMM-YYYY');
            $("#englishdatedocument").val(FormattedEngDate);
            $("#englishdatedocument1").val(FormattedEngDate1);
        }

        $('a').tooltip();

        function ConvertEngDateToNep(eng) {

            if (eng === undefined)
                return;
            var engmonthreq = "";
            var arr = eng.split('-');
            var day = (arr[0]);
            var month = (arr[1]);
            var year = (arr[2]);
            if (month == "Jan") { engmonthreq = "01" }
            else if (month == "Feb") { engmonthreq = "02" }
            else if (month == "Mar") { engmonthreq = "03" }
            else if (month == "Apr") { engmonthreq = "04" }
            else if (month == "May") { engmonthreq = "05" }
            else if (month == "Jun") { engmonthreq = "06" }
            else if (month == "Jul") { engmonthreq = "07" }
            else if (month == "Aug") { engmonthreq = "08" }
            else if (month == "Sep") { engmonthreq = "09" }
            else if (month == "Oct") { engmonthreq = "10" }
            else if (month == "Nov") { engmonthreq = "11" }
            else if (month == "Dec") { engmonthreq = "12" }
            engdatereq = year + '-' + engmonthreq + '-' + day;
            return convertednepdate = AD2BS(engdatereq);
        }

        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
            consolidate.init();
            window.scrollTo(0, 0);
        })
    </script>

    <script type="text/javascript">
        function loadFavouriteMenu() {
            //load parentMenu
            $("#parentMenu").kendoDropDownList({
                index: 0,
                dataTextField: "MENU_EDESC",
                dataValueField: "MENU_EDESC",
                dataSource: {
                    transport: {
                        read: {
                            url: "/api/SalesHome/GetDynamicMenu?ModuleCode=" + moduleCode,
                        }
                    },
                    requestEnd: function (e) {
                        e.response.unshift({ MENU_EDESC: "Favourite", GROUP_SKU_FLAG: "G", ICON_PATH: "", MENU_NO: "01", MODULE_CODE: "01" });

                    }
                }
            });
            var fav = Arg("fav");

            if (fav != undefined && reportConfig != undefined && fav == reportConfig.reportName) {
                //reportConfig
                $("#favTitle").val(reportConfig.reportName);
                $('#color').val(reportConfig.color);
                $('#favColor').val(reportConfig.color);
                try { $("#favIcon").val(reportConfig.icon.replace('fa ', '')); } catch (e) { }
                $("#favIconClass").removeAttr("class").addClass(reportConfig.icon);
                $("#favDescription").val(reportConfig.description);
                $("#favSave").text("Update");
                $("#parentMenu").data("kendoDropDownList").value(reportConfig.parentMenu);
            }
            else {
                if ($("#favTitle").val().length > 0) {
                    $("#favform")[0].reset();
                    $("#favSave").text("Save");
                    setTimeout(function () { $("#parentMenu").data("kendoDropDownList").select(0); }, 2000)
                }


            }


            $('.iconpicker-container').iconpicker();

            //init validator
            $("#favform").validate({
                rules: {
                    favTitle: "required"
                },
                messages: {
                    favTitle: "Please specify your name"

                }
            });
            $("#favModal").modal("show");
        }
        function saveFavouriteMenu() {

            var valid = $("#favform").valid();
            if (!valid) {
                displayPopupNotification("Invalid Field", "warning");
                return;
            }


            var title = $("#favTitle").val();
            var param = location.hash.indexOf('?') != -1 ? location.hash.substring(0, location.hash.indexOf('?')) : location.hash;

            SaveReportConfigSetting({
                gridName: "grid",
                reportName: title,
                parentReportName: "",
                isFavroite: true,
                virtualPath: param,
                icon: "fa " + $("#favIcon").val(),
                color: $("#favColor").val() == "" ? $('#color').val() : $("#favColor").val(),
                parentMenu: $("#parentMenu").data("kendoDropDownList").value(),
                description: $("#favDescription").val(),
                defaultPageSize: $("#defaultPageSize").val() == "" ? 100 : $("#defaultPageSize").val(),
                itemPerPage: $("#itemsPerPage").val(),
                moduleCode: "01",
                HideOption: $("#facHideOption").prop("checked") == true ? "Hide" : "show",
                dateFormat: $("#dateFormat option:selected").val()
            });
        }
        function favTitleChange() {
            if (Arg("fav") != undefined && Arg("fav").trim() == $("#favTitle").val().trim())
                $('#favSave').text('Update');
            else
                $('#favSave').text('Save');
        }
        function CollapseAll() {

            var elementsA = document.querySelectorAll("#grid a.k-icon.k-minus");
            if (elementsA.length > 0) {

                for (var i = 0; i < elementsA.length; i++) {
                    $(elementsA[i]).trigger("click");
                }
                return;
            }
            var elementsB = document.querySelectorAll("#grid a.k-icon.k-i-collapse");
            for (var i = 0; i < elementsB.length; i++) {
                $(elementsB[i]).trigger("click");
            }
        }
        function ExpandAll() {
            debugger;
            var elementsB = document.querySelectorAll("#grid a.k-icon.k-i-expand");
            if (elementsB.length > 0) {

                for (var i = 0; i < elementsB.length; i++) {
                    $(elementsB[i]).trigger("click");
                }
                return;
            }
            var elementsA = document.querySelectorAll("#grid a.k-icon.k-plus");
            for (var i = 0; i < elementsA.length; i++) {
                $(elementsA[i]).trigger("click");
            }
        }
        function GridSearch() {
            debugger;
            if ($.trim($('.grid-search').val()) != '') {
                $('.search input').css('margin-left', '-9px !important')
            }
            else {
                $('.search input').css('margin-left', '0px')
            }

            var grid = $("#dispatchGrid").data("kendoGrid");
            var tempServerFilter = grid.dataSource.options.serverFiltering;
            grid.dataSource.options.serverFiltering = false;
            var filter = [];
            $.each(grid.columns, function (i, v) {
                if (v.field != undefined) {
                    var searchText = $.trim($('.grid-search').val());
                    var model = grid.dataSource.options.schema.model.fields[v.field];
                    var type = "string";
                    if (model != undefined)
                        type = model.type;
                    if (type === "string")
                        filter.push({ field: v.field, operator: "contains", value: searchText });
                    else if (type === "number")
                        filter.push({ field: v.field, operator: "eq", value: searchText });
                    else if (type === "date") {
                        var dateValue = new Date(searchText);
                        searchText = dateValue == "Invalid Date" ? searchText : dateValue;
                        filter.push({ field: v.field, operator: "eq", value: searchText });
                    }
                }

            });
            var filter = {
                logic: "or",
                filters: filter,
            }

            grid.dataSource.filter(filter);
            if ($(".grid-search").val().length == 0)
                grid.dataSource.filter([]);
            grid.bind("dataBound", function () {
                grid.dataSource.options.serverFiltering = tempServerFilter;
            });


        }

        $("#applyConsolidate").click(function () {
            var doc = $("#document").val();
            if (doc=="") {
                alert("Please selected document");
            } else {
                var selCom = $("#consolidateTreeView").data("kendoTreeView");
                var items = getCheckedItems(selCom);
                console.log("SelCom=========================>>>" + JSON.stringify(items));

                angular.element(document.getElementById('OrderDispatchCtrl')).scope().findOrderDispatchForDocument(items);
            }
        });


        function getCheckedItems(treeview) {
            var nodes = treeview.dataSource.view();
            return getCheckedNodes(nodes);
        }


        function getCheckedNodes(nodes) {
            var node, childCheckedNodes;
            var checkedNodes = [];

            for (var i = 0; i < nodes.length; i++) {
                node = nodes[i];
                if (node.checked) {
                    checkedNodes.push(node);
                }

                // to understand recursion, first
                // you must understand recursion
                if (node.hasChildren) {
                    childCheckedNodes = getCheckedNodes_consolidate(node.children.view());
                    if (childCheckedNodes.length > 0) {
                        checkedNodes = checkedNodes.concat(childCheckedNodes);
                    }
                }

            }

            return checkedNodes;
        }

    </script>
