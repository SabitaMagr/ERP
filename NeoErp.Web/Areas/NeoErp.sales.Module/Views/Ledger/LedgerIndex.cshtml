
<style>
    .nav-tabs {
        /*border-bottom: 1px solid whitesmoke;
           position: relative;*/
        width: 100% !important;
    }

    /*.tabbable-line > .nav-tabs > li.Legerclass.active {
               background: 0 0;
               border-bottom: 4px solid #36c6d3;
               position: relative;
           }*/
    .k-list.k-reset {
        max-height: 300px !important;
    }


    #splitter {
        height: 600px;
        margin: 0 auto;
    }

    btn-group {
        margin-right: 13px !important;
    }

    /*.page-bar {
               margin-bottom: 0px !important;
           }*/

    .k-grid table {
        table-layout: fixed;
    }

    .no-data {
        background-color: red;
    }
    /*#grid thead{
                font-size:11px;
           }*/
    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .k-grid-content {
        font-size: 10px;
    }

    .k-grid-footer {
        font-size: 10px;
    }

    .k-list.k-reset {
        height: 200px;
        overflow-x: hidden;
    }
    /*.tabbable-line.tab2 li {
           display: inline-flex !important;
           float: none !important;
       }*/
    .nav-pills > li.active > a, .nav-pills > li.active > a:focus, .nav-pills > li.active > a:hover {
        color: black;
        background-color: white;
    }

    .slimScrollBar {
        border-radius: 5px !important;
        background-color: #333 !important;
    }

    .dropdownlist .dropdown.open > .dropdown-toggle {
        background-color: #eee !important;
        border-top: 1px solid #ddd;
        border-right: 1px solid #ddd;
        border-bottom: none !important;
        border-left: 1px solid #ddd;
    }


    /*.nav > li > a:focus, .nav > li > a:hover {
              background-color: #eee !important;
       border-top: 1px solid #ddd !important;
       border-right: 1px solid #ddd !important;
       border-bottom: none !important;
       border-left: 1px solid #ddd !important;
          border-radius: 5px 5px 0px 0px !important;
    }*/

    .portlet.box.green > .portlet-title {
        background-color:#44A12F;
    }
    .portlet.box > .portlet-title
    {
        min-height:auto !important;
    }
        .portlet.box > .portlet-title > .caption
        {
            padding:8px 0px;
            font-size:13px;
        }
    .portlet.box.green .k-multiselect-wrap {
        min-height: 22px !important;
        font-size:11px;
       
    }
    .portlet.box.green .k-multiselect-wrap ul li{
        padding:0px 7px;
    }
</style>
<div class="page-content">
    <div class="page-bar">
        <ul class="page-breadcrumb">
            @*<li>
                    <i class="fa fa-home"></i>
                    <a href="/sales/SalesHome/Dashboard">Home</a>
                    <i class="fa fa-angle-right"></i>
                </li>*@
            @*<li>
                    <a href="#/Ledger/LedgerIndex">Ledger Register</a>
                    <i class="fa fa-angle-right"></i>
                </li>*@
            @*<li>
                    <a href="sales/saleshome/dashboard/Dashboard">Organiser</a>
                    <i class="fa fa-angle-right"></i>
                </li>*@
        </ul>
        <div class="page-toolbar">
            <div class="btn-group pull-right">
                <div class="btn btn-sm" data-container="body" data-placement="bottom" data-original-title="Click To Filter Date Range">
                </div>
                <div class="btn-group" data-toggle="tooltip" data-placement="bottom">
                    @Html.Partial("~/Views/Shared/Controls/DateField.cshtml", false)
                </div>
                <a class="btn btn-circle btn-icon-only btn-default" id="RunQuery" href="javsascript:;">
                    <i class="icon-control-play"></i>
                </a>
            </div>
        </div>
    </div>

    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="row collapse in" id="demo">
        <div class="col-md-12">
            <div class="portlet light bordered">

                <div class="portlet-body form">
                    <div class="tabbable-line tab2">

                        <ul class="nav nav-tabs nav-pills dropdownlist " id="tabs">

                            <li class="active" id="firsttab"><a data-toggle="tab" href="#tab1">Ledger Search</a></li>
                        </ul>

                        <div class="tab-content">
                            <div class="tab-pane active" id="tab1">
                                
                                    <div id="splitter">
                                       
                                            <div class="portlet box green">
                                                <div class="portlet-title">
                                                    <div class="caption">
                                                        <i class="fa fa-list-alt"></i>
                                                <span class="caption-subject bold">Account List</span>
                                                    </div>


                                                </div>
                                                <div class="portlet-body">
                                                    <select id="accountMultiSelect"></select>
                                                    <div class="form-body">
                                                        <div class="">
                                                            <label for="form_control_1">Account List</label>
                                                        </div>
                                                        <div id="ledgerTreeView"></div>
                                                    </div>
                                                </div>
                                            </div>
                                       
                                        <div>
                                            <div class="portlet box green">
                                                <div class="portlet-title">
                                                    <div class="caption">
                                                        <i class="fa fa-list-ul"></i>
                                                        <span class="caption-subject bold">Ledger List</span>
                                                    </div>
                                                    <div class="ledgericon pull-right">
                                                        <a id="run-ldeger" href="javsascript:;">
                                                            <i class="icon-control-play icon-play"></i>
                                                        </a>
                                                    </div>
                                                </div>
                                                <div class="portlet-body">
                                                    <select id="ledgerMultiSelect"></select>
                                                    <div class="form-body" id="ledgerdiv">

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div>
                                            <div class="portlet box green">
                                                <div class="portlet-title">
                                                    <div class="caption">
                                                        <i class="fa fa-list-ul"></i><span class="caption-subject bold">Sub Ledger List</span>
                                                    </div>
                                                    <div class="ledgericon pull-right">
                                                        <a id="run-sub-ldeger" href="javsascript:;">
                                                            <i class="icon-control-play icon-play"></i>
                                                        </a>
                                                    </div>
                                                </div>
                                                <div class="portlet-body">
                                                    <select id="subaccountledgermultiselect"></select>
                                                    <div class="form-body" id="subaccountdiv">
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                              
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <!-- END PAGE CONTENT-->
    <script src="@Scripts.Url("~/JS/DateFilter.js?V5")" type="text/javascript"></script>
    <script src="@Scripts.Url("~/JS/dynamicReport.js?V2")" type="text/javascript"></script>
    <script type="text/javascript">
        var a = location.hash;
        var b = location.pathname;
        var url = (b + a);
        //  $(".active").removeClass();
        $("a[href='" + url + "']").parent().addClass("active");
        $("a[href='" + url + "']").parent().parent().slideDown("slow");

    </script>
    <script>
        $("#run-sub-ldeger").on("click", function () {
            var ledgerIds = [];
            $("#list-view-subledgerEvent").find("input:checked").each(function () {
                ledgerIds.push($(this).val());
            });
            var multiselectLedgerIds = [];
            var multiselect = $("#subaccountledgermultiselect").data("kendoMultiSelect");
            multiselectLedgerIds = multiselect.value();
            if (ledgerIds.length == 0 && multiselectLedgerIds == 0) {
                return;
            }
            if (ledgerIds.length > 0 && multiselectLedgerIds.length > 0) {
                bootbox.dialog({
                    message: "Choose Ledger to run from ",
                    title: "Ledger Behaviour",
                    buttons: {
                        multiselectLedger: {
                            label: "Multiselect Ledger",
                            className: "blue",
                            callback: function () {
                                ShowSubLedgerDetailsEach(multiselectLedgerIds, "multiselect");// rollback to ShowSubLedgerDetails on earlier requirement
                            }
                        },
                        listLedger: {
                            label: "List Ledger",
                            className: "blue",
                            callback: function () {
                                ShowSubLedgerDetailsEach(ledgerIds, "list");
                            }
                        }
                    }
                });

                return;
            }
            if (ledgerIds.length > 0) {
                ShowSubLedgerDetailsEach(ledgerIds, "list");
            }
            else {
                ShowSubLedgerDetailsEach(multiselectLedgerIds, "multiselect");
            }
        });

        $("#run-ldeger").on("click", function () {
            var ledgerIds = [];
            $("#list-view-ledgerEvent").find("input:checked").each(function () {
                ledgerIds.push($(this).val());
            });

            var multiselectLedgerIds = [];
            var multiselect = $("#ledgerMultiSelect").data("kendoMultiSelect");
            multiselectLedgerIds = multiselect.value();
            if (ledgerIds.length == 0 && multiselectLedgerIds == 0) {
                return;
            }

            if (ledgerIds.length > 0 && multiselectLedgerIds.length > 0) {
                bootbox.dialog({
                    message: "Choose Ledger to run from ",
                    title: "Ledger Behaviour",
                    buttons: {
                        multiselectLedger: {
                            label: "Multiselect Ledger",
                            className: "blue",
                            callback: function () {
                                ShowLedgerDetails(multiselectLedgerIds, "multiselect");//revert to ShowLedgetDetails on rollback of requirement
                            }
                        },
                        listLedger: {
                            label: "List Ledger",
                            className: "blue",
                            callback: function () {
                                ShowLedgerDetails(ledgerIds, "list");//revert to ShowLedgetDetails on rollback of requirement
                            }
                        }
                    }
                });

                return;
            }
            if (ledgerIds.length > 0)
            {
                ShowLedgerDetails(ledgerIds, "list"); //revert to ShowLedgetDetails on rollback of requirement
            }
            else
            {
                ShowLedgerDetails(multiselectLedgerIds, "multiselect");//revert to ShowLedgetDetails on rollback of requirement
            }

        });

        $("#subaccountdiv").on("dblclick", ".subledgerEvent", function () {
            ShowSubLedgerDetailsEach($(this).find('a').data("ledgerid"));
        });

        function closeTab()
        {
            var tabContent = $(this).parent().attr("href");
            var tooltip = $(this).parent().attr("aria-describedby");
            if (tooltip != undefined) {
                $("#" + tooltip).remove();
            }
            var closestLi = $(this).closest("li");
            var prev = closestLi.prev("li");
            if (prev == undefined || prev.length == 0)
            {
                var prevDropdown = $(this).closest(".dropdown");
                prev = $(this).closest(".dropdown").siblings().last();

            }
            closestLi.remove();
            var showTab = prev.find("a").attr("href");
            $('.nav-tabs a[href="' + showTab + '"]').tab('show');
            $(tabContent).remove();

            $(window).resize(); // windows resize for the ledger

        }

        $("#firsttab").on("click", function () {
            $(".tab-pane").removeClass("active");
            $("#tab1").addClass('active');
            $('#tabs a:first').tab('show');
        });
        $("#ledgerdiv").on("dblclick", ".ledgerEvent", function () {
            ShowLedgerDetails($(this).find('a').data("ledgerid"));
        });

        $(document).ready(function () {
            
            BindKendoSplitter();
        });

        function BindKendoSplitter()
        {
            
            $("#splitter").kendoSplitter({
                panes: [
                    { collapsible: true },
                    { collapsible: false },
                    { collapsible: true }
                ]
            });
            
            var urltest = Arg.url(window.location.protocol + "//" + window.location.host + "/Sales/Ledger/ShowLedgerTransaction", { accountCode: '0' });
            $.ajax({
                url: urltest,
                //data: 'customerId=' + id + '&Level=1' + currentnode.Level,
                //  data: currentnode,
                type: "GET",
                dataType: "html",
                success: function (result) {
                    
                    $("#ledgerdiv").html(result);
                },
                error: function (result) {
                }
            });
            
            var subaccountLedger = Arg.url(window.location.protocol + "//" + window.location.host + "/Sales/Ledger/ShowSubAccount", { accountCode: '0' });
            $.ajax({
                url: subaccountLedger,
                //data: 'customerId=' + id + '&Level=1' + currentnode.Level,
                //  data: currentnode,
                type: "GET",
                dataType: "html",
                success: function (result) {
                    $("#subaccountdiv").html(result);
                },
                error: function (result) {
                }
            });
        }

        function ShowLedgerDetails(ledgerId, type, tabName)
        {
            
            var accountCodes = ledgerId.toString().split(",");

            for (var i = 0; i < accountCodes.length; i++)
            {
                var accountName = "";
                if (type == "list" || type==undefined)
                {
                    accountName = $("a[data-ledgerid='" + accountCodes[i] + "']").attr("data-label");
                }
                else if(type == "multiselect")
                {
                    var dataitem = $("#ledgerMultiSelect").data("kendoMultiSelect").dataItems();

                    var item = $.grep(dataitem, function (item, index) {
                        return item.AccountCode == accountCodes[i];

                    });

                    if (item != undefined && item != null && item.length > 0)
                    {
                        accountName = item[0].AccountName;
                    }

                }
                else if(type=="account")
                {
                    accountName = tabName;

                }
                var nextTab = $('#tabs li').size() + 1;

                ShowLedgerTab(accountCodes[i], accountName, nextTab);

            }
        }

        function ShowSubLedgerDetailsEach(subLedgerId, type) {
            
            var subCodes = subLedgerId.toString().split(",");
            for (var i = 0; i < subCodes.length; i++) {

                var subAccountName = "";
                var accountCode = "";
                if (type == "list" || type == undefined) {
                    var subLedger = $("a[data-ledgerid='" + subCodes[i] + "']");
                    subAccountName = subLedger.attr("data-label");
                    accountCode = subLedger.attr("data-accountid");
                }
                else if (type == "multiselect") {
                    var dataitem = $("#subaccountledgermultiselect").data("kendoMultiSelect").dataItems();

                    var item = $.grep(dataitem, function (item, index) {
                        return item.SubCode == subCodes[i];

                    });

                    if (item != undefined && item != null && item.length > 0 && item.length > 0) {
                        subAccountName = item[0].SubEdesc;
                        accountCode = item[0].AccCode;
                    }

                }
                else if (type == "account") {
                    subAccountName = tabName;

                }
                var nextTab = $('#tabs li').size() + 1;

                ShowSubLedgerTab(accountCode, subCodes[i], subAccountName, nextTab);

            }

        }

        function ShowSubLedgerTab(accCode, subAccountCode, subAccountName, nextTab) {
            var formEnglishDate = $("#FromDateVoucher").val();
            var toEnglishDate = $("#ToDateVoucher").val();
            var jsonData = JSON.stringify({ formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: accCode, subCode: subAccountCode.toString(), totalTab: nextTab}).replace(/"/g, "!");
            $('<li class="Legerclass"><a href="#tab' + nextTab + '" data-toggle="tab" id="actab' + nextTab + '"> ' + subAccountName + '<span class="close" id="close' + nextTab + '">×</span><input type="hidden" class="subLedgerList" value = "' + jsonData + '"> <div class="clearfix"></div></a></li>').appendTo('#tabs');
            $.ajax({
                url: '@Url.Action("PopUpSubLedgerDetails", "Ledger")',
                data: { formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: accCode, subCode: subAccountCode, totalTab: nextTab },
                cache: false,
                type: "POST",
                dataType: "html",
                success: function (data, textStatus, XMLHttpRequest) {
                    $('<div class="tab-pane" id="tab' + nextTab + '">' + data + '</div>').appendTo('.tab-content');
                    $('#close' + nextTab).on("click", closeTab);
                    //$('#actab' + nextTab).tab('show');
                    $('#tabs a:last').tab('show');
                    $("#tab" + nextTab).addClass('active');
                    $(window).resize();
                }
            });
        }


        function ShowLedgerTab(acountCode,accountName,nextTab)
        {
            
            var formEnglishDate = $("#FromDateVoucher").val();
            var toEnglishDate = $("#ToDateVoucher").val();
            var jsonData = JSON.stringify({ formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: acountCode,totalTab: nextTab, AccountName: accountName }).replace(/"/g, "!");
            $('<li><a href="#tab' + nextTab + '" data-toggle="tab" role="tab" id="atab' + nextTab + '"> ' + $.trim(accountName.toString()) + '<span class="lclose" id="close' + nextTab + '">×</span><input type="hidden" class="ledgerList" value = "' + jsonData + '"> <div class="clearfix"></div></a></li>').appendTo('#tabs');
            $.ajax({
                url: '@Url.Action("PopUpLedgerDetails", "Ledger")',
                data: { formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: acountCode.toString(), totalTab: nextTab },
                cache: false,
                type: "POST",
                dataType: "html",
                success: function (data, textStatus, XMLHttpRequest) {
                    $('<div class="tab-pane" id="tab' + nextTab + '">' + data + '</div>').appendTo('.tab-content');
                    $('#close' + nextTab).on("click", closeTab);
                    //$('#atab'+nextTab).tab('show');
                    $(window).resize();
                    $.ajax({
                        url: '@Url.Action("BreadCrumbs", "Ledger")',
                        data: { AccountCode: acountCode },
                        cache: false,
                        type: "POST",
                        dataType: "html",
                        success: function (data, textStatus, XMLHttpRequest) {
                            var breadCrumbId = "#breadCrumbDiv" + nextTab;
                            $(breadCrumbId).html(data);
                            $('#tabs a:last').tab('show');
                            $("#tab" + nextTab).addClass('active');
                            $(window).resize();
                        }
                    });
                }
            });

        }

        function ShowLedgetDetails(ledgerId, type, tabName) {
            
                var formEnglishDate = $("#FromDateVoucher").val();
                var toEnglishDate = $("#ToDateVoucher").val();
                var accountCodes = ledgerId.toString().split(",");
                var accountName = [];

                if (type == "list" || type==undefined) {
                    if (accountCodes.length > 1) {
                        $.each(accountCodes, function (index, item) {
                            accountName.push($("a[data-ledgerid='" + item + "']").attr("data-label"));
                        });
                    }
                    else {
                        accountName.push($("a[data-ledgerid='" + ledgerId + "']").attr("data-label"));
                    }
                }
                else if (type == "multiselect") {
                    var dataitem = $("#ledgerMultiSelect").data("kendoMultiSelect").dataItems();
                    $.each(dataitem, function (index, item) {
                        accountName.push(item.AccountName);
                    });
                }
                else if (type == "account")
                {
                    accountName = tabName;
                }

                var nextTab = $('#tabs li').size() + 1;

                // create a tab content
                $.ajax({
                    url: '@Url.Action("PopUpLedgerDetails", "Ledger")',
                    data: { formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: ledgerId.toString(), totalTab: nextTab },
                    cache: false,
                    type: "POST",
                    dataType: "html",
                    success: function (data, textStatus, XMLHttpRequest) {

                        
                        var jsonData = JSON.stringify({ formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: accountCodes.toString(), totalTab: nextTab, AccountName: accountName}).replace(/"/g, "!");
                        $('<div class="tab-pane" id="tab' + nextTab + '">' + data + '</div>').appendTo('.tab-content');
                        // create the tab
                        if (type!="account" && accountCodes.length > 1) {
                            $('<li><a href="#tab' + nextTab + '" class="tooltips" data-toggle="tab" role="tab"  data-placement="bottom" data-original-title="' + $.trim(accountName.toString()) + '">' + 'Ledger Detail' + '<span class="close" id="'+ nextTab+'">×</span> <div class="clearfix"></div></a></li>').appendTo('#tabs');
                            $('.tooltips').tooltip();
                        }
                        else {
                            $('<li><a href="#tab' + nextTab + '" data-toggle="tab"  role="tab"> ' + $.trim(accountName.toString()) + '<span class="lclose" id="close' + nextTab + '">×</span><input type="hidden" class="accountTab" value = "' + jsonData + '"><div class="clearfix" ></div></a></li>').appendTo('#tabs');
                        }
                        $('#close' + nextTab).on("click", closeTab);
                        $('#tabs a:last').tab('show');
                        $(window).resize();
                        $.ajax({
                            url: '@Url.Action("BreadCrumbs", "Ledger")',
                            data: { AccountCode: ledgerId },
                            cache: false,
                            type: "POST",
                            dataType: "html",
                            success: function (data, textStatus, XMLHttpRequest) {
                                
                                var breadCrumbId = "#breadCrumbDiv" + nextTab;
                                $(breadCrumbId).html(data);
                            }
                        });
                    }
                });
            }




            function ShowSubLedgerDetails(subLedgerId, type) {
                
                var formEnglishDate = $("#FromDateVoucher").val();
                var toEnglishDate = $("#ToDateVoucher").val();
                var subCodes = subLedgerId.toString().split(",");
                var subAccountName = [];
                var accountCode = [];

                if (type == "list" || type == undefined)
                {
                    if (subCodes.length > 1) {
                        $.each(subCodes, function (index, item) {
                            var subLedger = $("a[data-ledgerid='" + item + "']");
                            subAccountName.push(subLedger.attr("data-label"));
                            var accCode = subLedger.attr("data-accountid");
                            if(accountCode.indexOf(accCode) < 0)
                            {
                                accountCode.push(accCode);
                            }
                        });
                    }
                    else {
                        var subLedger = $("a[data-ledgerid='" + subLedgerId + "']");
                        subAccountName.push(subLedger.attr("data-label"));
                        accountCode.push(subLedger.attr("data-accountid"));
                    }

                }
                else if (type == "multiselect")
                {
                    var dataitem = $("#subaccountledgermultiselect").data("kendoMultiSelect").dataItems();
                    $.each(dataitem, function (index, item) {
                        subAccountName.push(item.SubEdesc);
                        if (accountCode.indexOf(item.AccCode < 0))
                        {
                            accountCode.push(item.AccCode);
                        }
                    });
                }

                //var subcode = $(this).find('a').data("ledgerid");
                //var accountCode = $(this).find('a').data("accountid");
                var nextTab = $('#tabs li').size() + 1;
                var accountName = $(this).find('a').text();
                // create the tab


                // create the tab content

                var accountNo = $("#ledgerAccountNo").val();

                $.ajax({
                    url: '@Url.Action("PopUpSubLedgerDetails", "Ledger")',
                    data: { formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: accountCode.toString(), subCode: subLedgerId.toString(), totalTab: nextTab },
                    cache: false,
                    type: "POST",
                    dataType: "html",
                    success: function (data, textStatus, XMLHttpRequest) {

                        $('<div class="tab-pane" id="tab' + nextTab + '">' + data + '</div>').appendTo('.tab-content');
                        if (accountCode.length > 1) {
                            $('<li class="Legerclass"><a href="#tab' + nextTab + '" class="tooltips" data-toggle="tab" role="tab"  data-placement="bottom" data-original-title="' + $.trim(subAccountName.toString()) + '">' + "SubLedger Details" + '<span class="close" id="close'+ next+'">×</span> <div class="clearfix"></div></a></li>').appendTo('#tabs');
                            $('.tooltips').tooltip();
                        }
                        else {
                            $('<li class="Legerclass"><a href="#tab' + nextTab + '" data-toggle="tab"> ' + $.trim(subAccountName.toString()) + '<span class="close" id="close' + nextTab + '">×</span> <div class="clearfix"></div></a></li>').appendTo('#tabs');
                        }
                        $('#close' + nextTab).on("click", closeTab);
                        $('#tabs a:last').tab('show');
                        $(window).resize();
                    }
                });
                // make the new tab active

            }

            $(document).ready(function () {
                
                DateFilter.init(function () {
                    url: autoCompleteurlLedger;
                });

                $("#RunQuery").click(function (evt) {
                    
                    evt.preventDefault();
                    var activeTab = $('#tabs li.active a').attr('href');
                    if ($('#tabs li').length == 2) //first tab
                    {

                    }
                    //
                    if (activeTab == "javascript:void(0)"/* || activeTab == "#"*/) //first tab
                    {

                    }
                    else
                    {
                        var className = $('#tabs li.active a').find('input[type=hidden]').attr("class");
                        //data.AccountCode = AccountCode;
                        if (className == "accountTab")
                        {
                            
                            var formEnglishDate = $("#FromDateVoucher").val();
                            var toEnglishDate = $("#ToDateVoucher").val();
                            var data = JSON.parse($('#tabs li.active a').find('input[type=hidden]').val().replace(/!/g, '"'));
                            data.formDate = formEnglishDate;
                            data.toDate = toEnglishDate;
                              $.ajax({
                                     url: '@Url.Action("PopUpLedgerDetails", "Ledger")',
                                    data: data,
                                    cache: false,
                                    type: "POST",
                                    dataType: "html",
                                    success: function (data, textStatus, XMLHttpRequest) {
                                            $(activeTab).html('');
                                            $(activeTab).html(data);
                                            $(window).resize();
                                    }
                              });
                        }
                        else if (className == "ledgerList")
                        {
                            var className = $('#tabs li.active a').find('input[type=hidden]').attr("class");
                            var formEnglishDate = $("#FromDateVoucher").val();
                            var toEnglishDate = $("#ToDateVoucher").val();
                            var data = JSON.parse($('#tabs li.active a').find('input[type=hidden]').val().replace(/!/g, '"'));
                            data.formDate = formEnglishDate;
                            data.toDate = toEnglishDate;
                              $.ajax({
                                 url: '@Url.Action("PopUpLedgerDetails", "Ledger")',
                                data: data,
                                cache: false,
                                type: "POST",
                                dataType: "html",
                                success: function (data, textStatus, XMLHttpRequest) {
                                    $(activeTab).html('');
                                    $(activeTab).html(data);
                                    $(window).resize();
                                    }
                              });
                        }
                        else if (className == "subLedgerList")
                        {
                            
                            var className = $('#tabs li.active a').find('input[type=hidden]').attr("class");
                            var formEnglishDate = $("#FromDateVoucher").val();
                            var toEnglishDate = $("#ToDateVoucher").val();
                            var data = JSON.parse($('#tabs li.active a').find('input[type=hidden]').val().replace(/!/g, '"'));
                            data.formDate = formEnglishDate;
                            data.toDate = toEnglishDate;
                               $.ajax({
                                   url: '@Url.Action("PopUpSubLedgerDetails", "Ledger")',
                                   data: { formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: data.AccountCode, subCode: data.subCode.toString(), totalTab: data.totalTab},
                                        cache: false,
                                        type: "POST",
                                        dataType: "html",
                                        success: function (data, textStatus, XMLHttpRequest) {
                                            $(activeTab).html('');
                                            $(activeTab).html(data);
                                        //$('#actab' + nextTab).tab('show');
                                        $(window).resize();
                                }
                            });
                        }

                    }
                });

                //region subledger start
                var autoCompleteSubLedgerurl = window.location.protocol + "//" + window.location.host + "/api/Ledger/GetSubLedgerAutoComplete";
                var autoCompleteSubLedgerdataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: autoCompleteSubLedgerurl,
                            dataType: "json"
                        }
                    }
                    //serverFiltering: true
                });

                function OnSubLedgerMultiSelect(e) {
                    
                    var dataItem = this.dataItem(e.item.index());
                    var formEnglishDate = $("#FromDateVoucher").val();
                    var toEnglishDate = $("#ToDateVoucher").val();
                    var subcode = dataItem.SubCode;
                    var accountCode = dataItem.AccCode;
                    //  $('#tab1').removeClass("active");
                    var nextTab = $('#tabs li').size() + 1;
                    var accountName = dataItem.SubEdesc;
                    var accountNo = $("#ledgerAccountNo").val();

                    $.ajax({
                        url: '@Url.Action("PopUpSubLedgerDetails", "Ledger")',
                        data: { formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: accountCode, subCode: subcode.toString(), totalTab: nextTab },
                        cache: false,
                        type: "POST",
                        dataType: "html",
                        success: function (data, textStatus, XMLHttpRequest) {
                            // create the tab content
                            $('<div class="tab-pane" id="tab' + nextTab + '">' + data + '</div>').appendTo('.tab-content');
                            // create the tab
                            $('<li class="Legerclass"><a href="#tab' + nextTab + '" data-toggle="tab"> ' + $.trim(accountName) + '<span class="close">×</span> <div class="clearfix"></div></a></li>').appendTo('#tabs');
                            $('#tabs a:last').tab('show');
                            $("#subaccountledgermultiselect").data("kendoMultiSelect").close();
                            $(window).resize();
                        }
                    });
                };

                $("#subaccountledgermultiselect").kendoMultiSelect({
                    dataSource: autoCompleteSubLedgerdataSource,
                    dataTextField: "SubEdesc",
                    dataValueField: "SubCode",
                    height: 600,
                    placeholder: "Select Sub Ledger...",
                    //select: OnSubLedgerMultiSelect,
                    dataBound: function () {
                    }
                });
                var autoCompleteurlLedger = window.location.protocol + "//" + window.location.host + "/api/Ledger/GetAccountGroupAutoComplete";
                var autoCompleteLedgerdataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: autoCompleteurlLedger,
                            dataType: "json"
                        }
                    }
                    //serverFiltering: true
                });
                
                function OnLedgerMultiSelect(e) {
                    
                    var dataItem = this.dataItem(e.item.index());
                    var formEnglishDate = $("#FromDateVoucher").val();
                    var toEnglishDate = $("#ToDateVoucher").val();
                    var ledgerid = dataItem.AccountCode;
                    var nextTab = $('#tabs li').size() + 1;
                    var accountName = dataItem.AccountName;
                    var accountNo = $("#ledgerAccountNo").val();
                    $.ajax({
                        url: '@Url.Action("PopUpLedgerDetails", "Ledger")',
                        data: { formDate: formEnglishDate, toDate: toEnglishDate, AccountCode: ledgerid, totalTab: nextTab },
                        cache: false,
                        type: "POST",
                        dataType: "html",
                        success: function (data, textStatus, XMLHttpRequest) {
                            $('<div class="tab-pane" id="tab' + nextTab + '">' + data + '</div>').appendTo('.tab-content');
                            $.ajax({
                                url: '@Url.Action("BreadCrumbs", "Ledger")',
                                data: { AccountCode: ledgerid },
                                cache: false,
                                type: "POST",
                                dataType: "html",
                                success: function (data, textStatus, XMLHttpRequest) {
                                    var breadCrumbId = "#breadCrumbDiv" + nextTab;
                                    $(breadCrumbId).html(data);
                                    $('<li><a href="#tab' + nextTab + '" data-toggle="tab"> ' + $.trim(accountName) + '<span class="close">×</span> <div class="clearfix"></div></a></li>').appendTo('#tabs');
                                    $('#tabs a:last').tab('show');
                                    $(window).resize();
                                }
                            });
                        }
                    });
                };

                $("#ledgerMultiSelect").kendoMultiSelect({
                    dataSource: autoCompleteLedgerdataSource,
                    dataTextField: "AccountName",
                    dataValueField: "AccountCode",
                    height: 600,
                    //maxSelectedItems: 1,
                    placeholder: "Select Ledger...",
                    //autoClose: false,
                    //select: OnLedgerMultiSelect,
                    dataBound: function () {
                        //var current = this.value();
                        //this._savedOld = current.slice(0);
                    }
                });
                //region ledger ends

                var autoCompleteurl = window.location.protocol + "//" + window.location.host + "/api/Ledger/GetAccountListHavingChildrenTransaction";
                var autoCompletedataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: autoCompleteurl,
                            dataType: "json"
                        }
                    }
                    //serverFiltering: true
                });

                function OnAccountMultiSelect(e) {
                    
                    var dataItem = this.dataItem(e.item.index());
                    loadAccountLedger(dataItem.MasterAccCode, dataItem.AccountName);
                    $("#accountMultiSelect").data("kendoMultiSelect").close();
                }

                $("#accountMultiSelect").kendoMultiSelect({
                    dataSource: autoCompletedataSource,
                    dataTextField: "AccountName",
                    dataValueField: "AccountCode",
                    height: 600,
                    maxSelectedItems: 1,
                    placeholder: "Select Account...",
                    autoClose: false,
                    select: OnAccountMultiSelect,
                });
                
                var loadAllCustomersUrl = window.location.protocol + "//" + window.location.host + "/api/Ledger/GetAllParentAccountNodes";
                var loadCustomerByNodeUrl = window.location.protocol + "//" + window.location.host + "/api/Ledger/GetAllAccountByAccId?prodId=";

                var localData;
                var customerTreeDataSource = new kendo.data.HierarchicalDataSource({
                    transport: {
                        read: function (options) {

                            if (typeof options.data.AccountCode != 'undefined') {
                                var id = options.data.AccountCode;
                                $.ajax({
                                    url: loadCustomerByNodeUrl + id,
                                    //data: 'customerId=' + id + '&Level=1' + currentnode.Level,
                                    //  data: currentnode,
                                    type: "GET",
                                    success: function (result) {
                                        var res = result;
                                        // localData = result;
                                        //addToLocalData(localData, res, id);
                                        options.success(res);
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                });
                                //}
                            }
                            else {
                                $.ajax({
                                    url: loadAllCustomersUrl,
                                    //data: 'customerId=' + null + '&Level=' + null + "&masterCode=" + null,
                                    type: "GET",
                                    success: function (result) {
                                        setTimeout(function () {
                                            options.success(result);
                                        }, 1000);
                                        localData = result;
                                    },
                                    error: function (result) {
                                        options.error(result);
                                    }
                                });
                            }
                        }
                    },
                    schema: {
                        model: {
                            id: "AccountCode",
                            AccountName: "AccountName",
                            hasChildren: "HasChildren",
                            masterCustCode: "MasterAccCode"
                        }
                    }
                });

                $("#ledgerTreeView").kendoTreeView({
                    select: onChange,
                    autoScroll: true,
                    autoBind: true,
                    dataSource: customerTreeDataSource,
                    dataTextField: "AccountName",
                    dataBound: function (e) {
                        accountTreeViewDataBound();
                    },
                    //height: 400,
                    scrollable: {
                        virtual: true
                    },
                    check: onCheck,
                });

                function accountTreeViewDataBound()
                {
                  
                    $("#ledgerTreeView").find("[role='treeitem']").each(function () {
                        var ev = $._data(this, 'events');
                        if (ev && ev.dblclick) {
                            return;

                        }
                        $(this).on("dblclick", function () {
                            
                            event.stopPropagation();
                            var accountTreeview = $("#ledgerTreeView").data("kendoTreeView");
                            var account = accountTreeview.dataSource.getByUid($(this).attr("data-uid"));
                            loadAccountLedger(account.MasterAccCode, account.AccountName);

                        });

                    });

                }

                function loadAccountLedger(masterCode, accountName)
                {
                    
                    var urltest = Arg.url(window.location.protocol + "//" + window.location.host + "/api/Ledger/GetLedgerTransaction", { accountCode: masterCode });
                    $.ajax({
                        url: urltest,
                        //data: 'customerId=' + id + '&Level=1' + currentnode.Level,
                        //  data: currentnode,
                        type: "GET",
                        dataType: "html",
                        success: function (result) {
                            var ledgerIds = JSON.parse(result);
                            if (ledgerIds.length > 0) {
                                ShowLedgetDetails(ledgerIds, "account", accountName)
                            }

                            return;
                        },
                        error: function (result) {
                        }
                    });
                }

                function onChange(e) {
                    
                    var data = $('#ledgerTreeView').data('kendoTreeView').dataItem(e.node);
                    ShowLedgers(data);
                }


                function ShowLedgers(data) {
                    
                    var urltest = Arg.url(window.location.protocol + "//" + window.location.host + "/Sales/Ledger/ShowLedgerTransaction", { accountCode: data.MasterAccCode, accountName: data.AccountName });
                    $.ajax({
                        url: urltest,
                        //data: 'customerId=' + id + '&Level=1' + currentnode.Level,
                        //  data: currentnode,
                        type: "GET",
                        dataType: "html",
                        success: function (result) {
                            $("#ledgerdiv").html(result);
                        },
                        error: function (result) {
                        }
                    });
                }

                // function that gathers IDs of checked nodes
                function checkedNodeIds(nodes, checkedNodes) {
                    
                    for (var i = 0; i < nodes.length; i++) {
                        if (nodes[i].checked) {
                            checkedNodes.push(nodes[i].id);
                        }

                        if (nodes[i].HasChildren) {
                            checkedNodeIds(nodes[i].children.view(), checkedNodes);
                        }
                    }
                }

                function onCheck(e) {
                    
                    // get the ledgerMultiSelect values.
                    var customerMultiSelect = $("#ledgerMultiSelect").data("kendoMultiSelect");
                    var mvalue = customerMultiSelect.value();
                    //get the customerId of the checked node
                    var dataItemCustomerID = this.dataItem(e.node).AccountCode;
                    if (this.dataItem(e.node).checked == true) {
                        //append the selected node value in customerMultiSelect when checked
                        var res = [];
                        res.push(dataItemCustomerID);
                        res.forEach(function (dataItem) {
                            var temp = $.merge($.merge([], mvalue), [dataItem]);
                            temp = $.unique(temp);
                            customerMultiSelect.value(temp);
                            customerMultiSelect._savedOld = temp.slice(0)
                        });

                    }
                    if (this.dataItem(e.node).checked == false) {
                        //remove value from customerMultiSelect if the node is unchecked
                        mvalue.forEach(function (dataItem) {
                            //var temp = $.grep($.grep(mvalue,[]), [dataItem]);
                            var temp = $.grep(mvalue, function (a) { return a != dataItem });
                            temp = $.unique(temp);
                            customerMultiSelect.value(temp);
                        });

                    }
                }


                //Checks if nodes are already in the tree and returns it if it does
                function getNextLevel(data, id) {
                    
                    if (!id) {
                        return data;
                    } else {
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].AccountCode == id) {
                                return data[i].Items;
                            } else if (data[i].Items) {
                                for (var j = 0; j < data[i].Items.length; j++) {
                                    if (data[i].Items[j].AccountCode == id) {
                                        return data[i].Items[j].Items;
                                    }
                                }
                            }
                        }
                    }
                }

                //Get Tree object for a given customerId
                function get(data, id) {
                    
                    if (id) {
                        for (var i = 0; i < data.length; i++) {
                            if (data[i].AccountCode == id) {
                                return data[i];
                            }
                            else if (data[i].Items) {
                                for (var j = 0; j < data[i].Items.length; j++) {
                                    if (data[i].Items[j].AccountCode == id) {
                                        return data[i].Items[j];
                                    }
                                }
                            }
                        }
                    }
                    return null;
                }

                //Add newly read nodes to cached tree
                function addToLocalData(localdata, data, id) {
                    
                    if (!id) {
                        return localdata;
                    } else {
                        var localdata1 = localdata.concat(data);
                        return localdata1;

                        for (var i = 0; i < localdata.length; i++) {
                            if (localdata[i].AccountCode == id) {
                                localdata[i].Items = data;
                                return;
                            } else {
                                if (localdata[i].Items) {
                                    for (var j = 0; j < localdata[i].Items.length; j++) {
                                        if (localdata[i].Items[j].AccountCode == id) {
                                            localdata[i].Items[j].Items = data;
                                            return;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

            });









            $('.nav-pills, .nav-tabs').tabdrop()

            $(function () {
                $('.k-list.k-reset').slimScroll({

                    alwaysVisible: true



                });
            });

            $(function () {
                $('#ledgerTreeView').slimScroll({
                    //height: '420px',
                    height: '481px',
                    alwaysVisible: true

                });
            });


            $(function () {
                $('.k-multiselect-wrap.k-floatwrap').slimScroll({
                    opacity: '0.4',
                    railVisible: true,
                });
            });


            $(".applydp").on("click", function (evt) {

                evt.preventDefault();
                $("#RunQuery").trigger("click");
            })
    </script>

</div>
