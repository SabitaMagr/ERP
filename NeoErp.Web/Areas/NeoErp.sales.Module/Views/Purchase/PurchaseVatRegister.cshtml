@using NeoErp.Core.Models;
@using NeoErp.Core;
@using NeoErp.Core.Infrastructure;
@{
    var workingContent = EngineContext.Current.Resolve<IWorkContext>();
}
<style>
    div.k-grid-header th.k-header, tr.k-filter-row > th {
        text-align: center;
    }

    /*.page-bar {
        margin-bottom: 0px !important;
    }*/

    .k-grid table {
        table-layout: fixed;
    }

    .no-data {
        background-color: red;
    }
    /*#grid thead{
         font-size:11px;
    }*/
    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .k-grid-content {
        font-size: 10px;
    }
    .k-grid-content-locked{
            font-size: 10px;
    }
    .k-grid-footer {
        font-size: 10px;
    }
    .k-grid-header{
        font-size:11px;
    }
    .floatright {
        float: right;
        margin-top: 2px !important;
    }
</style>



<div class="page-content">
    <div class="page-bar">
        <ul class="page-breadcrumb">
            @*<li>
                <i class="fa fa-home"></i>
                <a href="/main/DashBoard">Home</a>
                <i class="fa fa-angle-right"></i>
            </li>
            <li>
                <a href="sales/saleshome/dashboard/Dashboard">Organiser</a>
                <i class="fa fa-angle-right"></i>
            </li>*@
        </ul>
        <div class="page-toolbar">
            <div class="btn-group pull-right">
                <div class="actions">
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/DateField.cshtml", false)
                    </div>
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/ConsolidateFilter.cshtml", true)
                    </div>
                    <div class="btn-group">
                   @Html.Partial("~/Views/Shared/Controls/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
              {
                  ShowSupplierFilter = true,
                  ShowPurchaseDocumentFilter = true,
                  //ShowAreaFilter = true,
                  //ShowProductFilter = true,
                  //ShowCategoryFilter = true,
                  //ShowCompanyFilter = true,
                  //ShowBranchFilter = true
              })
                    </div>

                    @Html.Partial("~/Views/Shared/Controls/_reportFilterSettings.cshtml", new ReportFilterSettingsModel()
               {
                   ShowAmountFigureFilter = true,
                   ShowAmountFilter = true,
                   ShowAmountRoundUpFilter = true,
                   ShowRangeAmountFilter = true,
                  
               })

                    @Html.Partial("~/Views/Shared/Controls/ComposeMail.cshtml")
                    <a data-toggle="modal" id="RunQuery" href="#">
                        <div class="btn btn-circle btn-icon-only btn-default" data-placement="left" data-html="true" data-container="body" data-toggle="tooltip" title="Refresh">
                            <i class="icon-control-play"></i>
                        </div>
                    </a>
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_ReportConfig.cshtml", "PurchaseVatRegisterBI")
                    </div>
                </div>



                @*@Html.Partial("~/Views/Shared/Controls/DateField.cshtml",false)*@

                @*<button type="button" class="btn btn-fit-height grey-salt dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" data-delay="1000" data-close-others="true">
                    Actions <i class="fa fa-angle-down"></i>
                </button>
                <ul class="dropdown-menu pull-right" role="menu">
                    <li>
                        <a href="#">Action</a>
                    </li>
                    <li>
                        <a href="#">Another action</a>
                    </li>
                    <li>
                        <a href="#">Something else here</a>
                    </li>
                    <li class="divider">
                    </li>
                    <li>
                        <a href="#">Separated link</a>
                    </li>
                </ul>*@
            </div>
        </div>
    </div>

    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="row collapse in" id="demo">
        <div class="col-md-12">
            <div class="portlet light bordered">


                <div class="portlet-body form">
                    <div class="row">
                        <div id="grid" class="table-grid"></div>
                        @Html.Partial("~/Views/Shared/Controls/_GridToolbar.cshtml")
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END PAGE CONTENT-->
</div>
<script src="@Scripts.Url("~/JS/DateFilter.js?V5")" type="text/javascript"></script>
<script src="@Scripts.Url("~/JS/dynamicReport.js?V2")" type="text/javascript"></script>
<script type="text/javascript">
    var fileMailSender = new ManualEmailSender({
        GridName: "grid",
        GridRefreshTriggerName :"Runquery",
        reportName :"PurchaseVarRegister",
  });
</script>
<script type="text/javascript">
    var a = location.hash;
    var b = location.pathname;
    var url = (b + a);
    $(".active").removeClass();
    $("a[href='" + url + "']").parent().addClass("active");
    $("a[href='" + url + "']").parent().parent().slideDown("slow");

</script>
<script>

    var reportConfig = GetReportSetting("PurchaseVatRegisterBI");
    function getDateFormat(date) {
        return kendo.format("{0:" + reportConfig.dateFormat + "}", date);
    }

    $(".applydp").on("click", function (evt) {
        evt.preventDefault();
        $("#RunQuery").trigger("click");
    })

    $("#loadAdvancedFilters").on("click", function (evt) {
        evt.preventDefault();
        $("#RunQuery").trigger("click");
    });

    function ExportToExcel(e) {

        //Report header details
        var companyName = ('@workingContent.CurrentUserinformation.company_name');
        var fromADdate = $("#FromDateVoucher").val()
        var toADdate = $("#ToDateVoucher").val();
        var fromBSdate = $("#fromInputDateVoucher").val();
        var toBSdate = $("#toInputDateVoucher").val();
        var branches = ReportFilter.getBranchs();

        //create a footer row to display totals
        
        var footer = [];
        footer.push({ value: "Total", colSpan: 6, textAlign: "center", bold: true, })
        var footerTemp = e.workbook.sheets[0].rows[e.workbook.sheets[0].rows.length - 1].cells;
        for (var i = 0; i < footerTemp.length; i++) {
            if (typeof (footerTemp[i].value) == "undefined" && i > 6)
                footer.push({ value: "", });
            else if (typeof (footerTemp[i].value) != "undefined" && footerTemp[i].value != "Total")
                footer.push({ value: $(footerTemp[i].value).text(), textAlign: "right", bold: true });
        }

        var SheetRow = [];

        //Pushing the head row
        SheetRow.push({
            cells: [
                   { value: "Miti", background: "#A9A7A6", rowSpan: 2, vAlign: "center", },
                   { value: "Date", background: "#A9A7A6", rowSpan: 2, vAlign: "center", },
                   { value: "Invoice No", background: "#A9A7A6", rowSpan: 2, vAlign: "center", },
                   { value: "Manual No", background: "#A9A7A6", rowSpan: 2, vAlign: "center", },
                   { value: "Party Name", background: "#A9A7A6", rowSpan: 2, vAlign: "center", },
                   { value: "VAT No", background: "#A9A7A6", rowSpan: 2, vAlign: "center", },
                   { value: "Purchase TaxExemp", background: "#A9A7A6", rowSpan: 2, vAlign: "center", },

                   { value: "Local Purchase Of Trade Goods", background: "#A9A7A6", colSpan: 2, textAlign: "center" },
                   { value: "Import Purchase", background: "#A9A7A6", colSpan: 2, textAlign: "center" },
                   { value: "Administrative Expenses", background: "#A9A7A6", colSpan: 2, textAlign: "center" },
                   { value: "Capital Expenditure", background: "#A9A7A6", colSpan: 2, textAlign: "center" },
                   { value: "Total Purchase", background: "#A9A7A6", colSpan: 2, textAlign: "center" },
                   { value: "Total Of VAT", background: "#A9A7A6", colSpan: 2, textAlign: "center" },
            ],
        });
        SheetRow.push({
            cells: [
                   { value: "Tax Amount", background: "#A9A7A6", },
                   { value: "VAT Amount", background: "#A9A7A6", },
                   { value: "Tax Amount", background: "#A9A7A6", },
                   { value: "VAT Amount", background: "#A9A7A6", },
                   { value: "Tax Amount", background: "#A9A7A6", },
                   { value: "VAT Amount", background: "#A9A7A6", },
                   { value: "Tax Amount", background: "#A9A7A6", },
                   { value: "VAT Amount", background: "#A9A7A6", },
                   { value: "Import", background: "#A9A7A6", },
                   { value: "Local", background: "#A9A7A6", },
                   { value: "Import", background: "#A9A7A6", },
                   { value: "Local", background: "#A9A7A6", },
            ],
        });
        WriteData(e.data);

        //recursive function to write the grouped/ungrouped data
        function WriteData(array) {
            array.forEach(function (row, index) {
                if (typeof (row.items) != "undefined") { //if array contains nested items, write a row with group field and enter recursion
                    SheetRow.push({
                        cells: [{
                            value: row.field + " : " + row.value,
                            background: "#E1E1E1",
                            colSpan: 18,//to span the total number of columns
                            fontSize: 12,
                        }]
                    });
                    WriteData(row.items);
                }
                else { //if array contains no nested items write the row to excelsheet
                    SheetRow.push({
                        cells: [{
                            value: row.Miti,
                        }, {
                            value: getDateFormat(row.InvoiceDate),
                        }, {
                            value: row.InvoiceNo,
                        }, {
                            value: row.ManualNo,
                        }, {
                            value: row.PartyName,
                        }, {
                            value: row.VatNo,
                        }, {
                            value: row.PurchaseTaxExemp.toFixed(2),
                        }, {
                            value: row.localTaxAmount.toFixed(2),
                        }, {
                            value: row.localVatAmount.toFixed(2),
                        }, {
                            value: row.ImportTaxAmount.toFixed(2),
                        }, {
                            value: row.ImportVatAmount.toFixed(2),
                        }, {
                            value: row.AdminTaxAmount.toFixed(2),
                        }, {
                            value: row.AdminVatAmount.toFixed(2),
                        }, {
                            value: row.CaptialTaxAmount.toFixed(2),
                        }, {
                            value: row.CapitalVatAmount.toFixed(2),
                        }, {
                            value: row.TotalPurchaseImport.toFixed(2),
                        }, {
                            value: row.TotalPurchaseLocalAmount.toFixed(2),
                        }, {
                            value: row.TotalVatImportAmount.toFixed(2),
                        }, {
                            value: row.TotalVatLocalAmount.toFixed(2),
                        }]
                    });
                }
            });
        }

        //push the footer variable containing total values
        SheetRow.push({
            cells: footer,
        });

        //pushing Report header details
        
        //SheetRow.unshift({
        //    cells: [{ value: "From :- " + fromADdate + "(" + fromBSdate + ")" + "\t To :- " + toADdate + "(" + toBSdate + ")", colSpan: 18 }]
        //});
        //for (var companyCount = 0; companyCount < branches.length; companyCount++) {
        //    SheetRow.unshift({
        //        cells: [{ value: branches[companyCount].Company + " :- " + branches[companyCount].Branches.join(','), colSpan: 18 }]
        //    });
        //}
        //SheetRow.unshift({
        //    cells: [{ value: companyName.split('').join(' '), colSpan: 18 }]
        //});
    SheetRow.unshift({
            cells: [{ value: "Purchase Vat Register".split('').join(' '), colSpan: 18 }]
        });
        var filterText = $("#AdvanceFilter").attr('data-original-title');
        if (filterText.indexOf('|') < 0) {
            filterText = $((filterText).replace(/<strong>/g, "|")).text().replace('|', '').split('|').reverse();;
            $.each(filterText, function (k, item) {
                SheetRow.unshift({
                    cells: [{ value: item, colSpan: footerTemp.length }]
                });
            });
        }
        if (filterText.toString().indexOf('Date Range') < 0) {
            SheetRow.unshift({
                cells: [{ value: "From :- " + fromADdate + "(" + fromBSdate + ")" + "\t To :- " + toADdate + "(" + toBSdate + ")", colSpan: footerTemp.length }]
            });
        }
        for (var companyCount = 0; companyCount < branches.length; companyCount++) {
            SheetRow.unshift({
                cells: [{ value: branches[companyCount].Company + " :- " + branches[companyCount].Branches.join(','), colSpan: footerTemp.length }]
            });
        }
        SheetRow.unshift({
            cells: [{ value: companyName.split('').join(' '), colSpan: footerTemp.length }]
        });
        
        //initializing a workbook
        var Workbook = new kendo.ooxml.Workbook({
            sheets: [{
                columns: [
                    { width: 110 },
                    @for (int i = 0; i < 15; i++)
                    {
                        <text>{ autoWidth: true },</text>
                    }
                ],
                rows: SheetRow
            }]
        });

        //finally saving the excel sheet
        kendo.saveAs({
            dataURI: Workbook.toDataURL(),
            fileName: "Purchase Vat Register.xlsx"
        });
    }


    $(document).ready(function () {
          
         DateFilter.init(function () {
                  consolidate.init(function () {
                    BindGrid(urltest);
                });
            });

        fileMailSender.init();

        var urltest = window.location.protocol + "//" + window.location.host + "/api/Purchase/GetPurchaseVatRegister";

        $("#RunQuery").click(function (evt) {
            evt.preventDefault();
            urltest = window.location.protocol + "//" + window.location.host + "/api/Purchase/GetPurchaseVatRegister";
            KendoGridRefresh(urltest);
        });

        //BindGrid(urltest);
    });

    function BindGrid(readurl) {
        var companyName = ('@workingContent.CurrentUserinformation.company_name');
        var fromADdate = $("#FromDateVoucher").val()
        var toADdate = $("#ToDateVoucher").val();
        var fromBSdate = $("#fromInputDateVoucher").val();
        var toBSdate = $("#toInputDateVoucher").val();
        var branches = ReportFilter.getBranchs();
        reportConfig = GetReportSetting("PurchaseVatRegisterBI");
        var dataSource = new kendo.data.DataSource({
            type: "json",
            transport: {
                read: {
                    url: readurl, // <-- Get data from here.
                    dataType: "json", // <-- The default was "jsonp".
                    type: "POST",
                    contentType: "application/json; charset=utf-8"
                },
                parameterMap: function (options, type) {
                    var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                    //  paramMap.formDate = $("#FromDateVoucher").val();
                    delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                    delete paramMap.$format; // <-- remove format parameter.
                    return paramMap;
                }
            },

            error: function (e) {
                displayPopupNotification("Sorry error occured while processing data", "error");
            },
            serverFiltering: true,
            serverAggregates: true,
            schema: {
                data: "VatRegisters", // records are returned in the "data" field of the response
                total: "total", // total number of records is in the "total" field of the response
                aggregates: "AggregationResult",
                model: {
                    fields: {
                        Miti: { type: "string" },
                        InvoiceDate: { type: "string" },
                        InvoiceNo: { type: "string" },
                        ManualNo: { type: "string" },
                        PartyName: { type: "string" },
                        VatNo: { type: "string" },
                        PurchaseTaxExemp: { type: "number" },
                        localTaxAmount: { type: "number" },
                        localVatAmount: { type: "number" },
                        ImportTaxAmount: { type: "number" },
                        ImportVatAmount: { type: "number" },
                        AdminTaxAmount: { type: "number" },
                        AdminVatAmount: { type: "number" },
                        CaptialTaxAmount: { type: "number" },
                        CapitalVatAmount: { type: "number" },
                        TotalPurchaseLocalAmount: { type: "number" },
                        TotalPurchaseImport: { type: "number" },
                        TotalVatLocalAmount: { type: "number" },
                        TotalVatImportAmount: { type: "number" },

                    }
                }
            },
            aggregate:[
                    { field: "PurchaseTaxExemp", aggregate: "sum" },
                    { field: "localTaxAmount", aggregate: "sum" },
                    { field: "localVatAmount", aggregate: "sum" },
                    { field: "ImportTaxAmount", aggregate: "sum" },
                    { field: "ImportVatAmount", aggregate: "sum" },
                    { field: "AdminTaxAmount", aggregate: "sum" },
                    { field: "AdminVatAmount", aggregate: "sum" },
                    { field: "CaptialTaxAmount", aggregate: "sum" },
                    { field: "CapitalVatAmount", aggregate: "sum" },
                    { field: "TotalPurchaseLocalAmount", aggregate: "sum" },
                    { field: "TotalPurchaseImport", aggregate: "sum" },
                    { field: "TotalVatLocalAmount", aggregate: "sum" },
                    { field: "TotalVatImportAmount", aggregate: "sum" },
            ],
            serverPaging: true,
            //serverSorting: true,
            pageSize: reportConfig.defaultPageSize,
        });
        var grid = $("#grid").kendoGrid({
            dataSource: dataSource,
            toolbar: kendo.template($("#toolbar-template").html()),
            excel: {
                fileName: "Vat Register",
                //proxyURL: "//demos.telerik.com/kendo-ui/service/export",
                allPages: true
            },

            excelExport: function (e) {
                
                ExportToExcel(e);
                e.preventDefault();

                //var sheet = e.workbook.sheets[0];
                //var datasource = $("#grid").data("kendoGrid");
                //var data = e.data;

                //var heardervalue = [];

                //heardervalue = sheet.rows[0].cells;

                //for (var i = 0; i < sheet.rows.length; i++) {
                //    for (var ci = 0; ci < sheet.rows[i].cells.length; ci++) {
                //        if (typeof (sheet.rows[i].cells[ci].value) == "undefined") {
                //            var index = i - 1;
                //            var headername = heardervalue[ci];
                //        }
                //        if (i == sheet.rows.length - 1) {

                //            sheet.rows[i].cells[ci].value = $(sheet.rows[i].cells[ci].value).text();
                //        }

                //    }
                //}

                //var rows = e.workbook.sheets[0].rows;
                //rows.unshift({
                //    height: 20,
                //    cells: [{
                //        value: "Purchase Vat Register".split('').join(' '),
                //        //background: "#FFFFFF",
                //        //textAlign: "center",
                //        colSpan: 10,
                //        fontSize: 12,
                //    }]
                //});
                //rows.unshift({
                //    height: 20,
                //    cells: [{
                //        value: "From :- " + fromADdate + "(" + fromBSdate + ")" + "\t To :- " + toADdate + "(" + toBSdate + ")",
                //        //background: "#FFFFFF",
                //        //textAlign: "center",
                //        colSpan: 10,
                //        fontSize: 12,
                //    }]
                //});
                //for (var companyCount = 0; companyCount < branches.length; companyCount++) {
                //    rows.unshift({
                //        height: 20,
                //        cells: [{
                //            value: branches[companyCount].Company + " :- " + branches[companyCount].Branches.join(','),
                //            //background: "#FFFFFF",
                //            //textAlign: "center",
                //            colSpan: 10,
                //            fontSize: 12,

                //        }]
                //    });
                //}
                //rows.unshift({
                //    height: 20,
                //    cells: [{
                //        value: companyName.split('').join(' '),
                //        //background: "#FFFFFF",
                //        //textAlign: "center",
                //        colSpan: 10,
                //        fontSize: 12,
                //    }]
                //});
            },

            pdf: {
                allPages: true,
                avoidLinks: true,
                paperSize: "A4",
                margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
                landscape: true,
                repeatHeaders: true,

                scale: 0.8
            },
            height: window.innerHeight - 50,
            sortable: true,
            reorderable: true,
            groupable: true,
            resizable: true,


            filterable: {
                extra: false,
                operators: {
                    number: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "is greater than or equal to	",
                        gt: "is greater than",
                        lte: "is less than or equal",
                        lt: "is less than",
                    },
                    string: {

                        eq: "Is equal to",
                        neq: "Is not equal to",
                        startswith: "Starts with	",
                        contains: "Contains",
                        doesnotcontain: "Does not contain",
                        endswith: "Ends with",
                    },
                    date: {

                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "Is after or equal to",
                        gt: "Is after",
                        lte: "Is before or equal to",
                        lt: "Is before",
                    }
                }
            },



            columnMenu: true,
             columnMenuInit: function (e) {
                    wordwrapmenu(e);
                    checkboxItem = $(e.container).find('input[type="checkbox"]');
                },
                columnShow: function (e) {
                    if($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                        SaveReportSetting('PurchaseVatRegisterBI', 'grid');
                },
                columnHide: function (e) {
                    if($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                        SaveReportSetting('PurchaseVatRegisterBI', 'grid');
                },
                pageable: {
                    refresh: true,
                    pageSizes: reportConfig.itemPerPage,
                    buttonCount: 5
                },
            //  autoBind: true,
            //scrollable: {
            //    virtual: true
            //},
            scrollable: true,
            dataBound: function (o) {
                var grid = o.sender;
                if (grid.dataSource.total() == 0) {
                    var colCount = grid.columns.length+1;
                    $(o.sender.wrapper)
                        .find('tbody')
                        .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                    displayPopupNotification("No Data Found Given Date Filter.", "info");
                }
                else {
                    //var g = $("#grid").data("kendoGrid");
                    //for (var i = 0; i < g.columns.length; i++) {
                    //    g.showColumn(i);
                    //}
                    //$("div.k-group-indicator").each(function (i, v) {
                    //    g.hideColumn($(v).data("field"));
                    //});
                }
                //var myElem = document.getElementById('trParentHeader');
                //if (myElem == null) {
                //    $("#grid").find("th.k-header").parent().before("<tr id='trParentHeader'><th class='k-header'></th><th class='k-header'></th> <th class='k-header'></th><th class='k-header'></th><th class='k-header'></th><th class='k-header'></th><th class='k-header'></th> <th colspan='2' class='k-header'><strong>Local Purchase of Trade Goods</strong></th>  <th colspan='2' class='k-header'><strong>Import Purchase</strong></th>  <th scope='col' colspan='2' class='k-header'><strong>Administrative Expenses</strong></th><th scope='col' colspan='2' class='k-header'><strong>Capital Expenditure</strong></th><th scope='col' colspan='2' class='k-header'><strong>Total Purchase</strong></th><th scope='col' colspan='2' class='k-header'><strong>Total of VAT</strong></th></tr>");
                //}
                $('div').removeClass('.k-header k-grid-toolbar');
                UpdateReportUsingSetting("PurchaseVatRegisterBI", "grid");
            },
            columns: [    {
                              field: "Miti",
                              title: "Miti",
                              width: "100px",
                              locked: true,
                           },
                          {
                            field: "InvoiceDate",
                            title: "Date",
                            width: "100px",
                            format: "{0:" + reportConfig.dateFormat + "}",
                            locked: true,
                            lockable: false,
                          },
                          {
                              field: "InvoiceNo",
                              title: "Invoice No",
                              width: "100px",
                              locked: true,
                          },
                          {
                              field: "ManualNo",
                              title: "Manual No",
                              width: "100px",
                              locked: true,
                          },
                           {
                               field: "PartyName",
                               title: "Party Name",
                               width: "100px",
                               locked: true,

                           },
                           {
                               field: "VatNo",
                               title: "Vat No",
                               width: "100px",
                               attributes:
                                   {
                                       style:"text-align:right;"
                                   },
                               footerTemplate: 'Total'
                           },
                           {
                               field: "PurchaseTaxExemp",
                               title: "Purchase TaxExemp",
                               attributes:
                                   {
                                    style:"text-align: right;"
                                   },
                               width: "100px",
                               aggregates: ["sum"],
                               groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                              footerTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>'
                           },
                            {
                                title: "Local Purchase of Trade Goods",
                                width: "200px",
                                columns: [{
                                    field: "localTaxAmount",
                                    title: "TaxAmount",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',

                                }, {
                                    field: "localVatAmount",
                                    title: "Vat Amount",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",  footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }]
                            },
                            {
                                title: "Import Purchase",
                                width: "200px",
                                columns: [{
                                    field: "ImportTaxAmount",
                                    title: "Tax Amount",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }, {
                                    field: "ImportVatAmount",
                                    title: "Vat Amount",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }]
                            },
                            {
                                title: "Administrative Expenses",
                                width: "200px",
                                columns: [{
                                    field: "AdminTaxAmount",
                                    title: "Tax Amount",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }, {
                                    field: "AdminVatAmount",
                                    title: "Vat Amount",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }]
                            },
                            {
                                title: "Capital Expenditure",
                                width: "200px",
                                columns: [{
                                    field: "CaptialTaxAmount",
                                    title: "Tax Amount",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }, {
                                    field: "CapitalVatAmount",
                                    title: "Vat Amount",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }]
                            },
                            {
                                title: "Total Purchase",
                                columns: [{
                                    field: "TotalPurchaseImport",
                                    title: "Import",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }, {
                                    field: "TotalPurchaseLocalAmount",
                                    title: "Local",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }]
                            },
                            {
                                title: "Total of VAT",
                                columns: [{
                                    field: "TotalVatImportAmount",
                                    title: "Import",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }, {
                                    field: "TotalVatLocalAmount",
                                    title: "Local",
                                    width: "100px",
                                    attributes: {
                                        style: "text-align: right;"
                                    },
                                    format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter") + "}",
                                    aggregates: ["sum"],
                                    groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter"))#</span>',
                                }]
                            }
            ]

        });

    };

    function KendoGridRefresh(readUrl) {
        $('#grid').val('');
        $('#grid').html('');
        BindGrid(readUrl)
    }
</script>