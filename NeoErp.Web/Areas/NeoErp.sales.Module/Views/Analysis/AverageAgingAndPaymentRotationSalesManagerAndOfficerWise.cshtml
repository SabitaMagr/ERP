

@using NeoErp.Core.Models;
<style>
    div.k-grid-header th.k-header, tr.k-filter-row > th {
        text-align: center;
        width: 183px !important;
    }

    /*.page-bar {
        margin-bottom: 0px !important;
    }*/

    .k-grid table {
        table-layout: fixed;
    }

    .no-data {
        background-color: red;
    }
    /*#grid thead{
         font-size:11px;
    }*/
    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .k-grid-content {
        font-size: 10px;
    }

    .k-grid-footer {
        font-size: 10px;
    }
    /*button#locationToggle {
        height: 29px;
    }*/
    .floatright {
        float: right;
        margin-top: 2px !important;
    }
</style>
<div class="page-content">
    <div class="page-bar">
        <ul class="page-breadcrumb">
            @*<li>
                    <i class="fa fa-home"></i>
                    <a href="/sales/SalesHome/Dashboard">Home</a>
                    <i class="fa fa-angle-right"></i>
                </li>*@
            @*<li>
                    <a href="#/StockReport/AverageAgingAndPaymentRotationSalesManagerAndOfficerWiseReport">Locationwise Stock Report</a>
                    <i class="fa fa-angle-right"></i>
                </li>*@
            @*<li>
                    <a href="sales/saleshome/dashboard/Dashboard">Organiser</a>
                    <i class="fa fa-angle-right"></i>
                </li>*@
        </ul>
        <div class="page-toolbar">
            <div class="btn-group pull-right">

                <div class="actions">
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/DateFieldPicker.cshtml", false)
                    </div>
                    @Html.Partial("~/Views/Shared/Controls/ConsolidateFilter.cshtml", true)
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowPartyTypeFilter = true,
                       //ShowLocationWiseFilter = true,
                       //ShowProductFilter = true,
                       //ShowSupplierFilter = true,
                       //ShowBranchFilter = true,

                   })
                    </div>
                    @Html.Partial("~/Views/Shared/Controls/_reportFilterSettings.cshtml", new ReportFilterSettingsModel()
               {
                   ShowAmountFigureFilter = true,
                   ShowAmountFilter = true,
                   ShowAmountRoundUpFilter = true,
                   ShowRangeAmountFilter = true
               })
                    <a class="btn btn-circle btn-icon-only btn-default" id="RunQuery" href="#">
                        <i class="icon-control-play"></i>
                    </a>

                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_ReportConfig.cshtml", "AverageAgingAndPaymentRotationSalesManagerAndOfficerWiseReport")
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="row collapse in" id="demo">
        <div class="col-md-12">
            <div class="portlet light bordered">
                <div class="portlet-body form">
                    <div class="row">
                        <div id="grid"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END PAGE CONTENT-->
</div>
@Html.Partial("~/Views/Shared/Controls/_GridToolbar.cshtml")
<script src="@Scripts.Url("~/JS/DateFilter.js?V5")" type="text/javascript"></script>
<script src="@Scripts.Url("~/JS/dynamicReport.js?V2")" type="text/javascript"></script>
<script type="text/javascript">
    var a = location.hash;
    var b = location.pathname;
    var url = (b + a);
    $(".active").removeClass();
    $("a[href='" + url + "']").parent().addClass("active");
    $("a[href='" + url + "']").parent().parent().slideDown("slow");

</script>
<script>

    var reportConfig = GetReportSetting("AverageAgingAndPaymentRotationSalesManagerAndOfficerWiseReport");
    function getDateFormat(date) {
        return kendo.format("{0:" + reportConfig.dateFormat + "}", date)
    }

    //$("#supplierMultiSelect").closest(".row").hide();

    $(".applydp").on("click", function (evt) {

        evt.preventDefault();
        $("#RunQuery").trigger("click");
        $(this).closest("#applydp").modal('hide');
    });

    $("#loadAdvancedFilters").on("click", function (evt) {
        debugger;
        evt.preventDefault();
        $("#RunQuery").trigger("click");
        //Date-filter-range display on top
        //if ($("#fromInputDateVoucher").val() != undefined && $("#fromInputDateVoucher").val() != "") {
        //    var value = $("#fromInputDateVoucher").val() + " To " + $("#toInputDateVoucher").val();
        //    if (value != " To ") {
        //        $("#date-filter-value").html("<span class='date-filter-icon'>" + value + "</span>");
        //    }
        //    else {
        //        $("#date-filter-value").html();
        //    }

        //}
        //else {
        //    $("#date-filter-value").html();
        //}
    });

    $("#RunQuery").click(function (evt) {
        evt.preventDefault();

        var urltest = window.location.protocol + "//" + window.location.host + "/api/AnalysisApi/GetAverageAgingAndPaymentRotationSalesManagerAndOfficerWise"
        KendoGridRefresh(urltest);
    });

    function CalcDate(Date, Days, add) {

        var startdate = moment(Date).format("DD.MM.YYYY");
        var new_date = moment(startdate, "DD-MM-YYYY").add('days', Days);
        if (add == true) {
            return new_date.format('DD-MMM-YYYY');
        }

        else {
            var now = moment();
            var overDueDays = now.diff(new_date, "days");
            return overDueDays;
        }
    }


    function CalcBalanceAmount(grandTotal, dr, cr) {
        var ds = $("#grid").data("kendoGrid").dataSource;
        if (grandTotal == true) {
            var aggregates = ds.aggregates();
            var grandSum = aggregates.BillAmount.sum - aggregates.RecAmount.sum;
            if (grandSum > 0)
                return kendo.toString(grandSum, "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter"));
            else
                return kendo.toString(Math.abs(grandSum), "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter"));

        }
        else {
            var grandSum = dr - cr;
            if (grandSum > 0)
                return kendo.toString(grandSum, "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter"));
            else
                return kendo.toString(Math.abs(grandSum), "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter"));
        }

    }

    function balanceAmount(amount) {
        if (amount > 0)
            return kendo.toString(amount, "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter"));
        else
            return kendo.toString(Math.abs(amount), "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter"));
    }

    function BindGrid(readurl) {
        reportConfig = GetReportSetting("AverageAgingAndPaymentRotationSalesManagerAndOfficerWiseReport");
        var dataSource = new kendo.data.DataSource({
            type: "json",
            transport: {
                read: {
                    url: readurl, // <-- Get data from here.
                    dataType: "json", // <-- The default was "jsonp".
                    type: "POST",
                    contentType: "application/json; charset=utf-8"
                },
                parameterMap: function (options, type) {
                    var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                    delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                    delete paramMap.$format; // <-- remove format parameter.
                    return paramMap;
                }
            },

            error: function (e) {
                displayPopupNotification("Sorry error occured while processing data", "error");
            },
            serverFiltering: false,
            serverAggregates: true,
            schema: {
                data: "AvgAgingAndPaymentRotationSOSMWiseModel", // records are returned in the "data" field of the response
                total: "total", // total number of records is in the "total" field of the response
                aggregates: "AggregationResult",
                model: {
                    fields: {
                        PartyTypeName: { type: "string" },
                        PartyName: { type: "string" },
                        CreditLimit: { type: "string" },
                        Remarks: { type: "string" },
                        Balance: { type: "number" },
                        Quantity: { type: "number" },
                        PayRotationDays: { type: "number" },
                        IsChild: { type: "number" },
                    }
                }
            },
            aggregate: [
                { field: "Balance", aggregate: "sum" },
                { field: "Quantity", aggregate: "sum" },
            ],
            serverPaging: false,
            serverSorting: false,
            pageSize: reportConfig.defaultPageSize,
        });


        var grid = $("#grid").kendoGrid({
            dataSource: dataSource,

            toolbar: kendo.template($("#toolbar-template").html()),
            excel: {
                allPages: true,
                fileName: "Avg Aging Payment Rotation SO And SM Report",
            },
            excelExport: function (e) {
                //Report header details
                var fromADdate = $("#FromDateVoucher").val()
                var toADdate = $("#ToDateVoucher").val();
                var fromBSdate = $("#fromInputDateVoucher").val();
                var toBSdate = $("#toInputDateVoucher").val();
                var branches = ReportFilter.getBranchs();
                var sheet = e.workbook.sheets[0];
                for (var i = 0; i < sheet.rows.length; i++) {
                    if (sheet.rows[i].type != "group-footer" && sheet.rows[i].type != "footer")
                        continue;
                    var row = sheet.rows[i];
                    for (var b = 0; b < row.cells.length; b++) {

                        if (row.cells[b] != undefined)
                            row.cells[b].value = $(row.cells[b].value).text();
                    }
                }

                var rows = e.workbook.sheets[0].rows;
                rows.unshift({
                    height: 20,
                    cells: [{
                        value: "Avg Aging Payment Rotation SO And SM Report",
                        background: "#3fd5c0",
                        textAlign: "center",
                        colSpan: 7,
                        fontSize: 15,
                    }]
                });
                var filterText = $("#AdvanceFilter").attr('data-original-title');
                if (filterText.indexOf('|') < 0) {
                    filterText = $((filterText).replace(/<strong>/g, "|")).text().replace('|', '').split('|').reverse();;
                    $.each(filterText, function (k, item) {
                        rows.unshift({
                            cells: [{ value: item, colSpan: 7 }]
                        });
                    });
                }
                if (filterText.toString().indexOf('Date Range') < 0) {
                    rows.unshift({
                        cells: [{ value: "From :- " + fromADdate + "(" + fromBSdate + ")" + "\t To :- " + toADdate + "(" + toBSdate + ")", colSpan: 7 }]
                    });
                }
                for (var companyCount = 0; companyCount < branches.length; companyCount++) {
                    rows.unshift({
                        cells: [{ value: branches[companyCount].Company + " :- " + branches[companyCount].Branches.join(','), colSpan: 7 }]
                    });
                }
            },
            pdf:
            {
                avoidLinks: true,
                pageSize: "auto",
                margin: {
                    top: "2m",
                    left: "1m",
                    right: "1m",
                    buttom: "1m",

                },
                landscape: true,
                repeatHeaders: true,
                scale: 0.8,
            },
            height: window.innerHeight - 50,
            reorderable: true,
            resizable: true,
            groupable: true,
            sortable: true,
            filterable: {
                extra: false,
                operators: {
                    number: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "is greater than or equal to	",
                        gt: "is greater than",
                        lte: "is less than or equal",
                        lt: "is less than",
                    },
                    string: {

                        eq: "Is equal to",
                        neq: "Is not equal to",
                        startswith: "Starts with	",
                        contains: "Contains",
                        doesnotcontain: "Does not contain",
                        endswith: "Ends with",
                    },
                    date: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "Is after or equal to",
                        gt: "Is after",
                        lte: "Is before or equal to",
                        lt: "Is before",
                    }
                }
            },
            columnMenu: true,
            columnMenuInit: function (e) {
                wordwrapmenu(e);
                checkboxItem = $(e.container).find('input[type="checkbox"]');
            },
            columnShow: function (e) {
                if ($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                    SaveReportSetting('AverageAgingAndPaymentRotationSalesManagerAndOfficerWiseReport', 'grid');
            },
            columnHide: function (e) {
                if ($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                    SaveReportSetting('AverageAgingAndPaymentRotationSalesManagerAndOfficerWiseReport', 'grid');
            },
            pageable: {
                refresh: true,
                pageSizes: reportConfig.itemPerPage,
                buttonCount: 5
            },
            //  autoBind: true,
            scrollable: {
                virtual: true
            },
            dataBound: function (o) {
                var grid = o.sender;
                if (grid.dataSource.total() == 0) {
                    var colCount = grid.columns.length;
                    $(o.sender.wrapper)
                        .find('tbody')
                        .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                    displayPopupNotification("No Data Found Given Date Filter.", "info");
                }
                else {
                    var g = $("#grid").data("kendoGrid");
                    for (var i = 0; i < g.columns.length; i++) {
                        g.showColumn(i);
                    }
                    $("div.k-group-indicator").each(function (i, v) {
                        g.hideColumn($(v).data("field"));
                    });
                    $('div').removeClass('.k-header k-grid-toolbar');

                }
                UpdateReportUsingSetting("AverageAgingAndPaymentRotationSalesManagerAndOfficerWiseReport", "grid");
            },
            columns: [
                {
                    field: "PartyTypeName",
                    title: "Party Type Name",
                    width: "150px",
                    attributes: {
                        style: "text-align: left;"
                    },
                },
                {
                    field: "PartyName",
                    title: "Party Name",
                    width: "150px",
                },
                {
                    field: "CreditLimit",
                    title: "Credit Limit",
                    width: "90px",
                    footerTemplate: '<span style="float:right">#= "Total" #</span>',
                },
                {
                    field: "Balance",
                    title: "Balance",
                    width: "90px",
                    attributes: {
                        style: "text-align: right;"
                    },
                    attributes: {
                        style: "text-align: right;"
                    },
                    format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                    aggregates: ["sum"],
                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                    groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',


                },
                {
                    field: "Quantity",
                    title: "In Qty",
                    width: "90px",
                    attributes: {
                        style: "text-align: right;"
                    },
                    format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                    aggregates: ["sum"],
                    footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                    groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                },
                {
                    field: "PayRotationDays",
                    title: "Pay Rotation Days",
                    width: "90px",
                    attributes: {
                        style: "text-align: right;"
                    },
                },
                {
                    field: "IsChild",
                    title: "Is Child",
                    width: "90px",
                    attributes: {
                        style: "text-align: right;"
                    },

                },
            ]

        });

    };


    function KendoGridRefresh(readUrl) {
        $('#grid').val('');
        $('#grid').html('');
        BindGrid(readUrl)
    }
    $(document).ready(function () {
        var urltest = window.location.protocol + "//" + window.location.host + "/api/AnalysisApi/GetAverageAgingAndPaymentRotationSalesManagerAndOfficerWise"
        DateFilter.init(function () {
            consolidate.init(function () {
                BindGrid(urltest);
                var favourite = document.globalFavourite;
                if (favourite.length >= 1) {
                    debugger;
                    ReportnameExcel = favourite[0].Report.reportName;
                }
            });
        });
        var formEnglishDate = $("#FromDateVoucher").val();
        var toEnglishDate = $("#ToDateVoucher").val();
        $("#RunQuery").click(function (evt) {
            evt.preventDefault();
           
            urltest = window.location.protocol + "//" + window.location.host + "/api/AnalysisApi/GetAverageAgingAndPaymentRotationSalesManagerAndOfficerWise";
            KendoGridRefresh(urltest);
        });
        //var partialUrl = window.location.protocol + "//" + window.location.host + "/Report/GetDateField";
        //$.get(partialUrl, true, function (data) {
        //    $('#filterModal').find('.modal-body').append("<div class='btn-group'>" + data + "</div>");

        //    DateFilter.init();
        //    consolidate.init();
        //});
        //$("#filterModal").modal('show');


    });











</script>


