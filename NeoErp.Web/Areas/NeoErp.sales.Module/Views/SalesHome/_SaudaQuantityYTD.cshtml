
@using NeoErp.Core.Models;
@{
    var actionPageId = "SaudaQuantityYTD";
    var chartTitle = "YTD Sauda (Quantity)";

}

<style>
    .overlay1 div {
        position: relative;
        font-size: 23px;
        text-align: center;
        line-height: 356px;
    }

    .SaudaQuantityYTD {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        cursor: pointer;
    }

        .SaudaQuantityYTD, .SaudaQuantityYTD > thead > tr > th {
            font-size: 9px !important;
        }

    .amountRight {
        text-align: right;
    }

    .margin-0 {
        margin-top: -15px;
        margin-bottom: -15px;
        overflow-x: hidden;
    }
</style>
<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-bar-chart"></span> @chartTitle</h4>
            </div>
            <div class="modal-body bottom-gappingtwo form-horizontal">
                <div class="row">
                    <div class="clearfix">
                        <div class="btn-group options_@actionPageId responsivegap margin_bottom col-sm-12 col-md-12" data-toggle="buttons">
                            <button type="button" class="btn btn-sm default red-stripe active">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeColumn" name="seriesType_@actionPageId"
                                       type="radio" value="column" checked="checked" autocomplete="off" />column
                            </button>
                            <button type="button" class="btn btn-sm default green-stripe">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeBar" name="seriesType_@actionPageId"
                                       type="radio" value="bar" autocomplete="off" />bar
                            </button>
                            <button type="button" class="btn btn-sm default purple-stripe">
                                <i class="fa fa-line-chart"></i>
                                <input id="typeLine" name="seriesType_@actionPageId"
                                       type="radio" value="line"  autocomplete="off" />Line
                            </button>

                        </div>
                        <div class="col-md-6">
                            <div class="br"><div class="br"></div> </div>
                            <div class="clearfix sr-only">
                                <div class="dateOption_@actionPageId">
                                    <label>
                                        <input type="radio" id="ADFormat" name="DateFormat_@actionPageId" checked="checked" value="AD" /> AD
                                    </label>
                                    <label>
                                        <input type="radio" id="BSFormat" name="DateFormat_@actionPageId" value="BS" /> BS
                                    </label>
                                </div>
                            </div>
                            <div>
                                <!-- show labels & inStack option-->
                                <div class="input-group">
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showLabel_@actionPageId" type="checkbox" autocomplete="off" /> Show Labels
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                 
                        <div class="filter_title">
                            <label class="filter-label">Advance Filter</label>
                        </div>
                        @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = false,
                       ShowProductFilter = true,
                       ShowPartyTypeFilter = false,
                       ShowCategoryFilter = false,
                       ShowLocationFilter = false,
                       ShowDocumentFilter = false,
                       ShowCompanyFilter = false,
                       ShowFiscalYearFilter = false,
                       ShowBranchFilter = true,
                       IsPopUp = false,
                       ActionPageId = actionPageId
                   })
               
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-green applydp saveChartConfig_@actionPageId" data-id="@actionPageId" data-dismiss="modal" id="apply_save_@actionPageId">Save & Apply</button>
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
    </div>
</div>

<div class="portlet portlet-sortable light bordered" id="@actionPageId">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">@chartTitle</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" data-title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down Thirdcustom"></i>
                </a>
                <ul class="dropdown-menu custom">
                    <div class="btn-group-custom">
                        <button type="button" data-id="SaudaQuantityYTDChart" class="export-pdf btn default red-stripe"><i class="fa fa-file-pdf-o"></i>PDF</button>
                        <button type="button" data-id="SaudaQuantityYTDChart" class="export-img btn default blue-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="SaudaQuantityYTDChart" class="export-svg btn default green-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config"></a>
            <a href="javascript:;" class="reload"></a>
            <a href="javascript:;" class="fullscreen"></a>
            <a href="javascript:;" class="remove"></a>
        </div>
    </div>
    <div class="portlet-body">
        <div class="margin-0">
            <table class="SaudaQuantityYTD table table-hover table-responsive table-bordered">
                <thead>
                    <tr>
                        <td>Raw Material</td>
                        <td>Direct Purchase Qty.</td>
                        <td>Sauda Purchase Qty.</td>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="SaudaQuantityYTDChart"></div>
            <div class="overlay1"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>

    <script>
        var pageId_SaudaQuantityYTD = '@actionPageId';
        var clicked = false, base = 0;
        var SaudaQuantityYTD = (function () {
            //initialize variables

            var config = {
                url: window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSaudaQuantityReport",
                series: [{
                    field: "DIRECT_QUANTITY",                     
                    name: "Direct Qty"                    
                },
                    {
                        field: "SAUDA_QUANTITY",
                        name: "Sauda Qty"
                    }],
                color: ["#0000FF", "#7FFF00", "#006400", "#9932CC", "#C71585", "#FF0000", "#FFFF00"],
                categoryField: "ITEM_DESC",
                categoryTitle: '',
                group: { field: "ITEM_DESC" },
                sortField: "ITEM_DESC",

                isStack: false,
                fieldValue: $("input[name=fieldType_SaudaQuantityYTD]:checked").val(),
                showLabel: $("#showLabel_SaudaQuantityYTD").prop("checked"),
                seriesType: $("input[name=seriesType_SaudaQuantityYTD]:checked").val(),

                _oldData: {
                    dateFormat: $("input[name=DateFormat_SaudaQuantityYTD]:checked").val(),
                    fieldValue: $("input[name=fieldType_SaudaQuantityYTD]:checked").val()
                },

            };
            var _oldConfig = JSON.stringify(config);

            function PreInit() {
                //only hide for this chart
                $("#productToggle_SaudaQuantityYTD").addClass("sr-only");
                $("#productTreeView_SaudaQuantityYTD").addClass("sr-only");
                // $("#productMultiselect_SaudaQuantityYTD").data("kendoMultiSelect").options.maxSelectedItems = 1;

                var productMultiSelect = $("#productMultiselect_" + pageId_SaudaQuantityYTD).data("kendoMultiSelect");
                productMultiSelect.dataSource.filter({});
                productMultiSelect.value([]);


                var pageId = pageId_SaudaQuantityYTD;
                $.ajax({
                    type: 'POST',
                    data: { 'ChartName': pageId },
                    async: false,
                    url: window.location.protocol + "//" + window.location.host + "/Main/GetUserWiseChartConfig",
                    success: function (data) {
                        if (data != "") {
                            //for series Type

                            $("input[name=seriesType_" + pageId + "]").filter('[value=' + data.ChartType + ']').prop('checked', true);
                            $("input[name=seriesType_" + pageId + "]").parent().removeClass("active")
                            $("input[name=seriesType_" + pageId + "]:checked").parent().addClass("active");

                            //for showLabel
                            data.ShowLabel == "true" ? $("#showLabel_" + pageId).prop("checked", true) : $("#showLabel_" + pageId).prop("checked", false);

                            //for advance filter                          
                            if (!_.isEmpty(data.ProductList))
                                productMultiSelect.value(data.ProductList.split(','));
                            config.seriesType = data.ChartType;
                            config.dateFormat = data.DateFormat;
                            config.fieldValue = data.FieldValue;
                            config.isStack = data.IsStack;
                            config.showLabel = data.ShowLabel;
                        }
                    },
                    complete: function (data) {

                        productMultiSelect.dataSource.filter({
                            field: 'CATEGORY_CODE',
                            operator: 'eq',
                            value: 'RM'
                        });
                    }
                });
                ChartFilter('SaudaQuantityYTD', SaudaQuantityYTD.init, true);
            }
            function loadDataSource() {
                reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
               
                //var dateformat = $("input[name=DateFormat_SaudaQuantityYTD]:checked").val();
               // config.url = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesMonthlyFiscalYearReport?DateFormat=" + $("input[name=DateFormat_SaudaQuantityYTD]:checked").val();
                config.showLabel = $("#showLabel_SaudaQuantityYTD").prop("checked");
                var dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: Arg.url(config.url, {"duration": "This Year"}),
                            dataType: "json", // <-- The default was "jsonp".
                            type: "POST",
                            contentType: "application/json; charset=utf-8"
                        },
                        parameterMap: function (options, type) {
                            var paramMap = JSON.stringify($.extend(options, reportFilter));
                            delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                            delete paramMap.$format; // <-- remove format parameter.
                            return paramMap;
                        }
                    },
                    requestStart: function () {
                        kendo.ui.progress($("#SaudaQuantityYTDChart"), true);
                    },
                    requestEnd: function () {
                        kendo.ui.progress($("#SaudaQuantityYTDChart"), false);
                    },                    
                });

                $("#SaudaQuantityYTD .DisplayFilterContent a").text("");               
                fullScreenHandle();
                CreateChart(dataSource);
            }
            function CreateChart(dataSource) {
                $('.btnGrid_SaudaQuantityYTD').data("type", "Chart");
                $("#SaudaQuantityYTDChart").html('');
                $("#SaudaQuantityYTDChart").removeAttr("style");
                $("#SaudaQuantityYTDChart").removeAttr("class");
                $("#SaudaQuantityYTDChart").kendoChart({
                    chartArea: {
                        height: ($("#SaudaQuantityYTDChart").hasClass("portlet-fullscreen")) ? 550 : 350,
                    },
                    onDrag: function (e) {
                        var chart = e.sender;
                        var ds = chart.dataSource;
                        var options = chart.options;

                        var categoryRange = e.axisRanges.CategoryAxis;

                        if (categoryRange) {
                            var xMin = categoryRange.min;
                            var xMax = categoryRange.max;

                            options.categoryAxis.min = xMin;
                            options.categoryAxis.max = xMax;

                            ds.filter(viewModel.getFilter(xMin, xMax));
                        }
                    },
                    pannable: {
                        lock: "y"
                    },
                    zoomable: {
                        mousewheel: {
                            lock: "y"
                        },
                        selection: {
                            lock: "y"
                        }
                    },
                    dataSource: dataSource,
                    legend: {
                        position: "bottom"
                    },
                    seriesColors: config.color,
                    seriesDefaults: {
                        type: config.seriesType,
                        labels: {
                            visible: config.showLabel,
                            template: "#= FormatLabels(value)#",
                            rotation: '270',
                            padding: {
                                left: -5
                            },
                        },
                        style: "smooth",
                    },
                    series: config.series,
                    categoryAxis: {
                        field: "ITEM_DESC",
                        labels: {
                            rotation: -45,
                        },
                        //title:"Ashohk",
                        //title: { text: $("#SaudaQuantityYTDChart").data("kendoChart") == undefined ? "" : $("#SaudaQuantityYTDChart").data("kendoChart").options.categoryAxis.title.text }
                        title: { text: config.categoryTitle }
                    },
                    valueAxis: {
                        line: {
                            visible: true
                        },
                        labels: {
                            rotation: 'auto',
                            template: "#= FormatLabels(value)#"
                        },
                        title: { text: amountFigureType }
                    },
                    tooltip: {
                        visible: true,
                        format: "{0}",
                        template: "#= category #: \n #= FormatLabels(value)#"
                    },
                    dataBound: function (e) {
                        
                        var maxValue = getMaxValueFromDataSource(e);
                        var majorunit = Math.max(6, maxValue / 6);
                        e.sender.options.valueAxis.majorUnit = majorunit;
                        e.sender.options.valueAxis.max = maxValue + majorunit;
                        e.sender.options.valueAxis.axisCrossingValue = [0, -(maxValue + majorunit)];
                        $("#SaudaQuantityYTDChart").next(".overlay1").find("div").text("No data available");
                        $("#SaudaQuantityYTDChart").next(".overlay1").find("div").removeAttr("style");
                        $("#SaudaQuantityYTDChart").next(".overlay1").toggle(maxValue <= 0);
                       // e.sender.options.categoryAxis.categories = getCategoryFromDataSource(e);

                        CreateTable(e.sender.dataSource.data());
                    },
                    seriesClick: function (e) {
                    },
                });
            }
            function CreateTable(data) {
                
                var bodyRow = "<tr>";               
                $.each(data, function (i, obj) {       
                    bodyRow += "<td>" + obj.ITEM_DESC + "</td>"; 
                    bodyRow += "<td class='amountRight'>" + $.number(obj.DIRECT_QUANTITY,2) + "</td>"; 
                    bodyRow += "<td class='amountRight'>" + $.number(obj.SAUDA_QUANTITY,2) + "</td></tr>"; 
                });
                
               
                //clear first              
                $(".SaudaQuantityYTD").find("tbody").html("");
                //fill now               
                $(".SaudaQuantityYTD").find("tbody").html(bodyRow);

            }
            function refreshChart(flag) {
                //check if showlevel and stack changed
                if (flag != undefined && flag.data == false) {
                    if ($(".btnGrid_SaudaQuantityYTD").data("type") == "Grid") {
                        $(".btnGrid_SaudaQuantityYTD").data("type", "Chart");
                        loadDataSource();
                        return;
                    }
                }
                //check if series type changed
                if (flag != undefined && flag.data.options != undefined) {
                    if ($(".btnGrid_SaudaQuantityYTD").data("type") == "Grid") {
                        chart_grid_option_change("btnGrid_SaudaQuantityYTD", SaudaQuantityYTD.init);
                        return;
                    }
                }
                var chart = $("#SaudaQuantityYTDChart").data("kendoChart"),
                    type = $("input[name=seriesType_SaudaQuantityYTD]:checked").val(),
                    IsLebelShow = $("#showLabel_SaudaQuantityYTD").prop("checked");

                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].type = type;
                    chart.options.series[i].labels.visible = IsLebelShow;
                    if (type == "column") {
                        chart.options.series[i].labels.rotation = -90;
                    }
                    if (type == "bar") {
                        chart.options.series[i].labels.rotation = 0;
                    }


                };
                chart.refresh();
            }

            //event Bind
            function applyClickEvent() {

                var checkedDateFormat = $("input[name=DateFormat_SaudaQuantityYTD]:checked").val();
                var checkedFieldValue = $("input[name=fieldType_SaudaQuantityYTD]:checked").val();
                var IsChanged = false;
                if (config._oldData.dateFormat != checkedDateFormat) {
                    IsChanged = true;
                    //config.url = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesMonthlyFiscalYearReport?DateFormat=" + $("input[name=DateFormat_SaudaQuantityYTD]:checked").val();
                    config._oldData.dateFormat = checkedDateFormat;

                }
                if (config._oldData.fieldValue != checkedFieldValue) {
                    refreshChart();
                    config._oldData.fieldValue = checkedFieldValue;
                }
                ChartFilter('SaudaQuantityYTD', SaudaQuantityYTD.init, IsChanged);
            }
            function reloadClickEvent() {

                RefreshChartFilterControl('SaudaQuantityYTD');
                config = JSON.parse(_oldConfig);
                PreInit();
            }
            function chartGridSwitchEvent() {
                var datasource = $("#SaudaQuantityYTDChart").data("kendoChart").dataSource;
                $('.btnGrid_SaudaQuantityYTD').data("type") == "Chart" ? CreateGrid(datasource) : CreateChart(datasource);
                $("i", this).toggleClass("icon-bar-chart");
            }
            function saveChartConfig() {
                var pageId = $(this).data("id");
                var data = {
                    ChartName: pageId,
                    ChartType: $("input[name=seriesType_" + pageId + "]:checked").val(),
                    FieldValue: $("input[name=fieldType_" + pageId + "]:checked").val(),
                    DateFormat: $("input[name=DateFormat_" + pageId + "]:checked").val(),
                    ShowLabel: $("#showLabel_" + pageId).prop("checked"),
                    IsStack: false,
                    ProductList: $("#productMultiselect_" + pageId).data('kendoMultiSelect').value().join(','),
                    FiscalYear: $("#FiscalYearMultiSelect_" + pageId).data('kendoMultiSelect').value().join(','),
                }

                $.ajax({
                    type: 'POST',
                    data: data,
                    url: window.location.protocol + "//" + window.location.host + "/Main/SaveUserWiseChartConfig",
                    success: function (xhr, status) {
                        displayPopupNotification("Setting Saved", "success");
                        loadDataSource();
                    },
                    error: function (xhr, status) {
                        displayPopupNotification("Error", "error");
                    }
                });

            }
            //handle full screen
            function fullScreenHandle() {
                // handle portlet fullscreen
                $('body').on('click', '.portlet > .portlet-title .fullscreen', function (e) {
                    e.preventDefault();
                    var portlet = $(this).closest(".portlet");
                    var chart = portlet.find('.portlet-body > .k-content.wide > div').data("kendoChart");
                    if (portlet.hasClass('portlet-fullscreen')) {
                        chart.options.chartArea.height = 450;
                    } else {
                        chart.options.chartArea.height = 250;
                    }
                    //change chart height

                    chart.redraw();

                });
            }
            return {
                preInit: PreInit,
                init: loadDataSource,
                refreshChart: refreshChart,
                applyClick: applyClickEvent,
                reloadClick: reloadClickEvent,
                btnGridClick: chartGridSwitchEvent,
                saveConfig: saveChartConfig,
            };
        })();

        $(document).ready(function () {
            SaudaQuantityYTD.preInit();

            //start Binding
            $(document).bind("kendo:skinChange", SaudaQuantityYTD.init);
            $('#SaudaQuantityYTDChart').closest('.portlet').find('.reload').bind("click", SaudaQuantityYTD.reloadClick);
            $('#apply_SaudaQuantityYTD').bind("click", SaudaQuantityYTD.applyClick);
            $(".btnGrid_SaudaQuantityYTD").bind('click', SaudaQuantityYTD.btnGridClick);
            $("#showLabel_SaudaQuantityYTD").bind("change", true, SaudaQuantityYTD.refreshChart);
            $('#Stack_SaudaQuantityYTD').bind('click', true, SaudaQuantityYTD.refreshChart);
            $(".options_SaudaQuantityYTD").bind("change", { "options": true }, SaudaQuantityYTD.refreshChart);
            $(".saveChartConfig_SaudaQuantityYTD").bind("click", SaudaQuantityYTD.saveConfig);
            $('.SaudaQuantityYTD').on({
                mousemove: function (e) {
                    clicked && function (xAxis) {
                        var _this = $(this);
                        if (base > xAxis) {
                            var diff = (base - xAxis).toString() + "px";
                            base = xAxis;
                            _this.css('margin-left', '-=' + diff);
                        }
                        if (base < xAxis) {
                            var diff = (xAxis - base).toString() + "px";
                            base = xAxis;
                            _this.css('margin-left', '+=' + diff);
                        }
                    }.call($(this), e.pageX);
                },
                mousedown: function (e) {
                    clicked = true;
                    base = e.pageX;
                },
                mouseup: function (e) {
                    clicked = false;
                    base = 0;
                }
            });
        });
    </script>
</div>
