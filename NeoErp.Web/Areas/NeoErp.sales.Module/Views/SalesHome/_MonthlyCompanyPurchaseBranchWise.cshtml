@using NeoErp.Core.Models;
@{
    var actionPageId = "MonthlyCompanyPurchaseBranchWise";
}
<style>
    .slimScrollBar {
        border-radius: 5px !important;
        background-color: #333 !important;
    }

    .slimScrollDiv, #customerMultiSelect {
        height: auto !important;
    }

    ul.dropdown-menu.custom {
        margin-top: 8px !important;
        border: none;
        box-shadow: none !important;
    }

    .dropdown-menu.custom:before {
        left: 58px !important;
    }

    .download-btn {
        margin: 0px !important;
        padding-top: -2px !important;
        padding-left: 0px;
        padding-right: 0px;
        margin-top: -5px !important;
        margin-left: 5px !important;
    }

    .dropdown-menu.custom {
        left: -27px !important;
        top: 20px !important;
    }

    .dropdown > .dropdown-menu:before, .dropdown-toggle > .dropdown-menu:before, .btn-group > .dropdown-menu:before {
        position: absolute;
        top: -8px;
        left: 30px;
        right: auto;
        display: inline-block !important;
        border-right: 8px solid transparent;
        border-bottom: 8px solid #e0e0e0;
        border-left: 8px solid transparent;
        content: '';
    }

    i.icon-arrow-down {
        color: #acacac;
    }

    .btn-group-custom button.btn {
        padding: 7px 7px !important;
        float: left;
    }

    .dropdown-menu.custom {
        left: -55px !important;
    }

    a.monthlyCompanyPurchaseBranchWiseDatagrid {
        color: #acacac !important;
    }
</style>
<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="CompanyPurchaseModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-bar-chart"></span> Monthly company Purchase BranchWise Chart</h4>
            </div>
            <div class="modal-body bottom-gappingtwo form-horizontal">
                <div class="row">
                    <div class="monthlybranch-Purchase clearfix">
                        <div class="col-md-12 col-sm-12">
                            <div class="btn-group optionsCompanyPurchaseBranchWise" data-toggle="buttons">
                                <button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-bar-chart"></i>
                                    <input id="typeColumnCompanyPurchase" name="seriesTypeCompanyPurchaseBranchWise"
                                           type="radio" value="column" checked="checked" autocomplete="off" /> column
                                </button>
                                <button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-bar-chart"></i>
                                    <input id="typeBarCompanyPurchaseBranchWise" name="seriesTypeCompanyPurchaseBranchWise"
                                           type="radio" value="bar" autocomplete="off" /> bar
                                </button>
                                <button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-line-chart"></i>
                                    <input id="typeLineCompanyPurchase" name="seriesTypeCompanyPurchaseBranchWise"
                                           type="radio" value="line"  autocomplete="off" />Line
                                </button>
                                @*<button type="button" class="btn btn-sm default green-stripe">
                                    <i class="fa fa-pie-chart"></i>
                                    <input id="typePieCompanyPurchase" name="seriesTypeCompanyPurchaseBranchWise"
                                           type="radio" value="pie" autocomplete="off" />Pie
                                </button>
                                <button type="button" class="btn btn-sm default green-stripe">
                                    <i class="fa fa-area-chart"></i>
                                    <input id="typeareaCompanyPurchase" name="seriesTypeCompanyPurchaseBranchWise"
                                           type="radio" value="area" autocomplete="off" />area
                                </button>*@
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6 choose margin_bottom">
                            <div class="btn-group optionsCompanyPurchaseBranchWise" data-toggle="buttons">
                                <h5> Choose Value Field</h5>
                                <button type="button" class="btn btn-sm default red-stripe">
                                    <i class="fa fa-cart-arrow-down"></i>
                                    <input id="QuantityColumnCompanyPurchase" name="fieldTypeCompanyPurchase"
                                           type="radio" value="Quantity" checked="checked" autocomplete="off" /> Quantity
                                </button>
                                <button type="button" class="btn btn-sm default green-stripe">
                                    <i class="fa fa-rupee"></i>
                                    <input id="typeBarCompanyPurchaseBranchWise" name="fieldTypeCompanyPurchase"
                                           type="radio" value="Amount" autocomplete="off" /> Amount
                                </button>
                            </div>
                        </div>
                        <div class="col-sm-6 col-md-6">
                            <!-- show label & Stack option-->
                            <div class="input-group chart-option-inline option_gap">
                                <div class="icheck-inline">
                                    <label>
                                        <input id="showlablesCompanyPurchaseBranchWise" type="checkbox" autocomplete="off" /> Show Labels
                                    </label>
                                </div>
                                <div class="date-option">
                                    <label>
                                        <input type="radio" id="ADFormat" name="DateFormat_monthlyCompanyPurchase" value="AD" /> AD
                                    </label>
                                    <label>
                                        <input type="radio" id="BSFormat" name="DateFormat_monthlyCompanyPurchase" checked="checked" value="BS" /> BS
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="options">
                    
                        </div>
                    </div>
                    
                </div>
                <div class="advancefilterselection">
                            <div class="filter_title">
                                <label class="filter-label">Advance Filter</label>
                            </div>

                            @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                               {
                                   ShowCustomerFilter = false,
                                   ShowProductFilter = false,
                                   ShowPartyTypeFilter = false,
                                   ShowCategoryFilter = false,
                                   ShowLocationFilter = false,
                                   ShowDocumentFilter = false,
                                   ShowCompanyFilter = false,
                                   ShowBranchFilter = false,
                                   IsPopUp = false,
                                   ActionPageId = actionPageId
                               })
                        </div>
            </div>

            <div class="modal-footer">
                @*<button type="button" class="btn default" data-dismiss="modal">Close</button>*@
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="portlet portlet-sortable  light bordered" id="MonthlyCompanyPurchaseBranchWise">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">BranchWise Purchase Chart</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            <a class="btnGrid monthlyCompanyPurchaseBranchWiseDatagrid" data-type="Chart" data-chart-name="Company_Purchase_BranchWise" data-title="Grid">
                <i class="fa fa-table"></i>
            </a>
              
            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down SecondcustomCompanyPurchaseBranchWise"></i>

                </a>
                <ul class="dropdown-menu custom SecondslidetoggleCompanyPurchaseBranchWise">
                    <div class="btn-group-custom">
                        <button type="button" data-id="companyBrachWisePurchaseChart" class="export-pdf btn default green-stripe"><i class="fa fa-file-pdf-o"></i> PDF</button>
                        <button type="button" data-id="companyBrachWisePurchaseChart" class="export-img btn default blue-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="companyBrachWisePurchaseChart" class="export-svg btn default red-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config">
            </a>
            <a href="javascript:;" class="reload">
            </a>
            <a href="javascript:;" class="fullscreen">
            </a>
            <a href="javascript:;" class="remove">
            </a>
        </div>
    </div>
    <div class="portlet-body">
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="companyBrachWisePurchaseChart"></div>
             <div class="overlay"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>


    <script>
        var defaultDateFormat_monthlyCompanyPurchase = "";
        
        var dataBounded_MonthlyCompanyPurchaseBranchWise = false;
        var dayWiseUrl_MonthlyCompanyPurchaseBranchWise = "";
        var toggleFlag_MonthlyCompanyPurchaseBranchWise = true;

        //LoadDataGrid function for data-grid
        function LoadDataGrid_MonthlyCompanyPurchaseBranchWise(dataSource, monthField) {
             ;
            $("#companyBrachWisePurchaseChart").html('');
            $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "Grid");
            var monthTitle = "Month";
            var format = $("input[name=DateFormat_monthlyCompanyPurchase]:checked").val();
            dataSource = dataSource == undefined ? $("#companyBrachWisePurchaseChart").data("kendoChart").dataSource : dataSource;
            if (format == "BS") {
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + $("#companyBrachWisePurchaseChart").data("kendoChart").options.categoryAxis.title.text + "]";
                }
                else {
                    monthField = "Month";
                    monthTitle = "Month"
                }
            }
            if (monthField == undefined)
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + $("#companyBrachWisePurchaseChart").data("kendoChart").options.categoryAxis.title.text + "]";
                }
                else {
                    monthField = "Month";
                    monthTitle = "Month"
                }

            //dataSource.query({
            //    group: { field: monthField, },
            //    sort: { field: "NepaliMonthInt", dir: "asc" },
            //});
            dataSource.group({ field: "BranchName", title: "Month" });
            $("#companyBrachWisePurchaseChart").kendoGrid({
                dataSource: dataSource,
                height: $("#MonthlyBranchchart").hasClass("portlet-fullscreen") ? 550 : 350,
                groupable: false,
                sortable: true,
                //selectable: "multiple",
                toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                excel: {
                    fileName: "Monthly company Purchase BranchWise Report",
                    allPages: true
                },
                columns: [{
                    field: monthField,
                    title: monthTitle,
                    width: 240
                }, {
                    field: "Quantity",
                    title: "Quantity",
                    format: "{0:n0}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }, {
                    field: "Amount",
                    title: "Amount",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }],
                dataBound: function (e) {
                    var gird = e.sender;
                    flag = false;
                    gird.table.find(".k-grouping-row").each(function () {
                        if (flag == true) { gird.collapseGroup(this); }
                        else
                            flag = true;
                    });
                }
            });
        }


        function ThirdChartData_CompanyPurchaseBranchWise() {
             
            $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "Chart");
            var urlData = "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=";
            CreateMonthlyBranchPurchaseChartFormBranchWiseChart(urlData);
            RefreshChartFilterControl('@actionPageId');
        }

        var checkedCompany = "";
        $(".monthlyCompanyPurchaseBranchWiseDatagrid").click(function () {

            var type = $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type");
            var name = $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("chart-name");

            if (type == "Chart" && name == "Company_Purchase_BranchWise") {
                LoadDataGrid_MonthlyCompanyPurchaseBranchWise()
                $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "Grid");
            }
            else if (type == "Chart" && name == "branch_Purchase_monthly") {
                LoadDataGrid_MonthlyBranchPurchaseChartForCompany();
                $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "Grid");
            }
            else if (type == "Grid" && name == "branch_Purchase_monthly") {
                $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "Chart");
                var urldata = "?customerCode=&itemCode=&categoryCode=&companyCode=" + checkedCompany + "&branchCode=&partyTypeCode=&formCode=";
                CreateMonthlyBranchPurchaseChartFormBranchWiseChart(urldata);
            }
            else if (type == "Grid") {
                ThirdChartData_CompanyPurchaseBranchWise();
                $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "Chart");
            }            
            $("i", this).toggleClass("icon-bar-chart");
        });

        $("#companyBrachWisePurchaseChart").on('dblclick', ".k-state-selected", function (e) {
            var grid = $("#companyBrachWisePurchaseChart").data("kendoGrid");
            var dateformat = $("input[name=DateFormat_monthlyCompanyPurchase]:checked").val();
            var selectedItem = grid.dataItem(grid.select());
            selectedItem.Month = selectedItem.Month == null ? selectedItem.Nepalimonth : selectedItem.Month;

            var clickedMonth = selectedItem.Month;
                    var clickedCompany =selectedItem.Companycode;
                    var urldata = "?customerCode=&itemCode=&categoryCode=&companyCode=" + clickedCompany + "&branchCode=&partyTypeCode=&formCode=";
                    $('#MonthlyCompanyPurchaseBranchWise .monthlyCompanyPurchaseBranchWiseDatagrid').data("chart-name", "branch_Purchase_monthly");
                    CreateMonthlyBranchPurchaseChartFormBranchWiseChart(urldata);
        })
        
    </script>
    <script>
        $("#showzerovalue_monthlyBranchWisePurchase").on("change", function () {
            CreateMonthlyBranchPurchaseChartFormBranchWiseChart();
            RefreshChartFilterControl('@actionPageId');
        });
        $('#companyBrachWisePurchaseChart').closest('.portlet').find('.fullscreen').click(function () {
            if ($(this).hasClass("on")) {
                $("#companyBrachWisePurchaseChart").data("kendoChart").options.chartArea.height = 350;
            }
            else {
                $("#companyBrachWisePurchaseChart").data("kendoChart").options.chartArea.height = 550;
            }
            $("#companyBrachWisePurchaseChart").data("kendoChart").dataSource.read();
            $("#companyBrachWisePurchaseChart").data("kendoChart").refresh();
        });
        $('#companyBrachWisePurchaseChart').closest('.portlet').find('.config').click(function () {
            $(this).closest('.portlet').css('zIndex', 10040);
        });
        $('#companyBrachWisePurchaseChart').closest('.portlet').find('.icon-arrow-down').click(function () {
            $(this).closest('.portlet').css('zIndex', 10040);
        });
        $('#companyBrachWisePurchaseChart').closest('.portlet').find('.reload').click(function () {
            var urlData = "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=";
            $('#MonthlyCompanyPurchaseBranchWise .monthlyCompanyPurchaseBranchWiseDatagrid').data("chart-name", "Company_Purchase_BranchWise");
            $('#MonthlyCompanyPurchaseBranchWise .monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "Chart");
            CreateMonthlyBranchPurchaseChartFormBranchWiseChart(urlData);
            RefreshChartFilterControl('@actionPageId'); // ??
        });

        function refreshCompanyPurchaseBranchWise() {
            if ($(".monthlyCompanyPurchaseBranchWiseDatagrid").attr("data-type") == "Grid")// data-grid toogle chart option in data-grid attribute in div
            {
                $(".monthlyCompanyPurchaseBranchWiseDatagrid").attr("data-type", "Chart");
                CreateMonthlyBranchPurchaseChart();
                return;
            }
            var chart = $("#companyBrachWisePurchaseChart").data("kendoChart"),
                type = $("input[name=seriesTypeCompanyPurchaseBranchWise]:checked").val(),
                fieldtype = $("input[name=fieldTypeCompanyPurchase]:checked").val(),
                labels = $("#showlablesCompanyPurchaseBranchWise").prop("checked");
            var dateformat = $("input[name=DateFormat_monthlyCompanyPurchase]:checked").val();
            var catagoryAxisName_monthlyCompanyPurchaseBranchWise = "Month", sortAxis_monthlyPurchaseBranchWise = "Month";
            if (dateformat == "BS") {
                catagoryAxisName_monthlyCompanyPurchaseBranchWise = "Month";
                sortAxis_monthlyPurchaseBranchWise = "MonthInt";
            }
            for (var i = 0, length = chart.options.series.length; i < length; i++) {
                chart.options.series[i].type = type;
                chart.options.series[i].labels.visible = labels;
            };

            if (fieldtype == "Quantity") {
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].field = "Quantity";
                };
            }
            else {
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].field = "Amount";
                };
            }


            if (type == "column") {
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].labels.rotation = -90;
                }
            }
            if (type == "bar") {
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].labels.rotation = 0;
                }
            }
            chart.refresh();
        }

        $('#apply_@actionPageId').click(function () {
            //check for filter changes
            var checkedDateFormat = $('input[name=DateFormat_monthlyCompanyPurchase]:checked').val();
            var IsDateChanged = false;
            if (defaultDateFormat_monthlyCompanyPurchase != checkedDateFormat) {
                IsDateChanged = true;
                defaultDateFormat_monthlyCompanyPurchase = checkedDateFormat;
            }
            ChartFilter('@actionPageId', "CreateMonthlyBranchPurchaseChartFormBranchWiseChart", IsDateChanged);
        });
        $(document).ready(function () {
             ;
            defaultDateFormat_monthlyCompanyPurchase = $('input[name=DateFormat_monthlyCompanyPurchase]:checked').val();
            $('[title="Download"]').tooltip({
                trigger: 'hover'
            });

            $('.icon-arrow-down.SecondcustomCompanyPurchaseBranchWise').click(function () {
                $('.dropdown-menu.custom.SecondslidetoggleCompanyPurchaseBranchWise').slideToggle(200);
            });
            CreateMonthlyBranchPurchaseChartFormBranchWiseChart();
            $(".optionsCompanyPurchaseBranchWise").bind("change", function () {
                if ($('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type") == "Chart")
                    refreshCompanyPurchaseBranchWise();
                else
                    chart_grid_option_change("companyBrachWisePurchaseChart", "CreateMonthlyBranchPurchaseChartFormBranchWiseChart");
            });
            $("#showlablesCompanyPurchaseBranchWise").bind("change", function () {
                var temp = $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type");
                $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "temp");
                refreshCompanyPurchaseBranchWise();
                $('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", temp);
            });


        });
        //API
        function CreateMonthlyBranchPurchaseChartFormBranchWiseChart() {
            $('#MonthlyCompanyPurchaseBranchWise').find('.caption-subject').html("Company Purchase BranchWise");
            var urlData = (urlData == undefined) ? "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=" : urlData;

            monthlyBranchPurchase = urlData.replace('?', '&');
            dayWiseUrl_monthlyBranchPurchase = monthlyBranchPurchase;
            var dateformat = $("input[name=DateFormat_monthlyCompanyPurchase]:checked").val();
            var catagoryAxisName_monthlyCompanyPurchaseBranchWise = "Month", sortAxis_monthlyPurchaseBranchWise = "Month";
            if (dateformat == "BS") {
                catagoryAxisName_monthlyCompanyPurchaseBranchWise = "Month";
                sortAxis_monthlyPurchaseBranchWise = "Month";
            }


            var mainUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetPurchaseBranchMonthlyReport";
            var daywiseUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetPurchaseBranchDailyReport";

            var IsDataGrid = $('#MonthlyCompanyPurchaseBranchWise .monthlyCompanyPurchaseBranchWiseDatagrid').data("type");
            reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
            reportFilter.ReportFilters.BranchFilter = [];
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: mainUrl + "?DateFormat=" + dateformat + urlData.replace('?', '&'),
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, reportFilter));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },
                requestStart: function () {
                    if (IsDataGrid != "Grid") {
                        kendo.ui.progress($("#companyBrachWisePurchaseChart"), true);
                    }
                },
                requestEnd: function () {
                    kendo.ui.progress($("#companyBrachWisePurchaseChart"), false);
                },
                sort: {
                    field: "NepaliMonthInt",
                    dir: "asc",
                },
                group: {
                    field: "BranchName",
                },
                //sort:{
                //    field: "Branch_Code", dir: "desc"
                //},
                schema: {
                    parse: function (items) {
                         
                        var items,
                            result = [];
                        var showzerovalue = $("#showzerovalue_monthlyBranchWisePurchase").prop("checked");

                        if (showzerovalue) {
                            for (var i = 0; i < items.length; i++) {
                                item = items[i];
                                result.push(item);
                            }
                        }
                        else {
                            for (var i = 0; i < items.length; i++) {
                                item = items[i];
                                if (item.Collection !== 0 && item.Purchase !== 0) {
                                    result.push(item);
                                }
                            }
                        }
                        return result;
                    },
                }
            });
            // data-grid set option on ceate funciton
            $("#MonthlyCompanyPurchaseBranchWise .DisplayFilterContentCompanyPurchase a").text("");

            if (IsDataGrid == "Grid") {
                LoadDataGrid_MonthlyBranchPurchaseChartForCompany(dataSource);
                return;
            }

            $("#companyBrachWisePurchaseChart").kendoChart({

                chartArea: {
                    height: ($("#MonthlyCompanyPurchaseBranchWise").hasClass("portlet-fullscreen")) ? 550 : 350,
                },
                onDrag: function (e) {
                     
                    var chart = e.sender;
                    var ds = chart.dataSource;
                    var options = chart.options;
                    var categoryRange = e.axisRanges.CategoryAxis;
                    if (categoryRange) {
                        var xMin = categoryRange.min;
                        var xMax = categoryRange.max;

                        options.categoryAxis.min = xMin;
                        options.categoryAxis.max = xMax;

                        ds.filter(viewModel.getFilter(xMin, xMax));
                    }
                },
                pannable: {
                    lock: "y"
                },
                zoomable: {
                    mousewheel: {
                        lock: "y"
                    },
                    selection: {
                        lock: "y"
                    }
                },
                dataSource: dataSource,
                title: {
                },
                legend: {
                    position: "bottom"
                },
                seriesDefaults: {
                    type: $("input[name=seriesTypeCompanyPurchaseBranchWise]:checked").val(),
                    style: "smooth",
                    stack: false,
                    labels: {
                        visible: $("#showlablesCompanyPurchaseBranchWise").prop("checked"),
                        template: "#= value#"
                    },
                },
                valueAxis: {
                    line: {
                        visible: true
                    },
                    labels: {
                        rotation: 'auto',
                        template: "#= FormatSeriesLabels(value)#"
                    },
                    title: { text: amountFigureType }
                },
                series: [{
                    field: "Amount",
                    name: "#= group.value #"
                }],
                seriesColors: ["#428bca", "#da3b36", "#e67d4a", "#5bc0de", "#5cb85c", "#f2b661"],
                categoryAxis: {
                    field: catagoryAxisName_monthlyCompanyPurchaseBranchWise,
                    labels: {
                        rotation: -45,
                    }
                },
                tooltip: {
                    visible: true,
                    format: "{0}",
                    template: "#= category #: \n #= FormatSeriesLabels(value)#"
                },
                dataBound: function (e) {
                     var maxValue = getMaxValueFromDataSource(e);
                    var majorunit = Math.max(6, maxValue / 6);
                    e.sender.options.valueAxis.majorUnit = majorunit;
                    e.sender.options.valueAxis.max = maxValue + majorunit;   
                     $("#companyBrachWisePurchaseChart").next(".overlay").toggle(maxValue <= 0);
                },
                seriesClick: function (e) {
                     
                    var dateformat = $("input[name=DateFormat_monthlyCompanyPurchase]:checked").val();
                    if (e.dataItem.Branch_Code == undefined || e.dataItem.Branch_Code == null)
                        return false;
                    var dataSourcetest = new kendo.data.DataSource({
                        transport: {
                            read: {
                                url: daywiseUrl + "?monthName=" + e.dataItem.Month + "&branchName=" + e.dataItem.Branch_Code + urlData.replace('?', '&') + "&DateFormat=" + dateformat,
                                dataType: "json", // <-- The default was "jsonp".
                                type: "POST",
                                contentType: "application/json; charset=utf-8"
                            },
                            parameterMap: function (options, type) {
                                var paramMap = JSON.stringify($.extend(options, reportFilter));
                                delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                                delete paramMap.$format; // <-- remove format parameter.
                                return paramMap;
                            }
                        },
                        requestStart: function () {
                            kendo.ui.progress($("#MonthlyCompanyPurchaseBranchWise"), true);
                        },
                        requestEnd: function () {
                            kendo.ui.progress($("#MonthlyCompanyPurchaseBranchWise"), false);
                        },
                        sort: {
                            field: "day",
                            dir: "asc"
                        },
                        group: {
                            field: "BranchName"
                        },
                    });
                    var chart = $("#companyBrachWisePurchaseChart").data("kendoChart");
                    type = $("input[name=seriesTypeCompanyPurchaseBranchWise]:checked").val(),
                     chart.setOptions({
                         categoryAxis: {
                             field: "day",
                             labels: {
                                 rotation: -45,
                             },
                             title: { text: e.category }
                         },
                         tooltip: {
                             visible: true,
                             format: "{0}",
                             template: "day #= category #: \n #= FormatSeriesLabels(value)#"
                         },
                     });
                    chart.options.series[0].field = "Quantity";
                    chart.setDataSource(dataSourcetest);
                    chart.refresh();
                },
            });
        }
        //Reday function
       

    </script>
    <script>
        //$("input[name=DateFormat_monthlyBranchPurchase]").on('change', function () {
        //    CreateMonthlyCompanyPurchaseBranchWise();
        //})
    </script>

    <!--Monthly Branch Purchase chart according to Company-->
    <script>
        //LoadDataGrid function for data-grid for company
        function LoadDataGrid_MonthlyBranchPurchaseChartForCompany(dataSource, monthField) {
             
            $("#companyBrachWisePurchaseChart").html('');
            //$('.monthlyCompanyPurchaseBranchWiseDatagrid').data("type", "Grid");
            var monthTitle = "Month";
            var format = $("input[name=DateFormat_monthlyCompanyPurchase]:checked").val();
            dataSource = dataSource == undefined ? $("#companyBrachWisePurchaseChart").data("kendoChart").dataSource : dataSource;
            if (format == "BS") {
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + dataSource.data()[0].Nepalimonth + "]";
                }
                else {
                    monthField = "Nepalimonth";
                    monthTitle = "Month"
                }
            }
            if (monthField == undefined)
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + dataSource.data()[0].MonthEnglish + "]";
                }
                else {
                    monthField = "MonthYear";
                    monthTitle = "Month"
                }
            //dataSource.query({
            //    group: { field: monthField, },
            //    sort: { field: "NepaliMonthInt", dir: "asc" },
            //});
            dataSource.group({ field: monthField, title: "Month" });
            $("#companyBrachWisePurchaseChart").kendoGrid({
                dataSource: dataSource,
                height: $("#MonthlycompanyBrachWisePurchaseChart").hasClass("portlet-fullscreen") ? 550 : 350,
                groupable: false,
                sortable: true,
                selectable: "multiple",
                toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                excel: {
                    fileName: "Monthly company Purchase BranchWise Report",
                    allPages: true
                },
                columns: [{
                    field: "BranchName",
                    title: "Branch Name",
                    width: 240
                }, {
                    field: "Quantity",
                    title: "Quantity",
                    format: "{0:n0}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }, {
                    field: "Amount",
                    title: "Amount",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }],
                dataBound: function (e) {
                    var gird = e.sender;
                    flag = false;
                    gird.table.find(".k-grouping-row").each(function () {
                        if (flag == true) { gird.collapseGroup(this); }
                        else
                            flag = true;
                    });
                }
            });
        }
        //Export 
        $(".export-pdf").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({

                    dataURI: data,
                    fileName: filename + ".pdf",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        $(".export-img").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportImage().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".png",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export",

                });
            });
        });

        $(".export-svg").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportSVG().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".svg",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        function FormatSeriesLabels(value) {
            if (isNaN(value))
                value = 0;
            var decimalPlaces = 2;
            if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != "" && ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != undefined) {
                if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".").length > 1)
                    decimalPlaces = ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".")[1].length;
                else
                    decimalPlaces = 0;
            }

            if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Lakh") {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            } else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Thousand") {
                value = (value / 1000).toFixed(decimalPlaces) + " K";
            }
            else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Crore") {
                value = (value / 10000000).toFixed(decimalPlaces) + " C";
            }
            else {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            }
            return kendo.format("{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}", value);
        }
    </script>
</div>

