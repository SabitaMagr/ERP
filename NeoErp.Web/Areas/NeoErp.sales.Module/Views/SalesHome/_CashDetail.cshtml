@using NeoErp.Core.Models;
@{
    var actionPageId = "CashDetail";
    var chartTitle = "Cash Balance";  
}

<style>
    .CashDetailTable {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        cursor:pointer;
    } 
    .CashDetailTable, .CashDetailTable > thead > tr > th {
        font-size: 9px !important;
       
    }
    .amountRight{
        text-align:right;
    }
    .margin-0 {
        margin-top: -15px;
        margin-bottom: -15px;
        overflow-x: hidden;
    }

   
</style>

<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-pie-chart"></span> @chartTitle</h4>
            </div>
            <div class="modal-body bottom-gappingtwo">
                <div class="row">
                    <div class="clearfix">
                        <div class="btn-group options_@actionPageId responsivegap col-sm-12 col-md-12 margin_bottom" data-toggle="buttons">
                           
                            <button type="button" class="btn btn-sm default purple-stripe active">
                                <i class="fa fa-pie-chart"></i>
                                <input id="typeLine" name="seriesType_@actionPageId"
                                       type="radio" value="pie" checked="checked" autocomplete="off" />Pie
                            </button>
                            
                        </div>
                       
                        <div class="col-md-6">
                            <div class="br"><div class="br"></div> </div>                            
                            <div>
                                <!-- show labels & inStack option-->
                                <div class="input-group">
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showLabel_@actionPageId" type="checkbox" checked="checked" autocomplete="off" /> Show Labels
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                 
              
                        <div class="filter_title">
                            <label class="filter-label">Advance Filter</label>
                        </div>

                        @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = false,
                       ShowProductFilter = false,
                       ShowPartyTypeFilter = false,
                       ShowCategoryFilter = false,
                       ShowLocationFilter = false,
                       ShowDocumentFilter = false,
                       ShowCompanyFilter = false,
                       ShowFiscalYearFilter = false,
                       ShowEmployeeFilter = false,
                       ShowAgentFilter = false,
                       ShowBranchFilter = true,
                       ShowDivisionFilter = false,
                       IsPopUp = false,
                       ActionPageId = actionPageId
                   })
                 

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
    </div>
</div>

<div class="portlet portlet-sortable light bordered" id="@actionPageId">
    <div style="margin: 0px 0px -34px 135px;" class="input-group input-large">
           <select id="cashamount" name="cashamount"  class="form-control input-small" style="height:30px;">
                <option value="1">Default</option>
                <option value="2">Thousand</option>
                <option value="3">Millenium</option>
           </select>
        </div>
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">@chartTitle</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>          
            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" data-title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down Thirdcustom"></i>
                </a>
                <ul class="dropdown-menu custom">
                    <div class="btn-group-custom">
                        <button type="button" data-id="CashDetailChart" class="export-pdf btn default red-stripe"><i class="fa fa-file-pdf-o"></i>PDF</button>
                        <button type="button" data-id="CashDetailChart" class="export-img btn default blue-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="CashDetailChart" class="export-svg btn default green-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config"></a>
            <a href="javascript:;" class="reload"></a>
            <a href="javascript:;" class="fullscreen"></a>
            <a href="javascript:;" class="remove"></a>
        </div>
    </div>   
    <div class="portlet-body">
        <div class="margin-0">
            <table class="CashDetailTable table table-hover table-responsive table-bordered">
                <thead>
                    <tr></tr>
                </thead>
                <tbody>
                    <tr></tr>
                    <tr></tr>
                </tbody>
            </table>
        </div>    
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>       
        <div class="k-content wide">
            <div id="CashDetailChart"></div>
            <div class="overlay"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>

    <script>
        var pageId_CashDetail = '@actionPageId';
        var clicked = false, base = 0;
        var dropdownCashBalanceValue = 1;
        var dropdownCashBalanceText = "";
        var CashDetail = (function () {
            //initialize variables

            var config = {
                url: window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetCashBalanceDetailReport",
                series: [{
                    field: "Amount",
                    categoryField: "BankName",
                }],
                color: ["#0000FF", "#7FFF00", "#006400", "#9932CC", "#C71585", "#FF0000", "#FFFF00"],
              
                isStack: false,
                fieldValue: $("input[name=fieldType_CashDetail]:checked").val(),
                showLabel: $("#showLabel_CashDetail").prop("checked"),
                seriesType: $("input[name=seriesType_CashDetail]:checked").val(),

                _oldData: {
                    dateFormat: $("input[name=DateFormat_CashDetail]:checked").val(),
                    fieldValue: $("input[name=fieldType_CashDetail]:checked").val()
                },

            };           
            var _oldConfig = JSON.stringify(config);
          
            function loadDataSource() {               
                reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
                var filter = $.extend(true, {}, reportFilter);              
                config.dateFormat = $("input[name=DateFormat_CashDetail]:checked").val();               
               // config.url = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesMonthlyFiscalYearReport?DateFormat=" + $("input[name=DateFormat_CashDetail]:checked").val();
                config.showLabel = $("#showLabel_CashDetail").prop("checked");
                var dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: config.url,
                            dataType: "json", // <-- The default was "jsonp".
                            type: "POST",
                            contentType: "application/json; charset=utf-8"
                        },
                        parameterMap: function (options, type) {
                            var paramMap = JSON.stringify($.extend(options, filter));
                            delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                            delete paramMap.$format; // <-- remove format parameter.
                            return paramMap;
                        }
                    },
                    requestStart: function () {
                        if (IsDataGrid != "Grid") {
                            kendo.ui.progress($("#CashDetailChart"), true);
                        }
                    },
                    requestEnd: function () {
                        kendo.ui.progress($("#CashDetailChart"), false);
                    },
                    schema: {
                        parse: function (items) {
                            var item,
                                result = [];
                            var showzerovalue = $("#showzerovalue_CashDetail").prop("checked");

                            if (showzerovalue) {
                                for (var i = 0; i < items.length; i++) {
                                    item = items[i];
                                    result.push(item);
                                }
                            }
                            else {
                                for (var i = 0; i < items.length; i++) {
                                    item = items[i];
                                    if (item.Amount !== 0 && item.Quantity !== 0) {
                                        result.push(item);
                                    }
                                }
                            }


                            return result;
                        }
                    },
                    group: config.group,
                    sort: {
                        field: config.sortField,
                        dir: "asc"
                    }

                });

                $("#CashDetail .DisplayFilterContent a").text("");
                var IsDataGrid = $('.btnGrid_CashDetail').data("type");
                if (IsDataGrid == "Grid") {
                    CreateGrid(dataSource);
                    return;
                }
                fullScreenHandle();
                CreateChart(dataSource);
            }
            $("#cashamount").on({
              change : function (e)
                {
                if($(this).val() == 1)
                  {dropdownCashBalanceValue = 1; dropdownCashBalanceText = "";}
                else if($(this).val() == 2)
                  {dropdownCashBalanceValue = 1000; dropdownCashBalanceText = " k";} 
                else
                  {dropdownCashBalanceValue = 1000000; dropdownCashBalanceText =" M";}
                loadDataSource();
                }
            });
            function CreateChart(dataSource) {               
                $('.btnGrid_CashDetail').data("type", "Chart");
                $("#CashDetailChart").html('');
                $("#CashDetailChart").removeAttr("style");
                $("#CashDetailChart").removeAttr("class");
                $("#CashDetailChart").kendoChart({                                   
                    chartArea: {
                        height: ($("#CashDetailChart").hasClass("portlet-fullscreen")) ? 450 : 260,
                    },
                    onDrag: function (e) {
                        var chart = e.sender;
                        var ds = chart.dataSource;
                        var options = chart.options;

                        var categoryRange = e.axisRanges.CategoryAxis;

                        if (categoryRange) {
                            var xMin = categoryRange.min;
                            var xMax = categoryRange.max;

                            options.categoryAxis.min = xMin;
                            options.categoryAxis.max = xMax;

                            ds.filter(viewModel.getFilter(xMin, xMax));
                        }
                    },
                    pannable: {
                        lock: "y"
                    },
                    zoomable: {
                        mousewheel: {
                            lock: "y"
                        },
                        selection: {
                            lock: "y"
                        }
                    },
                    dataSource: dataSource,
                    legend: {
                        position: "bottom"
                    },
                    seriesColors: config.color,
                    seriesDefaults: {
                        type: config.seriesType,
                        labels: {
                            visible: config.showLabel,                          
                            template: "#= kendo.format('{0:P}', percentage)#",                          
                            //position: "center",
                            position: "outsideEnd",
                            visible: true,
                            background: "transparent"
                          
                        },
                        style: "smooth",
                    },
                    series: config.series,
                    valueAxis: {
                        line: {
                            visible: true
                        },
                        labels: {
                            rotation: 'auto',
                            template: "#= FormatLabels(value)#"
                        },
                        title: { text: amountFigureType }
                    },
                    tooltip: {
                        visible: true,
                        format: "{0}",
                        template: "#= category #: \n #= FormatLabels(value/dropdownCashBalanceValue)#" + dropdownCashBalanceText
                    },
                    dataBound: function (e) {
                        var maxValue = getMaxValueFromDataSource(e);
                        var majorunit = Math.max(6, maxValue / 6);
                        e.sender.options.valueAxis.majorUnit = majorunit;
                        e.sender.options.valueAxis.max = maxValue + majorunit;
                        e.sender.options.valueAxis.axisCrossingValue = [0, -(maxValue + majorunit)];
                        $("#CashDetailChart").next(".overlay").toggle(maxValue <= 0);
                        e.sender.options.categoryAxis.categories = getCategoryFromDataSource(e);

                        CreateTable(e.sender.dataSource.data());
                    },
                    seriesClick: function (e) {
                    },
                });
            }    
            function CreateTable(data)
            {  
                var total = _.reduce(data, function (i, o) { return i + parseFloat(o.Amount); }, 1);
                var header = "<th></th>";
                var bodyRow1 = "<td>Percentage</td>";
                var bodyRow2 = "<td>Balance</td>";
                $.each(data, function (i, obj) {
                    header += "<th>" + obj.BankName + "</th>";
                    bodyRow1 += "<td class='amountRight'>" + (obj.Amount / total * 100).toFixed(2) + "%</td>";
                    bodyRow2 += "<td class='amountRight'>" + kendo.format('{0:n}', obj.Amount/dropdownCashBalanceValue)+dropdownCashBalanceText +"</td>";
                });
                header += "<th>Total</th>";               
                bodyRow1 += "<td class='amountRight'>100 %</td>";
                bodyRow2 += "<td class='amountRight'>" + kendo.format('{0:n}',total) + "</td>";
                //clear first
                $(".CashDetailTable").find("thead > tr").html("");
                $(".CashDetailTable").find("tbody > tr:first").html("");
                $(".CashDetailTable").find("tbody > tr:last").html("");
                //fill now
                $(".CashDetailTable").find("thead > tr").html(header);
                $(".CashDetailTable").find("tbody > tr:first").html(bodyRow1);
                $(".CashDetailTable").find("tbody > tr:last").html(bodyRow2);

            }
            function refreshChart(flag) {              
                //check if showlevel and stack changed
                if (flag != undefined && flag.data == false) {
                    if ($(".btnGrid_CashDetail").data("type") == "Grid") {
                        $(".btnGrid_CashDetail").data("type", "Chart");
                        loadDataSource();
                        return;
                    }
                }
                //check if series type changed
                if (flag != undefined && flag.data.options != undefined) {
                    if ($(".btnGrid_CashDetail").data("type") == "Grid") {
                        chart_grid_option_change("btnGrid_CashDetail", CashDetail.init);
                        return;
                    }
                }
                var chart = $("#CashDetailChart").data("kendoChart"),
                    type = $("input[name=seriesType_CashDetail]:checked").val(),
                    stack = $("#Stack_CashDetail").prop("checked"),
                    IsLebelShow = $("#showLabel_CashDetail").prop("checked"),
                    fieldValue = $("input[name=fieldType_CashDetail]:checked").val();

                for (var i = 0, length = chart.options.series.length; i < length; i++) {                    
                    chart.options.series[i].type = type;                   
                    chart.options.series[i].labels.visible = IsLebelShow;
                    if (type == "column") {
                        chart.options.series[i].labels.rotation = -90;
                    }
                    if (type == "bar") {
                        chart.options.series[i].labels.rotation = 0;
                    }


                };                 
                chart.refresh();
            }

            //event Bind
            function applyClickEvent() {
                var checkedDateFormat = $("input[name=DateFormat_CashDetail]:checked").val();
                var checkedFieldValue = $("input[name=fieldType_CashDetail]:checked").val();
                var IsChanged = false;
               
                ChartFilter('CashDetail', CashDetail.init, true);
            }
            function reloadClickEvent() {
                RefreshChartFilterControl('CashDetail');
                config = JSON.parse(_oldConfig);


                reportFilter.ReportFilters.BranchFilter = [];
                loadDataSource();
            }
            function chartGridSwitchEvent() {
                var datasource = $("#CashDetailChart").data("kendoChart").dataSource;
                $('.btnGrid_CashDetail').data("type") == "Chart" ? CreateGrid(datasource) : CreateChart(datasource);
                $("i", this).toggleClass("icon-bar-chart");
            }
            //handle full screen
            function fullScreenHandle() {
                // handle portlet fullscreen               
                $('body').on('click', '.portlet > .portlet-title .fullscreen', function (e) {
                    e.preventDefault();
                    var portlet = $(this).closest(".portlet");
                    var chart = portlet.find('.portlet-body > .k-content.wide > div').data("kendoChart");
                    if (portlet.hasClass('portlet-fullscreen')) {                        
                        chart.options.chartArea.height = 450;
                    } else {                       
                        chart.options.chartArea.height = 250;
                    }
                    //change chart height

                    chart.redraw();

                });
            }



            return {              
                init: loadDataSource,
                refreshChart: refreshChart,
                applyClick: applyClickEvent,
                reloadClick: reloadClickEvent,
               
            };
        })();

        $(document).ready(function () {
            CashDetail.init();

            //start Binding
            $(document).bind("kendo:skinChange", CashDetail.init);
            $('#CashDetailChart').closest('.portlet').find('.reload').bind("click", CashDetail.reloadClick);
            $('#apply_CashDetail').bind("click", CashDetail.applyClick);           
            $("#showLabel_CashDetail").bind("change", true, CashDetail.refreshChart);
            $('#Stack_CashDetail').bind('click', true, CashDetail.refreshChart);
            $(".options_CashDetail").bind("change", { "options": true }, CashDetail.refreshChart);                 
            $('.CashDetailTable').on({
                mousemove: function (e) {
                    clicked && function (xAxis) {
                        var _this = $(this);                       
                        if (base > xAxis) {                           
                            var diff = (base - xAxis).toString() + "px";
                            base = xAxis;
                            _this.css('margin-left', '-='+diff);
                        }
                        if (base < xAxis) {
                            var diff = (xAxis - base).toString() + "px";
                            base = xAxis;
                            _this.css('margin-left', '+='+ diff);
                        }
                    }.call($(this), e.pageX);
                },
                mousedown: function (e) {
                    clicked = true;
                    base = e.pageX;
                },
                mouseup: function (e) {
                    clicked = false;
                    base = 0;
                }
            });
        });
        //Export 
        $(".export-pdf").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({

                    dataURI: data,
                    fileName: filename + ".pdf",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        $(".export-img").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportImage().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".png",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export",

                });
            });
        });

        $(".export-svg").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportSVG().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".svg",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });
    </script>
</div>
