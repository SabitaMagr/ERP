@using NeoErp.Core.Models;
@{
    var actionPageId = "MonthlySalesChart";
    var chartTitle = "Monthly Sales Chart";

}

<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-bar-chart"></span> @chartTitle</h4>
            </div>
            <div class="modal-body bottom-gappingtwo form-horizontal">
                <div class="row">
                    <div class="clearfix">
                        <div class="btn-group options_@actionPageId responsivegap col-sm-12 col-md-12" data-toggle="buttons">
                            <button type="button" class="btn btn-sm default red-stripe">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeColumn" name="seriesType_@actionPageId"
                                       type="radio" value="column" autocomplete="off" />column
                            </button>
                            <button type="button" class="btn btn-sm default green-stripe">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeBar" name="seriesType_@actionPageId"
                                       type="radio" value="bar" autocomplete="off" />bar
                            </button>
                            <button type="button" class="btn btn-sm default purple-stripe active">
                                <i class="fa fa-line-chart"></i>
                                <input id="typeLine" name="seriesType_@actionPageId"
                                       type="radio" value="line" checked="checked" autocomplete="off" />Line
                            </button>
                            <button class="btn btn-green btn-sm pull-right saveChartConfig_@actionPageId" data-id="@actionPageId" title="Save Setting"><i class="fa fa-save"></i> Save </button>
                        </div>
                        <div class="col-xs-12 col-md-6 col-sm-6 margin_bottom">
                            <h5> Choose Value Field</h5>
                            <div class="btn-group" data-toggle="buttons">
                                <button id="QuantityBtn_@actionPageId" type="button" class="btn btn-sm default red-stripe">
                                    <i class="fa fa-cart-arrow-down"></i>
                                    <input id="QuantityColumn" name="fieldType_@actionPageId"
                                           type="radio" value="Quantity" autocomplete="off" /> Quantity
                                </button>
                                <button id="GrossAmountBtn_@actionPageId" type="button" class="btn btn-sm default green-stripe active">
                                    <i class=""></i>
                                    <input id="typeBar" name="fieldType_@actionPageId"
                                           type="radio" value="GrossAmount" checked="checked" autocomplete="off" /> Gross Amt
                                </button>
                                <hr class="red-stripe" />
                                <button id="NetAmountBtn_@actionPageId" type="button" class="btn btn-sm default red-stripe">
                                    <i class="fa fa-cart-arrow-down"></i>
                                    <input id="QuantityColumn" name="fieldType_@actionPageId"
                                           type="radio" value="NetAmount" autocomplete="off" /> Net Amt
                                </button>
                                <button id="TotalAmountBtn_@actionPageId" type="button" class="btn btn-sm default green-stripe">
                                    <i class=""></i>
                                    <input id="typeBar" name="fieldType_@actionPageId"
                                           type="radio" value="TotalAmount" autocomplete="off" /> Total Amt
                                </button>
                            </div>
                        </div>
                        <div class="col-md-6 top_margin">
                            <div class="br"><div class="br"></div> </div>
                            <div class="clearfix">
                                <div class="dateOption_@actionPageId">
                                    <label>
                                        <input type="radio" id="ADFormat" name="DateFormat_@actionPageId" value="AD" /> AD
                                    </label>
                                    <label>
                                        <input type="radio" id="BSFormat" name="DateFormat_@actionPageId" checked="checked" value="BS" /> BS
                                    </label>
                                </div>
                            </div>
                            <div>
                                <!-- show labels & inStack option-->
                                <div class="input-group">
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showLabel_@actionPageId" type="checkbox" autocomplete="off" /> Show Labels
                                        </label>
                                    </div>
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showSalesReturn_@actionPageId" type="checkbox" autocomplete="off" /> Sales Return
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                
                
                
                        <div class="filter_title">
                            <label class="filter-label">Advance Filter</label>
                        </div>

                        @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = true,
                       ShowProductFilter = true,
                       ShowPartyTypeFilter = true,
                       ShowCategoryFilter = false,
                       ShowLocationFilter = false,
                       ShowDocumentFilter = false,
                       ShowCompanyFilter = false,
                       ShowBranchFilter = true,
                       ShowEmployeeFilter = true,
                       ShowAgentFilter = false,
                       ShowDivisionFilter = true,
                       ShowAreaFilter=false,
                       IsPopUp = false,
                       ActionPageId = actionPageId
                   })
                  
               

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="SeriesModel_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close btn btn-danger" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Choose Options</h4>
            </div>
            <div class="modal-body bottom-gappingtwo">
                <div class="row">
                    <div class="clearfix">
                        <div class="col-md-12">
                            <div class="br"><div class="br"></div> </div>
                            <div class="clearfix">
                                <div class="SeriesOptions_@actionPageId">
                                    <label>
                                        <input type="radio" id="Day" name="SeriesOption_@actionPageId" checked="checked" value="Day" /> Daywise
                                    </label>
                                    <label>
                                        <input type="radio" id="Item" name="SeriesOption_@actionPageId" value="Item" /> ItemWise
                                    </label>
                                </div>
                                <input type="hidden" id="hiddenMonth" />
                                <input type="hidden" id="hiddenMonthInt" />

                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn green" data-dismiss="modal" id="seriesApply_@actionPageId">Apply</button>
            </div>
        </div>
    </div>
</div>
<div class="portlet portlet-sortable light bordered" id="@actionPageId">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">@chartTitle</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            <a class="btnGrid btnGrid_@actionPageId" data-type="Chart" data-title="Grid">
                <i class="fa fa-table"></i>
            </a>
            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" data-title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down Thirdcustom"></i>
                </a>
                <ul class="dropdown-menu custom">
                    <div class="btn-group-custom">
                        <button type="button" data-id="MonthlySalesChartChart" class="export-pdf btn default red-stripe"><i class="fa fa-file-pdf-o"></i>PDF</button>
                        <button type="button" data-id="MonthlySalesChartChart" class="export-img btn default blue-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="MonthlySalesChartChart" class="export-svg btn default green-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config"></a>
            <a href="javascript:;" class="reload"></a>
            <a href="javascript:;" class="fullscreen"></a>
            <a href="javascript:;" class="remove"></a>
        </div>
    </div>
    <div class="portlet-body">
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="MonthlySalesChartChart"></div>
            <div class="overlay"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>

    <script>
        var pageId_MonthlySalesChart = '@actionPageId';

        var MonthlySalesChart = (function () {
            //initialize variables

            var config = {
                url: window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesMonthlyReport",
                series: [{
                    field: $("input[name=fieldType_MonthlySalesChart]:checked").val(),
                    name: $("input[name=fieldType_MonthlySalesChart]:checked").val()
                }],
                color: ["#428bca", "#da3b36", "#e67d4a", "#5bc0de", "#5cb85c", "#f2b661"],
                categoryField: "MonthYear",
                //categoryTitle: '',
                //group: { field: "MonthYear" },
                sortField: "NepaliMonthInt",
                isStack: false,
                fieldValue: $("input[name=fieldType_MonthlySalesChart]:checked").val(),
                showLabel: $("#showLabel_MonthlySalesChart").prop("checked"),
                seriesType: $("input[name=seriesType_MonthlySalesChart]:checked").val(),

                _oldData: {
                    dateFormat: $("input[name=DateFormat_MonthlySalesChart]:checked").val(),
                    fieldValue: $("input[name=fieldType_MonthlySalesChart]:checked").val(),
                    SalesReturn: $("input[name=showSalesReturn_MonthlySalesChart]:checked").val()
                },

            };
            
            var _oldConfig = JSON.stringify(config);

            function PreInit() {
                var pageId = pageId_MonthlySalesChart;
                $.ajax({
                    type: 'POST',
                    data: { 'ChartName': pageId },
                    async: false,
                    url: window.location.protocol + "//" + window.location.host + "/Main/GetUserWiseChartConfig",
                    success: function (data) {
                        if (data != "") {
                            //for series Type
                            $("input[name=seriesType_" + pageId + "]").filter('[value=' + data.ChartType + ']').prop('checked', true);
                            $("input[name=seriesType_" + pageId + "]").parent().removeClass("active")
                            $("input[name=seriesType_" + pageId + "]:checked").parent().addClass("active");
                            //for dateFormat
                            $("input[name=DateFormat_" + pageId + "]").filter('[value=' + data.DateFormat + ']').prop('checked', true);
                            //for fieldValue
                            $("input[name=fieldType_" + pageId + "]").filter('[value=' + data.FieldValue + ']').prop('checked', true);
                            $("input[name=fieldType_" + pageId + "]").parent().removeClass("active")
                            $("input[name=fieldType_" + pageId + "]:checked").parent().addClass("active");
                            //for showLabel
                            $("#showLabel_" + pageId).prop("checked", $.parseJSON(data.ShowLabel))
                            $("#showSalesReturn_" + pageId).prop("checked",$.parseJSON(data.SalesReturn));
                            config.seriesType = data.ChartType;
                            config.dateFormat = data.DateFormat;
                            config.fieldValue = data.FieldValue;
                            config.isStack = data.IsStack;
                            config.showLabel = data.ShowLabel;
                        }
                    }
                });
                loadDataSource()
            }
            function loadDataSource() {

                reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
                var filter = $.extend(true, {}, reportFilter);
                config.dateFormat = $("input[name=DateFormat_MonthlySalesChart]:checked").val();
                config.showLabel = $("#showLabel_MonthlySalesChart").prop("checked");
                
                var dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: config.url + (_.contains(config.url, "?") == true ? "&" : "?") + "DateFormat=" + config.dateFormat + "&salesReturn=" + $("#showSalesReturn_MonthlySalesChart").prop("checked"),
                            dataType: "json", // <-- The default was "jsonp".
                            type: "POST",
                            contentType: "application/json; charset=utf-8"
                        },
                        parameterMap: function (options, type) {
                            var paramMap = JSON.stringify($.extend(options, filter));
                            delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                            delete paramMap.$format; // <-- remove format parameter.
                            paramMap
                            return paramMap;
                        }
                    },
                    requestStart: function () {
                        if (IsDataGrid != "Grid") {
                            kendo.ui.progress($("#MonthlySalesChartChart"), true);
                        }
                    },
                    requestEnd: function () {
                        kendo.ui.progress($("#MonthlySalesChartChart"), false);
                    },
                    schema: {
                        parse: function (items) {
                            var item,
                                result = [];
                            var showzerovalue = $("#showzerovalue_MonthlySalesChart").prop("checked");

                            if (showzerovalue) {
                                for (var i = 0; i < items.length; i++) {
                                    item = items[i];
                                    result.push(item);
                                }
                            }
                            else {
                                for (var i = 0; i < items.length; i++) {
                                    item = items[i];
                                    if (item.GrossAmount !== 0 && item.Quantity !== 0) {
                                        result.push(item);
                                    }
                                }
                            }


                            return result;
                        }
                    },
                    //group: config.group,
                    sort: {
                        field: config.sortField,
                        dir: "asc"
                    }

                });
                $("#MonthlySalesChart .DisplayFilterContent a").text("");
                var IsDataGrid = $('.btnGrid_MonthlySalesChart').data("type");
                if (IsDataGrid == "Grid") {
                    CreateGrid(dataSource);
                    return;
                }
                CreateChart(dataSource);
            }
            function CreateChart(dataSource) {
                
                $('.btnGrid_MonthlySalesChart').data("type", "Chart");
                $("#MonthlySalesChartChart").html('');
                $("#MonthlySalesChartChart").removeAttr("style");
                $("#MonthlySalesChartChart").removeAttr("class");
                $("#MonthlySalesChartChart").kendoChart({
                    chartArea: {
                        height: ($("#MonthlySalesChartChart").hasClass("portlet-fullscreen")) ? 550 : 350,
                    },
                    onDrag: function (e) {
                        var chart = e.sender;
                        var ds = chart.dataSource;
                        var options = chart.options;

                        var categoryRange = e.axisRanges.CategoryAxis;

                        if (categoryRange) {
                            var xMin = categoryRange.min;
                            var xMax = categoryRange.max;

                            options.categoryAxis.min = xMin;
                            options.categoryAxis.max = xMax;

                            ds.filter(viewModel.getFilter(xMin, xMax));
                        }
                    },
                    pannable: {
                        lock: "y"
                    },
                    zoomable: {
                        mousewheel: {
                            lock: "y"
                        },
                        selection: {
                            lock: "y"
                        }
                    },
                    dataSource: dataSource,
                    legend: {
                        position: "bottom"
                    },
                    seriesColors: config.color,
                    seriesDefaults: {
                        type: config.seriesType,
                        labels: {
                            visible: config.showLabel,
                            template: "#= FormatSeriesLabels(value)#",
                            rotation: '270',
                            padding: {
                                left: -5
                            },
                        },
                        style: "smooth",
                    },
                    series: config.series,
                    categoryAxis: {
                        field: config.categoryField,
                        labels: {
                            rotation: -45,
                        },
                        title: { text: config.categoryTitle }
                    },
                    valueAxis: {
                        line: {
                            visible: true
                        },
                        labels: {
                            rotation: 'auto',
                            template: "#= FormatSeriesLabels(value)#"
                        },
                        title: { text: amountFigureType }
                    },
                    tooltip: {
                        visible: true,
                        format: "{0}",
                        template: "#= category #: \n #= FormatSeriesLabels(value)#"
                    },
                    dataBound: function (e) {
                        var maxValue = getMaxValueFromDataSource(e);
                        var majorunit = Math.max(6, maxValue / 6);
                        e.sender.options.valueAxis.majorUnit = majorunit;
                        e.sender.options.valueAxis.max = maxValue + majorunit;
                        e.sender.options.valueAxis.axisCrossingValue = [0, -(maxValue + majorunit)];
                        $("#MonthlySalesChartChart").next(".overlay").toggle(maxValue <= 0);
                        // e.sender.options.categoryAxis.categories = getCategoryFromDataSource(e);
                    },
                    seriesClick: function (e) {
                        if (typeof (e.dataItem.day) != 'undefined' || typeof(e.dataItem.Description) != 'undefined') {
                            return;
                        }
                        $("#SeriesModel_" + pageId_MonthlySalesChart).modal("show");
                        $("#seriesApply_" + pageId_MonthlySalesChart).unbind("click");
                        $("#hiddenMonth").val(e.dataItem.Month);
                        $("#hiddenMonthInt").val(e.dataItem.NepaliMonthInt);
                        $('#seriesApply_MonthlySalesChart').bind("click", seriesApplyEvent);
                    },
                });
            }
            function CreateGrid(dataSource) {
                $("#MonthlySalesChartChart").html('');
                $("#MonthlySalesChartChart").removeAttr("style");
                $("#MonthlySalesChartChart").removeAttr("class");
                $('.btnGrid_MonthlySalesChart').data("type", "Grid");

                var monthTitle = "",
                    monthField = "";
                dataSource = dataSource == undefined ? $("#MonthlySalesChartChart").data("kendoChart").dataSource : dataSource;
                if (dataSource.data().length > 0 && dataSource.data()[0].DisplayMonth != null) {
                    monthField = "DisplayMonth";
                    monthTitle = "Month";
                }
                else {
                    monthField = config.categoryField;
                    monthTitle = config.categoryField;
                }
                $("#MonthlySalesChartChart").kendoGrid({
                    dataSource: dataSource,
                    height: $("#MonthlySalesChartChart").hasClass("portlet-fullscreen") ? 550 : 350,
                    groupable: false,
                    sortable: true,
                    //selectable: "multiple",
                    toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                    excel: {
                        fileName: "BranchWise Sales BiratnagarBranch Report",
                        allPages: true
                    },
                    columns: [{
                        field: monthField,
                        title: monthTitle,

                    }, {
                        field: "Quantity",
                        title: "Quantity",
                        format: "{0:n0}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    }, {
                        field: "TotalAmount",
                        title: "TotalAmount",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    },
                    {
                        field: "GrossAmount",
                        title: "GrossAmount",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    },
                    {
                        field: "NetAmount",
                        title: "NetAmount",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    }],
                    dataBound: function (e) {
                        var gird = e.sender;
                        gird.table.find(".k-grouping-row:not(:first-child)").each(function () {
                            gird.collapseGroup(this);
                        });
                    }
                });
            }
            function refreshChart(flag) {

                //check if showlevel and stack changed
                if (flag != undefined && flag.data == false) {
                    if ($(".btnGrid_MonthlySalesChart").data("type") == "Grid") {
                        $(".btnGrid_MonthlySalesChart").data("type", "Chart");
                        loadDataSource();
                        return;
                    }
                }
                //check if series type changed
                if (flag != undefined && flag.data.options != undefined) {
                    if ($(".btnGrid_MonthlySalesChart").data("type") == "Grid") {
                        chart_grid_option_change("btnGrid_MonthlySalesChart", MonthlySalesChart.init);
                        return;
                    }
                }
                var chart = $("#MonthlySalesChartChart").data("kendoChart"),
                    type = $("input[name=seriesType_MonthlySalesChart]:checked").val(),
                    stack = $("#Stack_MonthlySalesChart").prop("checked"),
                    IsLebelShow = $("#showLabel_MonthlySalesChart").prop("checked"),
                    fieldValue = $("input[name=fieldType_MonthlySalesChart]:checked").val();
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].stack = stack;
                    chart.options.series[i].type = type;
                    chart.options.series[i].field = fieldValue;
                    chart.options.series[i].name = fieldValue;
                    chart.options.series[i].labels.visible = IsLebelShow;
                    if (type == "column") {
                        chart.options.series[i].labels.rotation = -90;
                    }
                    if (type == "bar") {
                        chart.options.series[i].labels.rotation = 0;
                    }


                };
                chart.refresh();
            }

            function seriesApplyEvent(e) {
                var checkedValue = $("input[name=SeriesOption_MonthlySalesChart]:checked").val();
                if (checkedValue == "Day") {
                    config.url = Arg.url(window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesDailyReport",{"monthName":String($("#hiddenMonthInt").val())});
                    config.categoryField = "day";
                    config.categoryTitle = $("#hiddenMonth").val();
                    config.sortField = "day";
                    reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
                    //reportFilter.ReportFilters.BranchFilter = [e.dataItem.Branch_Code];
                    loadDataSource();
                }
                if (checkedValue == "Item") {
                    config.url = Arg.url(window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetProductSalesByMonth", { "monthName": String($("#hiddenMonthInt").val()) });
                    config.categoryField = "Description";
                    config.categoryTitle = $("#hiddenMonth").val();
                    config.sortField = "Code";
                    config.series = [{
                        field: "GrossAmount",
                        name: "GrossAmount"
                    }];
                    $("input[name=fieldType_MonthlySalesChart]").filter('[value=GrossAmount]').prop('checked', true);
                    $("input[name=fieldType_MonthlySalesChart]").parent().removeClass("active")
                    $("input[name=fieldType_MonthlySalesChart]:checked").parent().addClass("active");

                    reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;

                    loadDataSource();
                }

            }

            //event Bind
            function applyClickEvent() {
                var checkedDateFormat = $("input[name=DateFormat_MonthlySalesChart]:checked").val();
                var checkedFieldValue = $("input[name=fieldType_MonthlySalesChart]:checked").val();
                var checkedSalesReturnValue = $("input[name=showSalesReturn_MonthlySalesChart]:checked").val();
                var IsChanged = false;
                if (config._oldData.dateFormat != checkedDateFormat) {
                    IsChanged = true;
                    config._oldData.dateFormat = checkedDateFormat;

                }
                if (config._oldData.fieldValue != checkedFieldValue) {
                    refreshChart();
                    config._oldData.fieldValue = checkedFieldValue;
                }
                if (config._oldData.SalesReturn != checkedSalesReturnValue) {
                    IsChanged = true;
                    config._oldData.SalesReturn = checkedSalesReturnValue;
                }


                config.series = [{
                    field: $("input[name=fieldType_MonthlySalesChart]:checked").val(),
                    name: $("input[name=fieldType_MonthlySalesChart]:checked").val()
                }];
                ChartFilter('MonthlySalesChart', MonthlySalesChart.init, IsChanged);
            }
            function reloadClickEvent() {
                RefreshChartFilterControl('MonthlySalesChart');
                config = JSON.parse(_oldConfig);
                PreInit();
            }
            function chartGridSwitchEvent() {
                var datasource = $("#MonthlySalesChartChart").data("kendoChart").dataSource;
                $('.btnGrid_MonthlySalesChart').data("type") == "Chart" ? CreateGrid(datasource) : CreateChart(datasource);
                $("i", this).toggleClass("icon-bar-chart");
            }
            function saveChartConfig() {
                var pageId = $(this).data("id");
                var data = {
                    ChartName: pageId,
                    ChartType: $("input[name=seriesType_" + pageId + "]:checked").val(),
                    FieldValue: $("input[name=fieldType_" + pageId + "]:checked").val(),
                    DateFormat: $("input[name=DateFormat_" + pageId + "]:checked").val(),
                    ShowLabel: $("#showLabel_" + pageId).prop("checked"),
                    SalesReturn: $("#showSalesReturn_" + pageId).prop("checked"),
                    IsStack: false
                }
                $.ajax({
                    type: 'POST',
                    data: data,
                    url: window.location.protocol + "//" + window.location.host + "/Main/SaveUserWiseChartConfig",
                    success: function (xhr, status) {
                        displayPopupNotification("Setting Saved", "success");
                    },
                    error: function (xhr, status) {
                        displayPopupNotification("Error", "error");
                    }
                });

            }

            function HideFilters() {
                
                $("#productMultiselect_@actionPageId").closest(".row ").hide();
                $("#employeeMultiSelect_@actionPageId").closest(".row ").hide();
                $("#agentMultiSelect_@actionPageId").closest(".row ").hide();
                $("#categoryMultiSelect_@actionPageId").closest(".row ").hide();
                $("#locationMultiSelect_@actionPageId").closest(".row ").hide();
                //br
                $("#productMultiselect_@actionPageId").closest(".row ").prev("br").hide();
                $("#employeeMultiSelect_@actionPageId").closest(".row ").prev("br").hide();
                $("#agentMultiSelect_@actionPageId").closest(".row ").prev("br").hide();
                $("#categoryMultiSelect_@actionPageId").closest(".row ").prev("br").hide();
                $("#locationMultiSelect_@actionPageId").closest(".row ").prev("br").hide();
                //clear the selected values
                $("#productMultiselect_@actionPageId").data("kendoMultiSelect").value([]);
                $("#employeeMultiSelect_@actionPageId").data("kendoMultiSelect").value([]);
                $("#agentMultiSelect_@actionPageId").data("kendoMultiSelect").value([]);
                $("#categoryMultiSelect_@actionPageId").data("kendoMultiSelect").value([]);
                $("#locationMultiSelect_@actionPageId").data("kendoMultiSelect").value([]);
            }
            function ShowFilters() {
                $("#productMultiselect_@actionPageId").closest(".row ").show();
                $("#employeeMultiSelect_@actionPageId").closest(".row ").show();
                $("#agentMultiSelect_@actionPageId").closest(".row ").show();
                $("#categoryMultiSelect_@actionPageId").closest(".row ").show();
                $("#locationMultiSelect_@actionPageId").closest(".row ").show();

                $("#productMultiselect_@actionPageId").closest(".row ").prev("br").show();
                $("#employeeMultiSelect_@actionPageId").closest(".row ").prev("br").show();
                $("#agentMultiSelect_@actionPageId").closest(".row ").prev("br").show();
                $("#categoryMultiSelect_@actionPageId").closest(".row ").prev("br").show();
                $("#locationMultiSelect_@actionPageId").closest(".row ").prev("br").show();
            }

            return {
                preInit: PreInit,
                init: loadDataSource,
                refreshChart: refreshChart,
                applyClick: applyClickEvent,
                reloadClick: reloadClickEvent,
                btnGridClick: chartGridSwitchEvent,
                saveConfig: saveChartConfig,
                hideFilters: HideFilters,
                showFilters: ShowFilters,
            };
        })();

        $(document).ready(function () {
            MonthlySalesChart.preInit();

            //start Binding
            $(document).bind("kendo:skinChange", MonthlySalesChart.init);
            $('#MonthlySalesChartChart').closest('.portlet').find('.reload').bind("click", MonthlySalesChart.reloadClick);
            $('#apply_MonthlySalesChart').bind("click", MonthlySalesChart.applyClick);
            $(".btnGrid_MonthlySalesChart").bind('click', MonthlySalesChart.btnGridClick);
            $("#showLabel_MonthlySalesChart").bind("change", true, MonthlySalesChart.refreshChart);
            $('#Stack_MonthlySalesChart').bind('click', true, MonthlySalesChart.refreshChart);
            $(".options_MonthlySalesChart").bind("change", { "options": true }, MonthlySalesChart.refreshChart);
            $(".saveChartConfig_MonthlySalesChart").bind("click", MonthlySalesChart.saveConfig);
            $("#TotalAmountBtn_@actionPageId,#NetAmountBtn_@actionPageId").bind("click", MonthlySalesChart.hideFilters);
            $("#GrossAmountBtn_@actionPageId,#QuantityBtn_@actionPageId").bind("click", MonthlySalesChart.showFilters);
           // $('#seriesApply_MonthlySalesChart').bind("click", MonthlySalesChart.applyClick);

        });

        //Export 
        $(".export-pdf").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({

                    dataURI: data,
                    fileName: filename + ".pdf",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        $(".export-img").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportImage().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".png",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export",

                });
            });
        });

        $(".export-svg").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportSVG().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".svg",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        function FormatSeriesLabels(value) {
            debugger
            fieldtype = $("input[name=fieldType_"+'@actionPageId'+"]:checked").val();
            if (fieldtype == "Quantity") {
                return kendo.format("{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}", value);
            }
            if (isNaN(value))
                value = 0;
            var decimalPlaces = 2;
            if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != "" && ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != undefined) {
                if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".").length > 1)
                    decimalPlaces = ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".")[1].length;
                else
                    decimalPlaces = 0;
            }

            if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Lakh") {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            } else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Thousand") {
                value = (value / 1000).toFixed(decimalPlaces) + " K";
            }
            else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Crore") {
                value = (value / 10000000).toFixed(decimalPlaces) + " C";
            }
            else {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            }
            return kendo.format("{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}", value);
        }
    </script>
</div>
