@using NeoErp.Core.Models;
@using NeoErp.Core;
@using NeoErp.Core.Infrastructure;
@{
    var workingContent = EngineContext.Current.Resolve<IWorkContext>();
}
<style>
    div.k-grid-header th.k-header, tr.k-filter-row > th {
        text-align: center;
        width: 183px !important;
    }

    /*.page-bar {
        margin-bottom: 0px !important;
    }*/

    .k-grid table {
        table-layout: fixed;
    }

    .no-data {
        background-color: red;
    }
    /*#grid thead{
         font-size:11px;
    }*/
    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .k-grid-content {
        font-size: 10px;
    }

    .k-grid-footer {
        font-size: 10px;
    }

    button#locationToggle {
        height: 29px;
    }
    .floatright {
        float: right;
        margin-top: 2px !important;
    }
</style>
<div class="page-content">
    <div class="page-bar">
        <ul class="page-breadcrumb">
            @*<li>
                <i class="fa fa-home"></i>
                <a href="/sales/SalesHome/Dashboard">Home</a>
                <i class="fa fa-angle-right"></i>
            </li>*@
            @*<li>
                <a href="#/SalesHome/CustomerWiseProfileAnalysis">CustomerWise Profile Analysis Report</a>
                <i class="fa fa-angle-right"></i>
            </li>*@
            @*<li>
                <a href="sales/saleshome/dashboard/Dashboard">Organiser</a>
                <i class="fa fa-angle-right"></i>
            </li>*@

        </ul>
        <div class="page-toolbar">
            <div class="btn-group pull-right">

                <div class="actions">
                    <div class="btn-group">
                            @Html.Partial("~/Views/Shared/Controls/DateField.cshtml", false)
                        </div>
                        @Html.Partial("~/Views/Shared/Controls/ConsolidateFilter.cshtml", true)
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = true,
                       ShowProductFilter = true,
                      // ShowPartyTypeFilter = true,
                       ShowCategoryFilter = true,
                      // ShowLocationFilter = true,
                      // ShowDocumentFilter = true,
                      // ShowCompanyFilter = true,
                      // ShowBranchFilter = true

                   })
                    </div>
                    @Html.Partial("~/Views/Shared/Controls/_reportFilterSettings.cshtml", new ReportFilterSettingsModel()
               {
                   ShowAmountFigureFilter = true,
                   ShowAmountFilter = true,
                   ShowAmountRoundUpFilter = true,
                  // ShowRangeAmountFilter = true
               })
                    <a class="btn btn-circle btn-icon-only btn-default" id="RunQuery" href="#">
                        <i class="icon-control-play"></i>
                    </a>
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_ReportConfig.cshtml", "CustomerWiseProfitAnalysisReport")
                    </div>

                </div>
            </div>
        </div>
    </div>

    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="row collapse in" id="demo">
        <div class="col-md-12">
            <div class="portlet light bordered">
                <div class="portlet-body form">
                    <div class="row">
                        <div id="grid"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END PAGE CONTENT-->
</div>
@Html.Partial("~/Views/Shared/Controls/_GridToolbar.cshtml")
@*<script type="text/x-kendo-template" id="toolbar-template">
    <div class="k-header k-grid-toolbar">
        <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
            <i class="fa fa-file-excel-o"></i>
        </a>
        <a class="k-button k-button-icontext k-grid-pdf" href="javascript">
            <i class="fa fa-file-pdf-o"></i>
        </a>
    </div>
</script>*@
<script src="@Scripts.Url("~/JS/DateFilter.js?V0")" type="text/javascript"></script>
<script src="@Scripts.Url("~/JS/dynamicReport.js?V2")" type="text/javascript"></script>
<script>
    //$("#supplierMultiSelect").closest(".row").hide();

    var reportConfig = GetReportSetting("CustomerWiseProfitAnalysisReport");
    function getDateFormat(date) {
        return kendo.format("{0:" + reportConfig.dateFormat + "}", date)
    }

    $(".applydp").on("click", function (evt) {
        evt.preventDefault();
        $("#RunQuery").trigger("click");
        $(this).closest("#applydp").modal('hide');
    });

    $("#loadAdvancedFilters").on("click", function (evt) {
        evt.preventDefault();
        $("#RunQuery").trigger("click");
    });

    $("#RunQuery").click(function (evt) {
        evt.preventDefault();
        var urltest = window.location.protocol + "//" + window.location.host + "/api/SalesHome/GetCustomerWiseProfileAnalysisReport"
        KendoGridRefresh(urltest);
    });


    function CalcGrossPercent(gp, lc) {
        var grid = $("#grid").data("kendoGrid")
        var a = 0;
        if (lc != 0)
        a = (gp * 100 / lc);
        return kendo.toString(a, "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString());
    }

    function BindGrid(readurl) {
        var companyName = ('@workingContent.CurrentUserinformation.company_name');
        var fromADdate = $("#FromDateVoucher").val()
        var toADdate = $("#ToDateVoucher").val();
        var fromBSdate = $("#fromInputDateVoucher").val();
        var toBSdate = $("#toInputDateVoucher").val();
        var branches = ReportFilter.getBranchs();
        reportConfig = GetReportSetting("CustomerWiseProfitAnalysisReport");
        var dataSource = new kendo.data.DataSource({
            type: "json",
            transport: {
                read: {
                    url: readurl, // <-- Get data from here.
                    dataType: "json", // <-- The default was "jsonp".
                    type: "POST",
                    contentType: "application/json; charset=utf-8"
                },
                parameterMap: function (options, type) {
                    var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                    delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                    delete paramMap.$format; // <-- remove format parameter.
                    return paramMap;
                }
            },

            error: function (e) {
                displayPopupNotification("Sorry error occured while processing data", "error");
            },
            serverFiltering: false,
            serverAggregates: true,
            schema: {
                data: "CustomerWiseProfileAnalysisModel", // records are returned in the "data" field of the response
                total: "total", // total number of records is in the "total" field of the response
                aggregates: "AggregationResult",
                model: {
                    fields: {
                        ITEM_EDESC: { type: "string" },
                        Unit: { type: "string" },
                        Quantity: { type: "number" },
                        Rate: { type: "number" },
                        SalesAmount: { type: "number" },
                        UnitCost :{type : "nuber"},
                        Landed_Cost: { type: "number" },
                        GrossProfit: { type: "number" },
                        GrossPercent: { type: "number" },
                    }
                }
            },
            group: {
                field: "CustomerName", aggregates: [
                     { field: "Quantity", aggregate: "sum" },
                     { field: "Rate", aggregate: "sum" },
                     { field: "SalesAmount", aggregate: "sum" },
                     { field: "UnitCost",  aggregate: "sum" },
                     { field: "Landed_Cost", aggregate: "sum" },
                     { field: "GrossProfit", aggregate: "sum" },
                     { field: "GrossPercent", aggregate: "sum" },
                     { field: "GrossPercent", aggregate: "count" }
                ]
            },
            aggregate: [
                     { field: "Quantity", aggregate: "sum" },
                     { field: "Rate", aggregate: "sum" },
                     { field: "SalesAmount", aggregate: "sum" },
                     { field: "UnitCost", aggregate: "sum" },
                     { field: "Landed_Cost", aggregate: "sum" },
                     { field: "GrossProfit", aggregate: "sum" },
                     { field: "GrossPercent", aggregate: "sum" },
                   { field: "GrossPercent", aggregate: "count" }
            ],
            serverPaging: false,
            serverSorting: false,
            pageSize: reportConfig.defaultPageSize,
        });


        var grid = $("#grid").kendoGrid({
            dataSource: dataSource,
            toolbar: kendo.template($("#toolbar-template").html()),
            excel:{
                allPages: true,
                fileName:"Customer Wise Profit Analysis Report"
            },
            //span convert to text
            excelExport: function (e) {
                var sheet = e.workbook.sheets[0];
                var datasource = $("#grid").data("kendoGrid");
                var data = e.data;

                var heardervalue = [];

                for (var i = 0; i < sheet.rows.length; i++) {


                    if (i === 0)
                        continue;

                    var row = sheet.rows[i];
                    if (row.cells.length == 10) {

                        if (row.cells[1].value != undefined && row.cells[3].value != undefined) {
                            var dataItem = {
                                //Due_Date: row.cells[3].value,
                                Voucher_Date: row.cells[3].value,
                                Credit_Days: row.cells[4].value
                            };


                        }
                        else {
                            for (var b = 0; b < row.cells.length; b++) {

                                if (row.cells[b] != undefined)
                                    row.cells[b].value = $(row.cells[b].value).text();

                            }

                        }

                    }
                }

                //adding header for the exported excel

                var rows = e.workbook.sheets[0].rows;
                rows.unshift({
                    height: 20,
                    cells: [{
                        value: "Customer Wise Profit Analysis Report".split('').join(' '),
                        //background: "#FFFFFF",
                        //textAlign: "center",
                        colSpan: 10,
                        fontSize: 12,
                    }]
                });
                rows.unshift({
                    height: 20,
                    cells: [{
                        value: "From :- " + fromADdate + "(" + fromBSdate + ")" + "\t To :- " + toADdate + "(" + toBSdate + ")",
                        //background: "#FFFFFF",
                        //textAlign: "center",
                        colSpan: 10,
                        fontSize: 12,
                    }]
                });
                for (var companyCount = 0; companyCount < branches.length; companyCount++) {
                    rows.unshift({
                        height: 20,
                        cells: [{
                            value: branches[companyCount].Company + " :- " + branches[companyCount].Branches.join(','),
                            //background: "#FFFFFF",
                            //textAlign: "center",
                            colSpan: 10,
                            fontSize: 12,

                        }]
                    });
                }
                rows.unshift({
                    height: 20,
                    cells: [{
                        value: companyName.split('').join(' '),
                        //background: "#FFFFFF",
                        //textAlign: "center",
                        colSpan: 10,
                        fontSize: 12,
                    }]
                });
            },
            pdf: {
                allPages:true,
                avoidLinks: true,
                pageSize: "auto",
                fileName: "Customer Wise Profit Analysis Report",
                margin: {
                    top: "2m",
                    right: "1m",
                    left: "1m",
                    buttom:"1m",
                },
                landscape: true,
                repeatHeaders: true,
                scale:0.8,


            },
            height: window.innerHeight - 50,
            reorderable: true,
            resizable: true,
            columnMenu: true,
             sortable: true,
            filterable: {
                extra: false,
                operators: {
                    number: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "is greater than or equal to	",
                        gt: "is greater than",
                        lte: "is less than or equal",
                        lt: "is less than",
                    },
                    string: {

                        eq: "Is equal to",
                        neq: "Is not equal to",
                        startswith: "Starts with	",
                        contains: "Contains",
                        doesnotcontain: "Does not contain",
                        endswith: "Ends with",
                    },
                    date: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "Is after or equal to",
                        gt: "Is after",
                        lte: "Is before or equal to",
                        lt: "Is before",
                    }
                }
            },  
            columnMenuInit: function (e) {
                    wordwrapmenu(e);
                    checkboxItem = $(e.container).find('input[type="checkbox"]');
                },
                columnShow: function (e) {
                    if($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                        SaveReportSetting('CustomerWiseProfitAnalysisReport', 'grid');
                },
                columnHide: function (e) {
                    if($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                        SaveReportSetting('CustomerWiseProfitAnalysisReport', 'grid');
                },
                pageable: {
                    refresh: true,
                    pageSizes: reportConfig.itemPerPage,
                    buttonCount: 5
                },
            //  autoBind: true,
            scrollable: {
                virtual: true
            },
            dataBound: function (o) {
                var grid = o.sender;
                if (grid.dataSource.total() == 0) {
                    var colCount = grid.columns.length;
                    $(o.sender.wrapper)
                        .find('tbody')
                        .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                    displayPopupNotification("No Data Found Given Date Filter.", "info");
                }
                else {
                    var g = $("#grid").data("kendoGrid");
                    for (var i = 0; i < g.columns.length; i++) {
                        g.showColumn(i);
                    }
                    $("div.k-group-indicator").each(function (i, v) {
                        g.hideColumn($(v).data("field"));
                    });
                }
                 UpdateReportUsingSetting("CustomerWiseProfitAnalysisReport", "grid");
            },
            columns: [
                          {
                              field: "ITEM_EDESC",
                              title: "Product Name",
                              width: "100px",

                          },

                          {
                              field: "Unit",
                              title: "Unit",
                              width: "40px",
                              footerTemplate: '<span style="float:right">#= "Grand Total" #</span>',
                              groupFooterTemplate: '<span style="float:right">#= "Total" #</span>',
                          },
                          {
                              field: "Quantity",
                              title: "Quantity",
                              width: "70px",
                              attributes: {
                                  style: "text-align: right;"
                              },
                              format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                              aggregates: ["sum"],
                              footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                              groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',


                          },
                          {
                              field: "Rate",
                              title: "Rate",
                              width: "70px",
                              attributes: {
                                  style: "text-align: right;"
                              },
                              format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                              aggregates: ["sum"],
                              footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                              groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                          },
                          {
                              field: "SalesAmount",
                              title: "Sales Amt.",
                              width: "70px",
                              attributes: {
                                  style: "text-align: right;"
                              },
                              format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                              aggregates: ["sum"],
                              footerTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                              groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                          },
                           {
                               field: "UnitCost",
                               title: "Unit Cost",
                               width: "70px",
                               attributes: {
                                   style: "text-align: right;"
                               },
                               format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                               aggregates: ["sum"],
                               footerTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                               groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                           },
                           {
                               field: "Landed_Cost",
                               title: "Landed Cost",
                               width: "70px",
                               attributes: {
                                   style: "text-align: right;"
                               },
                               format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                               aggregates: ["sum"],
                               footerTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                              // groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) + " Cr"#</span>',
                               groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',

                           },
                            {
                                field: "GrossProfit",
                                title: "Gross Profit",
                                width: "70px",
                                attributes: {
                                    style: "text-align: right;"
                                },
                                format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                                aggregates: ["sum"],
                                footerTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                                groupFooterTemplate: '<span style="float:right">#= kendo.toString(sum,"n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()) #</span>',
                            },
                             {
                                 field: "GrossPercent",
                                 title: "GP %eg",
                                 width: "60px",
                                 attributes: {
                                     style: "text-align: right;"
                                 },
                                 format: "{0:n" + ReportFilter.parseDecimalPlace('AmountRoundUpFilter').toString() + "}",
                                 aggregates: ["sum"],
                                 footerTemplate: '<span style="float:right">#= CalcGrossPercent(data.GrossProfit.sum, data.Landed_Cost.sum)  #</span>',
                                 groupFooterTemplate: '<span style="float:right">#= CalcGrossPercent(data.GrossProfit.sum, data.Landed_Cost.sum)  #</span>',
                             },
            ]

        });

    };


    function KendoGridRefresh(readUrl) {
        $('#grid').val('');
        $('#grid').html('');
        BindGrid(readUrl)
    }
    $(document).ready(function () {
        var urltest = window.location.protocol + "//" + window.location.host + "/api/SalesHome/GetCustomerWiseProfileAnalysisReport"
         DateFilter.init(function () {
                  consolidate.init(function () {
                    BindGrid(urltest);
                });
            });

        //to load method eg: Landed Cost
         var html = '<div class="row">';
         html += '<div class="col-md-12">';
         html += '<div class="form-group">';
        html += '<div class="col-sm-10 col-md-10 col-xs-10">';
        html += ' <select id="methodMultiSelect" class="form-control " style="width: 400px; height:30px;"><option>STD Rate</option><option selected="selected">Landed Cost</option><option>FIFO</option><option>WT Average</option></select>';
        html += ' </div>';
        html += '<div class="col-sm-2 col-md-2 col-xs-2">';
        html += '</div>';
        html += '</div><div class="br"></div></div></div>';
        $('#filterModal').find('.modal-body').append(html);


    });











</script>

