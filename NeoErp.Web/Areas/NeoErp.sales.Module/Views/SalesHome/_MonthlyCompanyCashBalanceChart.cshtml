@using NeoErp.Core.Helpers
@using NeoErp.Core.Models.CustomModels
@using NeoErp.Core.Models;
@{
    var actionPageId = "MonthlyCompanyCashBalanceChart";

}
<style>
    .slimScrollBar {
        border-radius: 5px !important;
        background-color: #333 !important;
    }

    .slimScrollDiv, #customerMultiSelect {
        height: auto !important;
    }

    ul.dropdown-menu.custom {
        margin-top: 8px !important;
        border: none;
        box-shadow: none !important;
    }

    .dropdown-menu.custom:before {
        left: 58px !important;
    }

    .download-btn {
        margin: 0px !important;
        padding-top: -2px !important;
        padding-left: 0px;
        padding-right: 0px;
        margin-top: -5px !important;
        margin-left: 5px !important;
    }

    .dropdown-menu.custom {
        left: -27px !important;
        top: 20px !important;
    }

    .dropdown > .dropdown-menu:before, .dropdown-toggle > .dropdown-menu:before, .btn-group > .dropdown-menu:before {
        position: absolute;
        top: -8px;
        left: 30px;
        right: auto;
        display: inline-block !important;
        border-right: 8px solid transparent;
        border-bottom: 8px solid #e0e0e0;
        border-left: 8px solid transparent;
        content: '';
    }

    i.icon-arrow-down {
        color: #acacac;
    }

    .btn-group-custom button.btn {
        padding: 7px 7px !important;
        float: left;
    }

    .dropdown-menu.custom {
        left: -55px !important;
    }

    a.monthlyCompanyCashBalanceDatagrid {
        color: #acacac !important;
    }
</style>
<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="CompanyCashBalanceModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-bar-chart"></span> Monthly company CashBalance chart</h4>
            </div>
            <div class="modal-body bottom-gappingtwo">
                <div class="row">
                    <div class="monthlybranch-sales clearfix">
                        <div class="col-md-12 col-sm-12">
                            <div class="form-group">
                                <label class="control-label">As on Date</label>
                                <div class="">
                                    @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/DatePicker.cshtml", new DatePickerModel()
                               {
                                   ActionPageId = actionPageId
                               })
                                </div>
                            </div>
                            <div class="btn-group optionsCompanyCashBalance" data-toggle="buttons">
                                <button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-bar-chart"></i>
                                    <input id="typeColumnCompanyCashBalance" name="seriesTypeCompanyCashBalance"
                                           type="radio" value="column" checked="checked" autocomplete="off" /> column
                                </button>
                                <button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-bar-chart"></i>
                                    <input id="typeBarCompanyCashBalance" name="seriesTypeCompanyCashBalance"
                                           type="radio" value="bar" autocomplete="off" /> bar
                                </button>
                                <button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-line-chart"></i>
                                    <input id="typeLineCompanyCashBalance" name="seriesTypeCompanyCashBalance"
                                           type="radio" value="line" autocomplete="off" />Line
                                </button>
                            </div>
                        </div>
                        <div class="options">
                            <div class="col-sm-6 col-md-6 choose">
                                <div class="btn-group optionsCompanyCashBalance hidden" data-toggle="buttons">
                                    <h4> Choose Value Field</h4>
                                    <button type="button" class="btn btn-sm default red-stripe">
                                        <i class="fa fa-cart-arrow-down"></i>
                                        <input id="QuantityColumnCompanyCashBalance" name="fieldTypeCompanyCashBalance"
                                               type="radio" value="Quantity" checked="checked" autocomplete="off" /> Quantity
                                    </button>
                                    <button type="button" class="btn btn-sm default green-stripe">
                                        <i class="fa fa-rupee"></i>
                                        <input id="typeBarCompanyCashBalance" name="fieldTypeCompanyCashBalance"
                                               type="radio" value="Amount" autocomplete="off" /> Amount
                                    </button>
                                </div>
                            </div>
                            <div class="col-sm-6 col-md-6">
                                <!-- show label & Stack option-->
                                <div class="input-group chart-option">
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showlablesCompanyCashBalance" type="checkbox" autocomplete="off" /> Show Labels
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
          
                @*
         <div class="filter_title">
             <label class="filter-label">Advance Filter</label>
         </div>

         @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
    {
        ShowCustomerFilter = false,
        ShowProductFilter = true,
        ShowPartyTypeFilter = false,
        ShowCategoryFilter = true,
        ShowLocationFilter = false,
        ShowDocumentFilter = false,
        ShowCompanyFilter = false,
        ShowBranchFilter = false,
        IsPopUp = false,
        ActionPageId = actionPageId
    })
                *@
              </div>
           
            <div class="modal-footer">
                @*<button type="button" class="btn default" data-dismiss="modal">Close</button>*@
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="portlet portlet-sortable  light bordered" id="MonthlyCompanyCashBalanceChart">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">Company CashBalance Chart</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            <a class="btnGrid monthlyCompanyCashBalanceDatagrid" data-type="Chart" data-chart-name="company_sales_monthly" data-title="Grid">
                <i class="fa fa-table"></i>
            </a>

            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down SecondcustomCompanyCashBalance"></i>

                </a>
                <ul class="dropdown-menu custom SecondslidetoggleCompanyCashBalance">
                    <div class="btn-group-custom">
                        <button type="button" data-id="CompanyCashBalanceChart" class="export-pdf btn default green-stripe"><i class="fa fa-file-pdf-o"></i> PDF</button>
                        <button type="button" data-id="CompanyCashBalanceChart" class="export-img btn default blue-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="CompanyCashBalanceChart" class="export-svg btn default red-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config">
            </a>
            <a href="javascript:;" class="reload">
            </a>
            <a href="javascript:;" class="fullscreen">
            </a>
            <a href="javascript:;" class="remove">
            </a>
        </div>
    </div>
    <div class="portlet-body">
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="CompanyCashBalanceChart"></div>
             <div class="overlay"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>


    <script>
        var defaultDateFormat_monthlyCompanyCashBalance = "";
        
        var dataBounded_MonthlyCompanyCashBalanceChart = false;
        var dayWiseUrl_MonthlyCompanyCashBalanceChart = "";
        var toggleFlag_MonthlyCompanyCashBalanceChart = true;
        var _oldDate_MonthlyCompanyCashBalanceChart = "";




        //LoadDataGrid function for data-grid
        function LoadDataGrid_MonthlyCompanyCashBalanceChart(dataSource, monthField) {
            $("#CompanyCashBalanceChart").html('');
            $('.monthlyCompanyCashBalanceDatagrid').data("type", "Grid");
            var monthTitle = "Month";
            var format = $("input[name=DateFormat_monthlyCompanyCashBalance]:checked").val();
            dataSource = dataSource == undefined ? $("#CompanyCashBalanceChart").data("kendoChart").dataSource : dataSource;
            if (format == "BS") {
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + dataSource.data()[0].Nepalimonth + "]";
                }
                else {
                    monthField = "month";
                    monthTitle = "Month"
                }
            }
            if (monthField == undefined)
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + dataSource.data()[0].Month + "]";
                }
                else {
                    monthField = "Month";
                    monthTitle = "Month"
                }            
            dataSource.group([]);
            $("#CompanyCashBalanceChart").kendoGrid({
                dataSource: dataSource,
                height: $("#MonthlyBranchchart").hasClass("portlet-fullscreen") ? 550 : 350,
                groupable: false,
                sortable: true,
                // selectable: "multiple",
                toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                excel: {
                    fileName: "Company Cash Balance Report",
                    allPages: true
                },
                columns: [{
                    field: "Companyname",
                    title: "Company Name",
                    width: 240
                }, {
                    field: "Amount",
                    title: "Amount",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }],
                dataBound: function (e) {
                    var gird = e.sender;
                    flag = false;
                    gird.table.find(".k-grouping-row").each(function () {
                        if (flag == true) { gird.collapseGroup(this); }
                        else
                            flag = true;
                    });
                }
            });
        }


        function ThirdChartData_CompanyCashBalance() {
            $('.monthlyCompanyCashBalanceDatagrid').data("type", "Chart");
            var urlData = "";
            CreateMonthlyCompanyCashBalanceChart(urlData);
            RefreshChartFilterControl('@actionPageId');
        }

        var checkedCompany = "";
        $(".monthlyCompanyCashBalanceDatagrid").click(function () {

            var type = $('.monthlyCompanyCashBalanceDatagrid').data("type");
            var name = $('.monthlyCompanyCashBalanceDatagrid').data("chart-name");

             

            if (type == "Chart" && name == "company_sales_monthly") {
                LoadDataGrid_MonthlyCompanyCashBalanceChart()
                $('.monthlyCompanyCashBalanceDatagrid').data("type", "Grid");
            }
            else if (type == "Chart" && name == "branch_sales_monthly") {
                LoadDataGrid_MonthlyBranchSalesChartForCompanyCashBalance();
                $('.monthlyCompanyCashBalanceDatagrid').data("type", "Grid");
            }
            else if (type == "Grid" && name == "branch_sales_monthly") {
                $('.monthlyCompanyCashBalanceDatagrid').data("type", "Chart");
                var urldata = "?customerCode=&itemCode=&categoryCode=&companyCode=" + checkedCompany + "&branchCode=&partyTypeCode=&formCode=";
                LoadChart_MonthlyBranchSalesChartForCompanyCashBalance();
                $('.monthlyCompanyCashBalanceDatagrid').data("type", "Chart");
            }
            else if (type == "Grid") {
                ThirdChartData_CompanyCashBalance();
                $('.monthlyCompanyCashBalanceDatagrid').data("type", "Chart");
            }
            $("i", this).toggleClass("icon-bar-chart");
        });

        $("#CompanyCashBalanceChart").on('dblclick', ".k-state-selected", function (e) {

            var grid = $("#CompanyCashBalanceChart").data("kendoGrid");
            var dateformat = $("input[name=DateFormat_monthlyCompanyCashBalance]:checked").val();
            var selectedItem = grid.dataItem(grid.select());
            selectedItem.Month = selectedItem.Month == null ? selectedItem.Nepalimonth : selectedItem.Month;

            var clickedMonth = selectedItem.Month;
            var clickedCompany = selectedItem.Companycode;
            var urldata = "?customerCode=&itemCode=&categoryCode=&companyCode=" + clickedCompany + "&branchCode=&partyTypeCode=&formCode=";
            $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("chart-name", "branch_sales_monthly");
            CreateMonthlyBranchSalesChartFormCompanyCashBalanceChart(urldata);
        })
        var tempcopanayselected = [];
        function CreateMonthlyCompanyCashBalanceChart(urlData) {
            $('#MonthlyCompanyCashBalanceChart').find('.caption-subject').html("Company CashBalance Chart");
            urlData = (urlData == undefined || urlData == "") ? "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=" : urlData;
            monthlyCompanyCashBalance = urlData.replace('?', '&');
            dayWiseUrl_MonthlyCompanyCashBalanceChart = monthlyCompanyCashBalance;
            var dateformat = $("input[name=DateFormat_monthlyCompanyCashBalance]:checked").val();
            var catagoryAxisName_monthlyCompanyCashBalance = "Month", sortAxis_monthlySales = "Month";
            //if (dateformat == "BS") {
            //    catagoryAxisName_monthlyCompanyCashBalance = "Nepalimonth";
            //    sortAxis_monthlySales = "NepaliMonthInt";
            //}           
            var mainUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetCompanyCashBalanceReport";
            var IsDataGrid = $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("type");
            var DataGridChartName = $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("chart-name");
            reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
            reportFilter.ReportFilters.BranchFilter = [];
            reportFilter.ReportFilters.FromDate = $("#datePickerAd_MonthlyCompanyCashBalanceChart").val();
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: mainUrl + "?DateFormat=" + dateformat + urlData.replace('?', '&'),
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, reportFilter));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },
                requestStart: function () {
                    if (IsDataGrid != "Grid") {
                        kendo.ui.progress($("#MonthlyCompanyCashBalanceChart"), true);
                    }
                },
                requestEnd: function () {
                    kendo.ui.progress($("#MonthlyCompanyCashBalanceChart"), false);
                },
            });
            // data-grid set option on ceate funciton
            $("#MonthlyCompanyCashBalanceChart .DisplayFilterContent a").text("");
             

            if (IsDataGrid == "Grid" && DataGridChartName == "company_sales_monthly") {
                LoadDataGrid_MonthlyCompanyCashBalanceChart(dataSource);
                $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("type", "Chart");
                return;
            }
            else if (IsDataGrid == "Grid" && DataGridChartName == "branch_sales_monthly") {
                $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("chart-name", "branch_sales_monthly");
                LoadDataGrid_MonthlyBranchSalesChartForCompanyCashBalance();
                $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("type", "Chart");
                return;
            }

            LoadChart_MonthlyBranchSalesChartForCompanyCashBalance(dataSource);
        }



        function LoadChart_MonthlyBranchSalesChartForCompanyCashBalance(dataSource)
        {
            dataSource = dataSource == undefined ? $("#CompanyCashBalanceChart").data("kendoChart").dataSource : dataSource;
            var monthField = 'Companyname';
            var seriesDy = [{ field: "Amount",name:"Amount" }];
            var title = "";
            if (dataSource.data().length > 0)
            {
                if (dataSource.data()[0].MonthYear != null)
                {
                    monthField = 'MonthYear';
                   seriesDy = [{ field: "Deposit", name: "Deposit" }, { field: "WithDrawn", name: "WithDrawn" }];                   
                   title = dataSource.data()[0].BranchName;                   
                   dataSource.group([]);
                   
                }                    
                else if (dataSource.data()[0].BranchName != null)
                {
                    monthField = '';
                    dataSource.group({ field: "BankName" });
                    seriesDy = [{ field: "Amount",categoryField: "BranchName", name: "#= group.value #"}];
                   
                }
                else
                {
                    monthField = 'Companyname';
                  
                }

            }

         
            $("#CompanyCashBalanceChart").kendoChart({
                chartArea: {
                    height: ($("#MonthlyCompanyCashBalanceChart").hasClass("portlet-fullscreen")) ? 550 : 350,
                },
                onDrag: function (e) {
                    var chart = e.sender;
                    var ds = chart.dataSource;
                    var options = chart.options;
                    var categoryRange = e.axisRanges.CategoryAxis;
                    if (categoryRange) {
                        var xMin = categoryRange.min;
                        var xMax = categoryRange.max;

                        options.categoryAxis.min = xMin;
                        options.categoryAxis.max = xMax;

                        ds.filter(viewModel.getFilter(xMin, xMax));
                    }
                },
                pannable: {
                    lock: "y"
                },
                zoomable: {
                    mousewheel: {
                        lock: "y"
                    },
                    selection: {
                        lock: "y"
                    }
                },
                dataSource: dataSource,
                legend: {
                    position: "bottom"
                },
                seriesDefaults: {
                    type: $("input[name=seriesTypeCompanyCashBalance]:checked").val(),
                    // style: "smooth",
                    labels: {
                        visible: $("#showlablesCompanyCashBalance").prop("checked"),
                        template: "#=FormatSeriesLabels(value)#",
                        rotation: '0',
                    },
                    overlay: {
                        gradient: "roundedBevel"
                    },
                },
                valueAxis: {
                    line: {
                        visible: true
                    },
                    labels: {
                        rotation: 'auto',
                        template: "#= FormatSeriesLabels(value)#"
                    },
                    rotation: '270',
                    padding: {
                        left: -5
                    },
                    title: { text: amountFigureType }
                },
                series: seriesDy,
                //seriesColors: ["#428bca", "#da3b36", "#e67d4a", "#5bc0de", "#5cb85c", "#f2b661"],
                categoryAxis: [
                    {
                        visible:false
                    },
                  {
                      field: monthField,
                      visible: true,
                      labels: {
                          rotation: -45,
                      },
                     title: { text: title }
                  }],

                tooltip: {
                    visible: true,
                    format: "{0}",
                    template: "#= FormatSeriesLabels(value)#"
                },
                dataBound: function (e) {
                    var maxValue = getMaxValueFromDataSource(e);
                    var majorunit = Math.max(6, maxValue / 6);
                    e.sender.options.valueAxis.majorUnit = majorunit;
                    e.sender.options.valueAxis.max = maxValue + majorunit; 
                    $("#CompanyCashBalanceChart").next(".overlay").toggle(maxValue <= 0);
                     e.sender.options.valueAxis.axisCrossingValue = [0, -(maxValue + majorunit)];
                    if (e.sender.options.series[0].name == "null") e.sender.options.series[0].name = "Amount";

                },
                seriesClick: function (e) {
                     
                    if (e.dataItem.BankName == null)
                    {
                         $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("chart-name", "branch_sales_monthly");
                    CreateMonthlyBranchSalesChartFormCompanyCashBalanceChart(e);
                    } else {
                        seriesClick_companyCash(e)
                    }
                  
                   
                },
            });
        }
    </script>
    <script>
        $("#showzerovalue_monthlyBranchSales").on("change", function () {
            CreateMonthlyCompanyCashBalanceChart();
            RefreshChartFilterControl('@actionPageId');
        });
        $('#CompanyCashBalanceChart').closest('.portlet').find('.fullscreen').click(function () {
            if ($(this).hasClass("on")) {
                $("#CompanyCashBalanceChart").data("kendoChart").options.chartArea.height = 350;
            }
            else {
                $("#CompanyCashBalanceChart").data("kendoChart").options.chartArea.height = 550;
            }
            $("#CompanyCashBalanceChart").data("kendoChart").dataSource.read();
            $("#CompanyCashBalanceChart").data("kendoChart").refresh();
        });
        $('#CompanyCashBalanceChart').closest('.portlet').find('.config').click(function () {
            $(this).closest('.portlet').css('zIndex', 10040);
        });
        $('#CompanyCashBalanceChart').closest('.portlet').find('.icon-arrow-down').click(function () {
            $(this).closest('.portlet').css('zIndex', 10040);
        });
        $('#CompanyCashBalanceChart').closest('.portlet').find('.reload').click(function () {
            var urlData = "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=";           
            $("#MonthlyCompanyCashBalanceChart").data("kendoChart") == undefined == "" ? $("#MonthlyCompanyCashBalanceChart").data("kendoChart").options.categoryAxis.title.text = "" : "";
            $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("chart-name", "company_sales_monthly");
            $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("type", "Chart");
            CreateMonthlyCompanyCashBalanceChart(urlData);
            RefreshChartFilterControl('@actionPageId'); // ??
        });

        function refreshCompanyCashBalance() {
            if ($(".monthlyCompanyCashBalanceDatagrid").attr("data-type") == "Grid")// data-grid toogle chart option in data-grid attribute in div
            {
                $(".monthlyCompanyCashBalanceDatagrid").attr("data-type", "Chart");
                CreateMonthlyBranchSalesChart();
                return;
            }

            var chart = $("#CompanyCashBalanceChart").data("kendoChart"),
                type = $("input[name=seriesTypeCompanyCashBalance]:checked").val(),
                fieldtype = $("input[name=fieldTypeCompanyCashBalance]:checked").val(),
                labels = $("#showlablesCompanyCashBalance").prop("checked");
            var dateformat = $("input[name=DateFormat_monthlyCompanyCashBalance]:checked").val();

            for (var i = 0, length = chart.options.series.length; i < length; i++) {
                chart.options.series[i].type = type;
                chart.options.series[i].labels.visible = labels;
            };

            if (fieldtype == "Quantity") {
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].field = "Quantity";
                };
            }
            else {
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].field = "Amount";
                };
            }


            if (type == "column") {
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].labels.rotation = -90;
                }
            }
            if (type == "bar") {
                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].labels.rotation = 0;
                }
            }
            chart.refresh();
        }

        $('#apply_@actionPageId').click(function () {
            //check for filter changes
            var IsDateChanged = false;
            var newDate = $("#datePickerAd_MonthlyCompanyCashBalanceChart").val();
            if (_oldDate_MonthlyCompanyCashBalanceChart != newDate) {
                IsDateChanged = true;
                _oldDate_MonthlyCompanyCashBalanceChart = $("#datePickerAd_MonthlyCompanyCashBalanceChart").val();

            }



            ChartFilter('@actionPageId', "CreateMonthlyCompanyCashBalanceChart", IsDateChanged);
        });

        $(document).ready(function () {
            defaultDateFormat_monthlyCompanyCashBalance = $('input[name=DateFormat_monthlyCompanyCashBalance]:checked').val();
            $('[title="Download"]').tooltip({
                trigger: 'hover'
            });

            $('.icon-arrow-down.SecondcustomCompanyCashBalance').click(function () {
                $('.dropdown-menu.custom.SecondslidetoggleCompanyCashBalance').slideToggle(200);
            });
            DatePicker.init('@actionPageId', "", "");
            _oldDate_MonthlyCompanyCashBalanceChart = $("#datePickerAd_MonthlyCompanyCashBalanceChart").val();
            CreateMonthlyCompanyCashBalanceChart();

            $(".optionsCompanyCashBalance").bind("change", function () {
                if ($('.monthlyCompanyCashBalanceDatagrid').data("type") == "Chart")
                    refreshCompanyCashBalance();
                else
                    chart_grid_option_change("CompanyCashBalanceChart", "CreateMonthlyCompanyCashBalanceChart");
            });
            $("#showlablesCompanyCashBalance").bind("change", function () {
                var temp = $('.monthlyCompanyCashBalanceDatagrid').data("type");
                $('.monthlyCompanyCashBalanceDatagrid').data("type", "temp");
                try {
                    var chart = $("#CompanyCashBalanceChart").data("kendoChart")
                    if (chart.dataSource.view()[0].Companyname == undefined)
                        refreshCompanyCashBalance();
                } catch (e) { }
                $('.monthlyCompanyCashBalanceDatagrid').data("type", temp);
            });


        });

    </script>
    <script>
        //$("input[name=DateFormat_monthlyBranchSales]").on('change', function () {
        //    CreateMonthlyCompanyCashBalanceChart();
        //})
    </script>

    <!--Monthly Branch sales chart according to Company-->
    <script>
        //LoadDataGrid function for data-grid for company
        function LoadDataGrid_MonthlyBranchSalesChartForCompanyCashBalance(dataSource, monthField) {
            $("#CompanyCashBalanceChart").html('');
            //$('.monthlyCompanyCashBalanceDatagrid').data("type", "Grid");
            var monthTitle = "Month";
            var columns = [];
            var format = $("input[name=DateFormat_monthlyCompanyCashBalance]:checked").val();
            dataSource = dataSource == undefined ? $("#CompanyCashBalanceChart").data("kendoChart").dataSource : dataSource;
            if (format == "BS") {
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + dataSource.data()[0].Nepalimonth + "]";
                }
                else {
                    monthField = "Nepalimonth";
                    monthTitle = "Month"
                }
            }
            if (monthField == undefined)
                if (dataSource.data().length > 0 && dataSource.data()[0].MonthYear != null) {                  
                    columns = [{
                        field: "MonthYear",
                        title: "Month [Cash : " + dataSource.data()[0].BankName + "]",
                        width: 240
                    }, {
                        field: "Deposit",
                        title: "Deposit",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    },
                              {
                                  field: "WithDrawn",
                                  title: "WithDrawn",
                                  format: "{0:n}",
                                  attributes: {
                                      style: "text-align: right;"
                                  },
                              }];
                }
                else {                   
                    columns = [{
                        field:"BankName",
                        title: "Cash",
                        width: 240
                    }, {
                        field: "Amount",
                        title: "Amount",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    }];

                }
            
            dataSource.group({ field: "BranchName", title: "Month" });
            $("#CompanyCashBalanceChart").kendoGrid({
                dataSource: dataSource,
                height: $("#MonthlyCompanyCashBalanceChart").hasClass("portlet-fullscreen") ? 550 : 350,
                groupable: false,
                sortable: true,
                // selectable: "multiple",
                toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                excel: {
                    fileName: "Company Cash Balance Report",
                    allPages: true
                },
                columns: columns,
                dataBound: function (e) {
                    var gird = e.sender;
                    flag = false;
                    gird.table.find(".k-grouping-row").each(function () {
                        if (flag == true) { gird.collapseGroup(this); }
                        else
                            flag = true;
                    });
                }
            });
        }
        function CreateMonthlyBranchSalesChartFormCompanyCashBalanceChart(e) {
            $('#MonthlyCompanyCashBalanceChart').find('.caption-subject').html("BranchWise CashBalance Chart");
            var dateformat = $("input[name=DateFormat_monthlyCompanyCashBalance]:checked").val();
            var catagoryAxisName_monthlyBranchSales = "BranchName", sortAxis_monthlySales = "BRANCH_CODE";
            var mainUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetBranchCashBalanceReport";
            var IsDataGrid = $('#MonthlyCompanyCashBalanceChart .monthlyCompanyCashBalanceDatagrid').data("type");
            reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
            reportFilter.ReportFilters.BranchFilter = [];
            reportFilter.ReportFilters.FromDate = $("#datePickerAd_MonthlyCompanyCashBalanceChart").val();
            reportFilter.ReportFilters.CompanyFilter = [e.dataItem.Companycode];
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: mainUrl + "?DateFormat=" + dateformat,
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, reportFilter));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },
                requestStart: function () {
                    if (IsDataGrid != "Grid") {
                        kendo.ui.progress($("#CompanyCashBalanceChart"), true);
                    }
                },
                requestEnd: function () {
                    kendo.ui.progress($("#CompanyCashBalanceChart"), false);
                },
                group: {
                    field: "BankName"
                },

                sort: { field: "BRANCH_CODE", dir: "asc" },

            });
            // data-grid set option on ceate funciton
            $("#MonthlyCompanyCashBalanceChart .DisplayFilterContentCompanyCashBalance a").text("");

            if (IsDataGrid == "Grid") {
                LoadDataGrid_MonthlyBranchSalesChartForCompanyCashBalance(dataSource);
                return;
            }

            $("#CompanyCashBalanceChart").kendoChart({
                chartArea: {
                    height: ($("#MonthlyCompanyCashBalanceChart").hasClass("portlet-fullscreen")) ? 550 : 350,
                },
                onDrag: function (e) {
                    var chart = e.sender;
                    var ds = chart.dataSource;
                    var options = chart.options;
                    var categoryRange = e.axisRanges.CategoryAxis;
                    if (categoryRange) {
                        var xMin = categoryRange.min;
                        var xMax = categoryRange.max;

                        options.categoryAxis.min = xMin;
                        options.categoryAxis.max = xMax;

                        ds.filter(viewModel.getFilter(xMin, xMax));
                    }
                },
                pannable: {
                    lock: "y"
                },
                zoomable: {
                    mousewheel: {
                        lock: "y"
                    },
                    selection: {
                        lock: "y"
                    }
                },
                dataSource: dataSource,
                title: {
                },
                legend: {
                    position: "bottom"
                },
                group: {
                    field: "BankName"
                },
                seriesDefaults: {
                    type: $("input[name=seriesTypeCompanyCashBalance]:checked").val(),
                    style: "smooth",
                    labels: {
                        visible: $("#showlablesCompanyCashBalance").prop("checked"),
                        template: "#= FormatSeriesLabels(value)#"
                    },
                },
                valueAxis: {
                    axisCrossingValue: [0, -1e6, -1e6],
                    line: {
                        visible: true
                    },
                    labels: {
                        rotation: 'auto',
                        template: "#= FormatSeriesLabels(value)#"
                    },
                    title: { text: amountFigureType }
                },
                series: [{
                    field: "Amount",
                    categoryField: "BranchName",
                    name: "#= group.value #"
                }],
                seriesColors: ["#5bc0de", "#f2b661", "#da3b36", "#e67d4a", "#5cb85c"],
                categoryAxis: [
                    {
                        visible: false
                    },
                    {
                        labels: {
                            rotation: -45,
                        }
                    }],
                tooltip: {
                    visible: true,
                    format: "{0}",
                    template: "#= FormatSeriesLabels(value)#"
                },
                dataBound: function (e) {                  
                     var maxValue = getMaxValueFromDataSource(e);
                    var majorunit = Math.max(6, maxValue / 6);
                    e.sender.options.valueAxis.majorUnit = majorunit;
                    e.sender.options.valueAxis.max = maxValue + majorunit; 
                     $("#CompanyCashBalanceChart").next(".overlay").toggle(maxValue <= 0);
                             
                    e.sender.options.valueAxis.axisCrossingValue = [0, -(maxValue + majorunit)];
                },
                seriesClick: function (e) {
                     
                  seriesClick_companyCash(e)
                }


            });
        }




        function seriesClick_companyCash(e)
        {
              var daywiseUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetCashBalanceMonthlyReport";
                    $('#MonthlyCompanyCashBalanceChart').find('.caption-subject').html("MonthWise CashBalance Chart");
                    var dateformat = $("input[name=DateFormat_monthlyCompanyCashBalance]:checked").val();
                    if (e.dataItem.BankName == undefined)
                        return false;
                    if (e.dataItem.WithDrawn != undefined)
                        return false;
                    reportFilter.ReportFilters.FromDate = $("#datePickerAd_MonthlyCompanyCashBalanceChart").val();
                    reportFilter.ReportFilters.BranchFilter = [e.dataItem.Branch_Code];
                    var dataSourcetest = new kendo.data.DataSource({
                        transport: {
                            read: {
                                url: daywiseUrl + "?BankName=" + e.dataItem.BankName,
                                dataType: "json", // <-- The default was "jsonp".
                                type: "POST",
                                contentType: "application/json; charset=utf-8"
                            },
                            parameterMap: function (options, type) {
                                var paramMap = JSON.stringify($.extend(options, reportFilter));
                                delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                                delete paramMap.$format; // <-- remove format parameter.
                                return paramMap;
                            }
                        },
                        requestStart: function () {
                            kendo.ui.progress($("#MonthlyCompanyCashBalanceChart"), true);
                        },
                        requestEnd: function () {
                            kendo.ui.progress($("#MonthlyCompanyCashBalanceChart"), false);
                        },
                        sort: {
                            field: "MonthINT",
                            dir: "asc"
                        },
                    });

                    var chart = $("#CompanyCashBalanceChart").data("kendoChart");
                    //type = $("input[name=seriesTypeCompanyCashBalance]:checked").val(),
                    for (var i = 0, length = chart.options.series.length; i < length; i++) {
                        // chart.options.series[i].type = 'bar';
                    };
                    chart.setOptions({
                        categoryAxis: [
                            {
                                visible: false
                            }, {
                                labels: {
                                    rotation: -45,
                                },
                                title: { text: e.category }
                            }],
                        series: [{
                            field: "Deposit",
                            categoryField: "MonthYear",
                            name: "Deposit"
                        },
                        {
                            field: "WithDrawn",
                            categoryField: "MonthYear",
                            name: "WithDrawn"
                        }],
                        tooltip: {
                            template: "#= FormatSeriesLabels(value)#"
                        },
                    });

                    //chart.options.series[0].field = "Deposit";
                    //chart.options.series[1].field = "WithDrawn";

                    chart.setDataSource(dataSourcetest);
                    chart.refresh();
        }

        //Export 
        $(".export-pdf").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({

                    dataURI: data,
                    fileName: filename + ".pdf",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        $(".export-img").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportImage().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".png",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export",

                });
            });
        });

        $(".export-svg").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportSVG().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".svg",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });


        function FormatSeriesLabels(value) {
            if (isNaN(value))
                value = 0;
            var decimalPlaces = 2;
            if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != "" && ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != undefined) {
                if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".").length > 1)
                    decimalPlaces = ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".")[1].length;
                else
                    decimalPlaces = 0;
            }

            if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Lakh") {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            } else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Thousand") {
                value = (value / 1000).toFixed(decimalPlaces) + " K";
            }
            else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Crore") {
                value = (value / 10000000).toFixed(decimalPlaces) + " C";
            }
            else {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            }
            return kendo.format("{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}", value);
        }
    </script>
</div>
