@using NeoErp.Core.Models;
@using NeoErp.Core.Models.CustomModels
@using NeoErp.Core;
@using NeoErp.Core.Infrastructure;
@model List<NeoErp.Sales.Modules.Services.Models.ChargesTitle>
@{
    ViewBag.Title = "SalesSummaryCustomerWise";
}
@{
    var workingContent = EngineContext.Current.Resolve<IWorkContext>();
}

<style>
     /*.btn-group {
    margin-right: 7px;
}*/
    /*a#RunQuery {
    margin-right: 5px;
}*/
    /*.page-bar {
        margin-bottom: 0px !important;
    }*/

    .k-grid table {
        table-layout: fixed;
    }

    .no-data {
        background-color: red;
    }

    /*.k-grid td {
        white-space: nowrap !important;
        text-overflow: ellipsis;
    }*/

    .k-grid-content {
        font-size: 10px;
    }

    .k-grid-footer {
        font-size: 10px;
    }

    .nowrap{
        white-space:nowrap !important;
    }
    .wrap{
        white-space:normal !important;
    }
    .floatright {
        float: right;
        margin-top: 2px !important;
    }
</style>
<div class="page-content">


    <div class="page-bar">
        <ul class="page-breadcrumb">
            @*<li>
                <i class="fa fa-home"></i>
                <a href="/sales/SalesHome/Dashboard">Home</a>
                <i class="fa fa-angle-right"></i>
            </li>*@
            @*<li>
                <a href="#/Sales/SalesSummaryCustomerWise">Party wise VAT Sales Summary Report</a>
                <i class="fa fa-angle-right"></i>
            </li>*@
            @*<li>
                <a href="sales/saleshome/dashboard/Dashboard">Organiser</a>
                <i class="fa fa-angle-right"></i>
            </li>*@

        </ul>
        <div class="page-toolbar">
            <div class="btn-group pull-right">
                <div class="actions">
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/DateField.cshtml", false)
                    </div>
                     <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/ConsolidateFilter.cshtml", true)
                    </div>
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = true,
                       ShowProductFilter = true,
                       ShowCategoryFilter = true,
                       ShowPartyTypeFilter = true,
                       ShowLocationFilter = false,
                       ShowDocumentFilter = true,
                       ShowEmployeeFilter = true,
                       ShowAgentFilter = false,
                       ShowDivisionFilter=true,
                       ShowAreaFilter = true,
                       //ShowBranchFilter = true
                   })
                    </div>
                    @Html.Partial("~/Views/Shared/Controls/_reportFilterSettings.cshtml", new ReportFilterSettingsModel()
                   {
                       ShowAmountFigureFilter = true,
                       ShowAmountFilter = true,
                       ShowAmountRoundUpFilter = true,
                       ShowRangeAmountFilter = true

                   })
                    @Html.Partial("~/Views/Shared/Controls/ComposeMail.cshtml", new FileMailAttachment() { })
                    <a class="btn btn-circle btn-icon-only btn-default" id="RunQuery" href="#" data-toggle="tooltip" title="Refresh" data-placement="left">
                        <i class="icon-control-play"></i>
                    </a>

                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_ReportConfig.cshtml", "SalesSummaryCustomerWise")
                    </div>
                </div>

            </div>
        </div>
    </div>

    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="row collapse in" id="demo">
        <div class="col-md-12">
            <div class="portlet light bordered">
                
                
                <div class="portlet-body form">
                    <div class="row">


                        <div id="grid"></div>
                        @Html.Partial("~/Views/Shared/Controls/_GridToolbar.cshtml")
                        <script id="rowTemplate" type="text/x-kendo-tmpl">
                            <tr class="k-master-row" data-uid="#: uid #" role="row">
                                #= new Array(this.group().length + 1).join('<td class="k-group-cell"></td>') #
                              
                                <td role="gridcell">
                                    <span>#:CustomerName# </span>

                                </td>
                                <td role="gridcell">
                                    #:VatNo#
                                </td>
                                <td role="gridcell">
                                    @*<span style="float:right">#= kendo.format("{0:n}", GrossAmount)# </span>*@
                                    <span style="float:right">#= kendo.toString(GrossAmount, "n"+ ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())# </span>
                                  
                                </td>
                                @foreach (var item in Model.Where(x => x.ChargesHeaderNo != "VTD"))
                                {
                                    <text>

                                        <td role="gridcell">
                                            @*#= myCustomFunction(data.charges,'@item.ChargesHeaderNo')#*@
                                            @*<span style="float:right">#= kendo.format("{0:n}", myCustomFunction(data.charges,'@item.ChargesHeaderNo'))# </span>*@
                                            <span style="float:right">#=kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}", myCustomFunction(data.charges,'@item.ChargesHeaderNo'))# </span>
                                        </td>
                                    </text>
                                }
                                <td role="gridcell">
                                    @*<span style="float:right">#= kendo.format("{0:n}", NetAmount)# </span>*@
                                    <span style="float:right">#=kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}",NetAmount) # </span>

                                </td>
                                @foreach (var item in Model.Where(x => x.ChargesHeaderNo == "VTD"))
                                {
                                    <text>

                                        <td role="gridcell">
                                            @*#= myCustomFunction(data.charges,'@item.ChargesHeaderNo')#*@
                                            @*<span style="float:right">#= kendo.format("{0:n}", myCustomFunction(data.charges,'@item.ChargesHeaderNo'))# </span>*@
                                            <span style="float:right">#=kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}",myCustomFunction(data.charges,'@item.ChargesHeaderNo'))# </span>
                                        </td>
                                    </text>
                                }
                              
                                <td role="gridcell">
                                    @*<span style="float:right">#= kendo.format("{0:n}", InvoiceAmount)# </span>*@
                                    <span style="float:right">#=kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}",InvoiceAmount) # </span>

                                </td>
                            </tr>
                        </script>
                        <script id="altRowTemplate" type="text/x-kendo-tmpl">
                            <tr class="k-alt k-master-row" data-uid="#: uid #" role="row">
                                #= new Array(this.group().length + 1).join('<td class="k-group-cell"></td>') #

                                <td role="gridcell">
                                    <span>#:CustomerName# </span>

                                </td>
                                <td role="gridcell">
                                    #:VatNo#
                                </td>
                                <td role="gridcell">
                                    @*<span style="float:right">#= kendo.format("{0:n}", GrossAmount)# </span>*@
                                    <span style="float:right">#= kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}", GrossAmount)#</span>

                                </td>
                                @foreach (var item in Model.Where(x => x.ChargesHeaderNo != "VTD"))
                                {
                                    <text>

                                        <td role="gridcell">
                                            @*#= myCustomFunction(data.charges,'@item.ChargesHeaderNo')#*@
                                            @*<span style="float:right">#= kendo.format("{0:n}", myCustomFunction(data.charges,'@item.ChargesHeaderNo'))# </span>*@
                                            <span style="float:right">#= kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}", myCustomFunction(data.charges,'@item.ChargesHeaderNo'))# </span>
                                        </td>
                                    </text>
                                }
                                <td role="gridcell">
                                    @*<span style="float:right">#= kendo.format("{0:n}", NetAmount)# </span>*@
                                    <span style="float:right">#= kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}", NetAmount)# </span>

                                </td>
                                @foreach (var item in Model.Where(x => x.ChargesHeaderNo == "VTD"))
                                {
                                    <text>

                                        <td role="gridcell">
                                            @*#= myCustomFunction(data.charges,'@item.ChargesHeaderNo')#*@
                                            @*<span style="float:right">#= kendo.format("{0:n}", myCustomFunction(data.charges,'@item.ChargesHeaderNo'))# </span>*@
                                            <span style="float:right">#= kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}", myCustomFunction(data.charges,'@item.ChargesHeaderNo'))# </span>
                                        </td>
                                    </text>
                                }

                                <td role="gridcell">
                                    @*<span style="float:right">#= kendo.format("{0:n}", InvoiceAmount)# </span>*@
                                    <span style="float:right">#= kendo.format("{0:n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString()+"}", InvoiceAmount)# </span>

                                </td>

                            </tr>
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END PAGE CONTENT-->
</div>


<script src="@Scripts.Url("~/JS/DateFilter.js?V5")" type="text/javascript"></script>
<script src="@Scripts.Url("~/JS/dynamicReport.js?V2")" type="text/javascript"></script>
<script type="text/javascript">
    var fileMailSender = new ManualEmailSender({
            gridName: "grid",
            gridRefreshTriggerName: "RunQuery",
            reportName: "FinalSalesReport"
    });


</script>
<script type="text/javascript">
    var a = location.hash;
    var b = location.pathname;
    var url = (b + a);
    $(".active").removeClass();
    $("a[href='" + url + "']").parent().addClass("active");
    $("a[href='" + url + "']").parent().parent().slideDown("slow");

</script>
<script>
        //function myCustomFunction(arrey, header) {

        //    var result = $.grep(arrey, function (e) { return e.CHARGE_CODE === header; });

        //    var value = 0;
        //    if (result.length == 0) {

        //    } else if (result.length == 1) {
        //        value = result[0].CHARGE_AMOUNT
        //    }
        //    return value;
        //}
    var reportConfig = {};

    var reportConfig = GetReportSetting("SalesSummaryCustomerWise");

    function getDateFormat(date) {
        return kendo.format("{0:" + reportConfig.dateFormat + "}", date)
    }

        function myCustomFunction(arrey, header) {
            var result = $.grep(arrey, function (e) { return e.CHARGE_CODE === header; });

            var value = 0;
            if (result.length == 0) {

            } else if (result.length == 1) {
                value = result[0].CHARGE_AMOUNT
            }
            return value;
        }
        function myCustomFunctionWithTitle(arrey, header) {
            var result = $.grep(arrey, function (e) { return e.CHARGE_EDESC === header });//reviously heade.value
             
            var value = 0;
            if (result.length == 0) {

            } else if (result.length == 1) {
                value = result[0].CHARGE_AMOUNT
            }
            return value;
        }

        function ExportToExcel(e) {

            //Report header details
            var companyName = ('@workingContent.CurrentUserinformation.company_name');
            var fromADdate = $("#FromDateVoucher").val()
            var toADdate = $("#ToDateVoucher").val();
            var fromBSdate = $("#fromInputDateVoucher").val();
            var toBSdate = $("#toInputDateVoucher").val();
            var branches = ReportFilter.getBranchs();

            //create a footer row to display totals
            var footer = [];
            footer.push({ value: "Total", colSpan: 2, textAlign: "center", bold: true, })
            var footerTemp = e.workbook.sheets[0].rows[e.workbook.sheets[0].rows.length - 1].cells;
            for (var i = 0; i < footerTemp.length; i++) {
                if (typeof (footerTemp[i].value) != "undefined" && $(footerTemp[i].value).text() != "Total")
                    footer.push({ value: $(footerTemp[i].value).text(), textAlign: "right", bold: true, });
            }

            var SheetRow = [];

            SheetRow.push({
                cells: [
                        { value: "Customer Name", background: "#A9A7A6", },
                        { value: "Vat No", background: "#A9A7A6", },
                        { value: "Gross Amount", background: "#A9A7A6", },
                         @foreach (var item in Model.Where(x => x.ChargesHeaderNo != "VTD"))
                         {
                            <text>{ value: '@item.ChargesHeaderTitle', background: "#A9A7A6", },</text>
                         }

                        { value: "Net Amount", background: "#A9A7A6", },

                         @foreach (var item in Model.Where(x => x.ChargesHeaderNo == "VTD"))
                         {
                            <text>{ value: '@item.ChargesHeaderTitle', background: "#A9A7A6", },</text>
                         }

                        { value: "Invoice Amount", background: "#A9A7A6", },
                ],
            });

            WriteData(e.data);

            //recursive function to write the grouped/ungrouped data
            function WriteData(array) {
                array.forEach(function (row, index) {
                    if (typeof (row.items) != "undefined") { //if array contains nested items, write a row with group field and enter recursion
                        SheetRow.push({
                            cells: [{
                                value: row.field + " : " + row.value,
                                background: "#E1E1E1",
                                colSpan: footerTemp.length,//to span the total number of columns
                                fontSize: 12,
                            }]
                        });
                        WriteData(row.items);
                    }
                    else { //if array contains no nested items write the row to excelsheet
                        SheetRow.push({
                            cells: [{
                                value: row.CustomerName,
                            }, {
                                value: row.VatNo,
                            }, {
                                value: row.GrossAmount.toFixed(2), textAlign: "right",
                            },

                            @foreach (var item in Model.Where(x => x.ChargesHeaderNo != "VTD"))
                        {
                            <text>
                                    {
                                        value: myCustomFunctionWithTitle(row.charges, '@item.ChargesHeaderTitle').toFixed(2), textAlign: "right",
                                    },
                                    </text>
                            }

                                {
                                    value: row.NetAmount.toFixed(2), textAlign: "right",
                                },

                            @foreach (var item in Model.Where(x => x.ChargesHeaderNo == "VTD"))
                            {
                                <text>
                                        {
                                            value: myCustomFunctionWithTitle(row.charges, '@item.ChargesHeaderTitle').toFixed(2), textAlign: "right",
                                        },
                                        </text>
                            }
                                {
                                    value: row.InvoiceAmount.toFixed(2), textAlign: "right",
                                }]
                        });
                    }
                });
            }

            //push the footer variable containing total values
            SheetRow.push({
                cells: footer,
            });

            //pushing Report header details
            SheetRow.unshift({
                cells: [{ value: "Party Wise VAT Sales Summary Report".split('').join(' '), colSpan: footerTemp.length }]
            });
            //SheetRow.unshift({
            //    cells: [{ value: "From :- " + fromADdate + "(" + fromBSdate + ")" + "\t To :- " + toADdate + "(" + toBSdate + ")", colSpan: footerTemp.length }]
            //});
            //for (var companyCount = 0; companyCount < branches.length; companyCount++) {
            //    SheetRow.unshift({
            //        cells: [{ value: branches[companyCount].Company + " :- " + branches[companyCount].Branches.join(','), colSpan: footerTemp.length }]
            //    });
            //}
            //SheetRow.unshift({
            //    cells: [{ value: companyName.split('').join(' '), colSpan: footerTemp.length }]
            //});
            var filterText = $("#AdvanceFilter").attr('data-original-title');
            if (filterText.indexOf('|') < 0) {
                filterText = $((filterText).replace(/<strong>/g, "|")).text().replace('|', '').split('|').reverse();;
                $.each(filterText, function (k, item) {
                    SheetRow.unshift({
                        cells: [{ value: item, colSpan: footerTemp.length }]
                    });
                });
            }
            if (filterText.toString().indexOf('Date Range') < 0) {
                SheetRow.unshift({
                    cells: [{ value: "From :- " + fromADdate + "(" + fromBSdate + ")" + "\t To :- " + toADdate + "(" + toBSdate + ")", colSpan: footerTemp.length }]
                });
            }
            for (var companyCount = 0; companyCount < branches.length; companyCount++) {
                SheetRow.unshift({
                    cells: [{ value: branches[companyCount].Company + " :- " + branches[companyCount].Branches.join(','), colSpan: footerTemp.length }]
                });
            }
            SheetRow.unshift({
                cells: [{ value: companyName.split('').join(' '), colSpan: footerTemp.length }]
            });
            //initializing a workbook
            var Workbook = new kendo.ooxml.Workbook({
                sheets: [{
                    columns: [
                        { width: 250 },
                        @for(int i=0;i<(Model.Where(x => x.ChargesHeaderNo != "VTD").Count()+ Model.Where(x => x.ChargesHeaderNo == "VT").Count() + 4); i++)
                        {
                            <text>{ autoWidth: true },</text>
                        }
                    ],
                    rows: SheetRow
                }]
            });
            //finally saving the excel sheet
            kendo.saveAs({
                dataURI: Workbook.toDataURL(),
                fileName: "Party Wise Vat Sales Report.xlsx"
            });
        }
        //function GetDecimalPlaces()
        //{
        //    var filters = ReportFilter.filterAdditionalData();
        //    var decimalPlaces = ReportFilter.parseDecimalPlace(filters.ReportFilters.AmountRoundUpFilter);
        //    return decimalPlaces;
    //}
     var urltest = window.location.protocol + "//" + window.location.host +"/api/SalesHome/GetSalesVatRegisterSummaryReport";
        $(".applydp").on("click", function (evt) {
            evt.preventDefault();
            $("#RunQuery").trigger("click");
        })

        $("#loadAdvancedFilters").on("click", function (evt) {
            evt.preventDefault();
            $("#RunQuery").trigger("click");
        })

        $(document).ready(function () {

            DateFilter.init(function () {
                  consolidate.init(function () {
                    BindGrid(urltest);
                });
            });

           

            $("#RunQuery").click(function(evt){
                evt.preventDefault();                
                KendoGridRefresh(urltest);
            });

            fileMailSender.init();
            //BindGrid(urltest);
        });

        function BindGrid(readurl) {

            readurl = readurl == undefined ? urltest : readurl;
            reportConfig = GetReportSetting("SalesSummaryCustomerWise");
            var dataSource = new kendo.data.DataSource({
                type: "json",
                transport: {
                    read: {
                        url: readurl, // <-- Get data from here.
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {

                        var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                        //  paramMap.formDate = $("#FromDateVoucher").val();
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;

                    }
                },
                error: function (e) {
                    displayPopupNotification("Sorry error occured while processing data", "error");
                },
                serverFiltering: true,
                serverSorting:true,
                serverGrouping: false,
                serverAggregates: true,
                schema: {
                    data: "gridSalesVatReport", // records are returned in the "data" field of the response
                    total: "total", // total number of records is in the "total" field of the response
                    aggregates: "AggregationResult",//
                    model: {
                        fields: {
                            CustomerName: { type: "string" },
                            VatNo: { type: "string" },
                            GrossAmount: { type: "number" },
                            Discount: { type: "number" },
                            NetAmount: { type: "number" },
                            Vat: { type: "number" },
                            InvoiceAmount: { type: "number" },
                        }
                    }
                },


                aggregate: [
                      
                      { field: "NetAmount", aggregate: "sum" },
                      { field: "InvoiceAmount", aggregate: "sum" },
                      { field: "GrossAmount", aggregate: "sum" },
                      { field: "Quantity", aggregate: "sum" },
                      @foreach (var item in Model)
                      {
                          <text>
                               {
                                   field: '@item.ChargesHeaderNo',
                                   aggregate:"sum"
                               },
                        </text>
                      }

                ],
                serverPaging: true,

                pageSize: reportConfig.defaultPageSize,
            });
               var grid= $("#grid").kendoGrid({
                   dataSource: dataSource,
                   toolbar: kendo.template($("#toolbar-template").html()),
                   excel: {
                       fileName: "Party Wise Vat Sales Report",
                       //proxyURL: "//demos.telerik.com/kendo-ui/service/export",
                       allPages: true
                   },

                   //excel function
                   excelExport: function (e) {

                       ExportToExcel(e);
                       e.preventDefault();

                       //var sheet = e.workbook.sheets[0];
                       //var datasource = $("#grid").data("kendoGrid");
                       ////var data = datasource.dataSource.data().fetch();
                       //var data = e.data;
                        
                       //var heardervalue = [];
                       ////for (var i = 0; i < sheet.rows.length; i++)
                       ////{
                       ////heardervalue = sheet.rows[0].cells;
                       ////}


                       //heardervalue = sheet.rows[0].cells;
                       //for (var i = 0; i < sheet.rows.length; i++) {
                       //    // sheet.rows[i].cells.reverse();

                       //    for (var ci = 0; ci < sheet.rows[i].cells.length; ci++) {

                       //        //  if (sheet.rows[i].cells[ci].value==)
                       //        if (typeof (sheet.rows[i].cells[ci].value) == "undefined") {
                       //            var index = i - 1;
                       //            var headername = heardervalue[ci];

                       //            if (typeof (data[index]) != "undefined") {
                                        

                       //                var charges = data[index].charges;
                       //                var test = myCustomFunctionWithTitle(charges, headername);
                       //                sheet.rows[i].cells[ci].value = test;
                       //            }

                       //        }
                       //        if (i == sheet.rows.length - 1) {

                       //            sheet.rows[i].cells[ci].value = $(sheet.rows[i].cells[ci].value).text();
                       //        }


                       //        // console.log("abc");
                       //        // sheet.rows[i].cells[ci].hAlign = "right";
                       //    }
                       //}

                       //var rows = e.workbook.sheets[0].rows;
                       //rows.unshift({
                       //    height: 20,
                       //    cells: [{
                       //        value: "Party wise VAT Sales Summary Report".split('').join(' '),
                       //        //background: "#FFFFFF",
                       //        //textAlign: "center",
                       //        colSpan: 10,
                       //        fontSize: 12,
                       //    }]
                       //});
                       //rows.unshift({
                       //    height: 20,
                       //    cells: [{
                       //        value: "From :- " + fromADdate + "(" + fromBSdate + ")" + "\t To :- " + toADdate + "(" + toBSdate + ")",
                       //        //background: "#FFFFFF",
                       //        //textAlign: "center",
                       //        colSpan: 10,
                       //        fontSize: 12,
                       //    }]
                       //});
                       //for (var companyCount = 0; companyCount < branches.length; companyCount++) {
                       //    rows.unshift({
                       //        height: 20,
                       //        cells: [{
                       //            value: branches[companyCount].Company + " :- " + branches[companyCount].Branches.join(','),
                       //            //background: "#FFFFFF",
                       //            //textAlign: "center",
                       //            colSpan: 10,
                       //            fontSize: 12,

                       //        }]
                       //    });
                       //}
                       //rows.unshift({
                       //    height: 20,
                       //    cells: [{
                       //        value: companyName.split('').join(' '),
                       //        //background: "#FFFFFF",
                       //        //textAlign: "center",
                       //        colSpan: 10,
                       //        fontSize: 12,
                       //    }]
                       //});

                   },
                   pdf: {
                       allPages: true,
                       avoidLinks: true,
                       paperSize: "A4",
                       margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
                       landscape: true,
                       repeatHeaders: true,
                       width: "500px",
                       scale: 0.8
                   },
                   height: window.innerHeight - 50,
                sortable: true,
                reorderable: true,
                groupable: true,
                resizable: true,


                filterable: {    
                    extra: false,   
                    operators: {   
                        number: {

                            eq: "Is equal to",
                            neq: "Is not equal to",
                            gte: "is greater than or equal to	",
                            gt: "is greater than",
                            lte: "is less than or equal",
                            lt: "is less than",

                        },



                        string: {

                            eq: "Is equal to",
                            neq: "Is not equal to",
                            startswith: "Starts with	",
                            contains: "Contains",
                            doesnotcontain: "Does not contain",
                            endswith: "Ends with",
                        }
                    }
                },



               columnMenu: true,
               columnMenuInit: function (e) {                   
                    wordwrapmenu(e);                                         
                    checkboxItem = $(e.container).find('input[type="checkbox"]');                   
                },
                columnShow: function (e) {                    
                    if($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                        SaveReportSetting('SalesSummaryCustomerWise', 'grid');
                },
                columnHide: function (e) {                  
                    if($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                        SaveReportSetting('SalesSummaryCustomerWise', 'grid');
                },
                pageable: {
                    refresh: true,
                    pageSizes: reportConfig.itemPerPage,
                    buttonCount: 5
                },
                scrollable: {
                    virtual: true
                },
                rowTemplate: $.proxy(kendo.template($("#rowTemplate").html()), dataSource),
               altRowTemplate: $.proxy(kendo.template($("#altRowTemplate").html()), dataSource),
                dataBound: function (o) {
                    var grid = o.sender;
                    //$(o.sender.wrapper).find('tbody')
                    //       .find('.k-footer-template')
                    //       .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="5" class="no-data">Total Amount(</td></tr>');
                    if (grid.dataSource.total() == 0) {
                        var colCount = grid.columns.length;
                        $(o.sender.wrapper)
                            .find('tbody')
                            .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                    }
                    else {
                        var g = $("#grid").data("kendoGrid");
                        for (var i = 0; i < g.columns.length; i++) {
                            g.showColumn(i);
                        }
                        $("div.k-group-indicator").each(function (i, v) {
                            g.hideColumn($(v).data("field"));
                        });
                    }
                    $('div').removeClass('.k-header k-grid-toolbar');
                     UpdateReportUsingSetting("SalesSummaryCustomerWise", "grid");
                },
                columns: [
                                {
                                    field: "CustomerName",
                                    title: "Customer Name",

                                },
                              {
                                  field: "VatNo",
                                  title: "Vat No",
                                  footerTemplate: "<span>Total</span>"
                              },
                              {
                                  field: "GrossAmount",
                                  title: "Gross Amount",
                                  attributes: {
                                      style: "text-align: center;"
                                  },
                                  format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}",
                                  aggregates: ["sum"],
                                  groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                  footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>'
                                  
                              },
                               @foreach (var item in Model.Where(x => x.ChargesHeaderNo != "VTD"))
                          {
                              <text>
                   {
                       field: '@item.ChargesHeaderNo',
                       title: '@item.ChargesHeaderTitle',
                       attributes: {
                           style: "text-align: right;"
                       },
                       filterable:false,
                       groupable: false,
                       format: "{0:n5}",
                       footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>'
                   },
                  </text>
                          }
                               {
                                   field: "NetAmount",
                                   title: "Net Amount",
                                   attributes: {
                                       style: "text-align: center;"
                                   },
                                   filterable:false,
                                   aggregates: ["sum"],
                                   groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                //   groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n")#</span>',
                                 //  footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n")#</span>',
                                   format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}",
                                   footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>'
                               },
                                @foreach (var item in Model.Where(x => x.ChargesHeaderNo == "VTD"))
                           {
                               <text>
                    {
                        field: '@item.ChargesHeaderNo',
                        title: '@item.ChargesHeaderTitle',
                        groupable: false,
                        attributes: {
                            style: "text-align: right;"
                        },
                        filterable:false,
                        format: "{0:n5}",
                        footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>'
                    },
                   </text>
                           }
                               {
                                   field: "InvoiceAmount",
                                   title: "Invoice Amount",
                                   attributes: {
                                       style: "text-align: center;"
                                   },
                                   filterable:false,
                                   aggregates: ["sum"],
                                   groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>',
                                //   groupFooterTemplate: '<span style="float:right"> #=kendo.toString(sum, "n")#</span>',
                                 //  footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n")#</span>',
                                   format: "{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}",
                                   footerTemplate: '<span style="float:right">#= kendo.toString(sum, "n"+ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString())#</span>'
                               }

                ]

         });
         //$("#grid").kendoTooltip({
         //   filter: "td:nth-child(2)", //this filter selects the first column cells
         //    position: "right",
         //    content: function (e) {

         //        var dataItem = $("#grid").data("kendoGrid").dataItem(e.target.closest("tr"));
         //        var content = dataItem.subclass.SALES_NO.Text;
         //        return content;
         //    }
         //}).data("kendoTooltip");
        };

        function KendoGridRefresh(readUrl) {
            $('#grid').val('');
            $('#grid').html('');
            BindGrid(readUrl)
        }
</script>