@using NeoErp.Core.Models;
@{
    var actionPageId = "AreaWiseSalesCollectionPartial";
}
<style>
    ul.dropdown-menu.custom {
        margin-top: 8px !important;
        border: none;
        box-shadow: none !important;
    }

    .dropdown-menu.custom:before {
        left: 58px !important;
    }

    .download-btn {
        margin: 0px !important;
        padding-top: -2px !important;
        padding-left: 0px;
        padding-right: 0px;
        margin-top: -5px !important;
        margin-left: 5px !important;
    }

    .dropdown-menu.custom {
        left: -27px !important;
        top: 20px !important;
    }

    .dropdown > .dropdown-menu:before, .dropdown-toggle > .dropdown-menu:before, .btn-group > .dropdown-menu:before {
        position: absolute;
        top: -8px;
        left: 30px;
        right: auto;
        display: inline-block !important;
        border-right: 8px solid transparent;
        border-bottom: 8px solid #e0e0e0;
        border-left: 8px solid transparent;
        content: '';
    }

    i.icon-arrow-down {
        color: #acacac;
    }

    .btn-group-custom button.btn {
        padding: 7px 7px !important;
        float: left;
    }

    .dropdown-menu.custom {
        left: -55px !important;
    }

    a.SecondbtnDatagrid {
        color: #acacac !important;
    }
</style>
<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-bar-chart"></span> Area wise Sales/Collection Chart</h4>
            </div>
            <div class="modal-body bottom-gappingtwo form-horizontal">
                <div class="row">
                    <div class="AreaWisesales-col clearfix">
                        <div class="btn-group sales-collection-options_AreaWise responsivegap col-sm-12 col-md-12" data-toggle="buttons" data-type="chart">
                            <button type="button" class="btn btn-sm default red-stripe">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeColumn" name="seriesType_SalesCollection_AreaWise"
                                       type="radio" value="column" checked="checked" autocomplete="off" />column
                            </button>
                            <button type="button" class="btn btn-sm default green-stripe">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeBar" name="seriesType_SalesCollection_AreaWise"
                                       type="radio" value="bar" autocomplete="off" />bar
                            </button>
                            <button type="button" class="btn btn-sm default purple-stripe">
                                <i class="fa fa-line-chart"></i>
                                <input id="typeLine" name="seriesType_SalesCollection_AreaWise"
                                       type="radio" value="line" autocomplete="off" />Line
                            </button>
                            @*<button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-area-chart"></i>
                                    <input id="typearea" name="seriesType_SalesCollection_AreaWise"
                                           type="radio" value="area" autocomplete="off" />area
                                </button>*@
                        </div>
                        @*<div class="col-md-2">*@<!-- Data-Grid Show button-->
                        @*<button type="button" class="btn btn-sm default blue-stripe btnDatagrid pull-right" onclick="LoadDataGrid_AreaWiseSalesCollectionPartial();" data-grid="Chart">
                                DataGrid
                            </button>*@
                        @*</div>*@
                        <div class="col-md-6">

                            <div class="clearfix">
                                <h5> Choose Value Field</h5>
                            </div>
                            <div>
                                <!-- show labels & inStack option-->
                                <div class="input-group">
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showlables_AreaWiseSalesCollection" type="checkbox" autocomplete="off" /> Show Labels
                                        </label>
                                        <label>
                                            <input id="salesCollectionInStack_AreaWise" type="checkbox" /> Stack
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                
                
                        <div class="filter_title">
                            <label class="filter-label">Advance Filter</label>
                        </div>

                        @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = true,
                       ShowProductFilter = false,
                       ShowPartyTypeFilter = false,
                       ShowCategoryFilter = false,
                       ShowLocationFilter = false,
                       ShowDocumentFilter = false,
                       ShowCompanyFilter = false,
                       ShowBranchFilter = false,
                       ShowDivisionFilter = true,
                       IsPopUp = false,
                       ShowAreaFilter=false,
                       ActionPageId = actionPageId
                   })
               

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn default" data-dismiss="modal">Close</button>*@
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="portlet portlet-sortable  light bordered" id="AreaWiseSalesCollectionPartial">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">Branchwise Sales Vs Collection </span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            @*<a class="btnDatagrid" href="javascript:;" onclick="LoadDataGrid_AreaWiseSalesCollectionPartial();" data-grid="Chart" title="Data grid">*@
            <a class="btnGrid SecondbtnDatagrid" data-type="Chart" data-title="Grid">
                <i class="fa fa-table"></i>
            </a>
            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down Thirdcustom"></i>
                </a>
                <ul class="dropdown-menu custom">
                    <div class="btn-group-custom">
                        <button type="button" data-id="SalesCollectionChart_AreaWise" class="export-pdf btn default red-stripe"><i class="fa fa-file-pdf-o"></i>PDF</button>
                        <button type="button" data-id="SalesCollectionChart_AreaWise" class="export-img btn default blue-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="SalesCollectionChart_AreaWise" class="export-svg btn default green-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config"></a>
            <a href="javascript:;" class="reload"></a>
            <a href="javascript:;" class="fullscreen"></a>
            <a href="javascript:;" class="remove"></a>
        </div>
    </div>
    <div class="portlet-body">
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="SalesCollectionChart_AreaWise">AreaWise Sales Vs Collection</div>
            <div class="overlay"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>
    <script>

        var toggleFlag_AreaWiseSalesCollectionPartial = true;
        var dataProvider = [];
        var series = [{
            field: "Sales",
            name: "Sales"
        }, {
            field: "Collection",
            name: "Collection"
        }];
        var IsStack = false;
        var colors = ["#428bca", "#da3b36", "#e67d4a", "#5bc0de", "#5cb85c", "#f2b661"];

        $('#SalesCollectionChart_AreaWise').closest('.portlet').find('.reload').click(function () {
            // var urlData = "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=";
            createAreaWiseSalesCollectionChart();
            RefreshChartFilterControl('@actionPageId');
        });

        $('#SalesCollectionChart_AreaWise').closest('.portlet').find('.fullscreen').click(function () {
            if ($(this).hasClass("on")) {
                $("#SalesCollectionChart_AreaWise").data("kendoChart").options.chartArea.height = 350;
            }
            else {
                $("#SalesCollectionChart_AreaWise").data("kendoChart").options.chartArea.height = 550;
            }
            $("#SalesCollectionChart_AreaWise").data("kendoChart").dataSource.read();
            $("#SalesCollectionChart_AreaWise").data("kendoChart").refresh();
        });
        $('#SalesCollectionChart_AreaWise').closest('.portlet').find('.config').click(function () {
            $(this).closest('.portlet').css('zIndex', 10040);
        });
        $('#SalesCollectionChart_AreaWise').closest('.portlet').find('.icon-arrow-down').click(function () {
            $(this).closest('.portlet').css('zIndex', 10040);
        });
        function shortLabels(value) {
            return kendo.toString((value / 100000000), "\\ #") + "k";
        }



        function createAreaWiseSalesCollectionChart(urlData) {
            urlData = (urlData == undefined) ? "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=" : urlData;
            var mainUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesCollectionAreaWiseReport";
            var IsDataGrid = $('.SecondbtnDatagrid').data("type");
            reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
             

            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: mainUrl + urlData, // <-- Get data from here.
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, reportFilter));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },
                requestStart: function () {
                    if (IsDataGrid != "Grid") {
                        kendo.ui.progress($("#SalesCollectionChart_AreaWise"), true);
                    }
                },
                requestEnd: function () {
                    kendo.ui.progress($("#SalesCollectionChart_AreaWise"), false);
                },
                sort: {
                    field: "BranchName",
                    dir: "asc"
                },
                serverSorting: false,
                serverPaging: false,
                serverFiltering: false,
                pageSize: 20,
            });
            dataProvider = dataSource;



            //var IsDataGrid = $("input[name=salesCollectionIn_DataGrid]").prop("checked");
            // data-grid set option on ceate funciton
            $("#AreaWiseSalesCollectionPartial .DisplayFilterContent a").text("");

            if (IsDataGrid == "Grid") {
                LoadDataGrid_AreaWiseSalesCollectionPartial(dataSource);
                return;
            }

            $("#SalesCollectionChart_AreaWise").kendoChart({
                chartArea: {
                    height: $("#AreaWiseSalesCollectionPartial").hasClass("portlet-fullscreen") ? 550 : 350,
                },
                onDrag: function (e) {
                    var chart = e.sender;
                    var ds = chart.dataSource;
                    var options = chart.options;

                    var categoryRange = e.axisRanges.CategoryAxis;

                    if (categoryRange) {
                        var xMin = categoryRange.min;
                        var xMax = categoryRange.max;

                        options.categoryAxis.min = xMin;
                        options.categoryAxis.max = xMax;

                        ds.filter(viewModel.getFilter(xMin, xMax));
                    }
                },
                legend: {
                    position: "bottom"
                },
                seriesDefaults: {
                    //type: "column",
                    type: $("input[name=seriesType_SalesCollection_AreaWise]:checked").val(),
                    style: "smooth",
                    stack: $("#salesCollectionInStack_AreaWise").prop("checked"),
                    labels: {
                        visible: $("#showlables_AreaWiseSalesCollection").prop("checked"),
                        template: "#= FormatLabels(value)#",
                        rotation: '270',
                        padding: {
                            left: -5
                        },
                    },
                },
                dataSource: dataProvider,

                pannable: {
                    lock: "y"
                },
                zoomable: {
                    mousewheel: {
                        lock: "y"
                    },
                    selection: {
                        lock: "y"
                    }
                },
                series: series,
                valueAxis: {
                    line: {
                        visible: true,
                    },
                    labels: {
                        rotation: 'auto',
                        template: "#= FormatLabels(value)#"
                    },
                    title: { text: amountFigureType }
                },
                seriesColors: colors,
                categoryAxis: {
                    field: "BranchName",
                    labels: {
                        rotation: -45,
                    },
                },
                tooltip: {
                    visible: true,
                    format: "{0}",
                    template: "#= category #: \n #= FormatLabels(value)#"
                },
                dataBound: function (e) {
                    var data = e.sender.dataSource.view();
                    var fieldtype = e.sender.options.series[0].field
                    var max = getMaxValueFromDataSource(e);
                    var majorunit = Math.max(10, max / 10);
                    e.sender.options.valueAxis.majorUnit = majorunit;
                    e.sender.options.valueAxis.max = max + majorunit;
                    $("#SalesCollectionChart_AreaWise").next(".overlay").toggle(max <= 0);

                },
            });
        }


        $(document).ready(function () {
            $('[title="Download"]').tooltip({
                trigger: 'hover'
            });
            $('.icon-arrow-down.Thirdcustom').click(function () {
                $('.dropdown-menu.custom.Thirdslidetoggle').slideToggle(200);
            });
            $("checkbox").not("#salesCollectionInStack_AreaWise").uniform();
            createAreaWiseSalesCollectionChart();
            $(document).bind("kendo:skinChange", createAreaWiseSalesCollectionChart);
            $(".sales-collection-options_AreaWise").bind("change", function () {  // data-grid toogle chart option in data-grid attribute in button
                if ($('.SecondbtnDatagrid').data("type") == "Chart")
                    refreshAreaWiseSalesCollectionChart();
                else
                    chart_grid_option_change("SecondbtnDatagrid", "createAreaWiseSalesCollectionChart");
            });
            $("#showlables_AreaWiseSalesCollection").bind("change", function () {// data-grid toogle chart option in data-grid attribute in button
                var temp = $('.SecondbtnDatagrid').data("type");
                $('.SecondbtnDatagrid').data("type", "temp");
                refreshAreaWiseSalesCollectionChart()
                $('.SecondbtnDatagrid').data("type", temp);
            });
            $('#salesCollectionInStack_AreaWise').on('click', function () {// data-grid toogle chart option in data-grid attribute in button
                var temp = $('.SecondbtnDatagrid').data("type");
                $('.SecondbtnDatagrid').data("type", "temp");
                refreshAreaWiseSalesCollectionChart()
                $('.SecondbtnDatagrid').data("type", temp);
            });

        });

        function refreshAreaWiseSalesCollectionChart() {
            if ($(".SecondbtnDatagrid").data("type") == "Grid")// data-grid toogle chart option in data-grid attribute in div
            {
                $(".SecondbtnDatagrid").data("type", "Chart");
                createAreaWiseSalesCollectionChart();
                return;
            }
            var chart = $("#SalesCollectionChart_AreaWise").data("kendoChart"),
                type = $("input[name=seriesType_SalesCollection_AreaWise]:checked").val(),
                stack = $("#salesCollectionInStack_AreaWise").prop("checked"),
                IsLebelShow = $("#showlables_AreaWiseSalesCollection").prop("checked");

            for (var i = 0, length = series.length; i < length; i++) {
                series[i].stack = stack;
                series[i].type = type;
            };

            chart.setOptions({
                series: series,
            });
            chart.options.series[0].labels.visible = IsLebelShow;
            chart.options.series[1].labels.visible = IsLebelShow;
            if (type == "column") {
                chart.options.series[0].labels.rotation = -90;
                chart.options.series[1].labels.rotation = -90;
            }
            if (type == "bar") {
                chart.options.series[0].labels.rotation = 0;
                chart.options.series[1].labels.rotation = 0;
            }
            chart.refresh();
        }
        var filtertext_branchsalescollection = $("#" + '@actionPageId' + " .DisplayFilterContent a").text();
        $('#apply_@actionPageId').click(function () {
             
            @*var status_of_filtertext = $("#" + '@actionPageId' + " .DisplayFilterContent a").text();
            var IsFilterChanged = false;
            if (filtertext_branchsalescollection !== status_of_filtertext) {
                IsFilterChanged = true;
                filtertext_branchsalescollection = status_of_filtertext;
            }*@
            //ChartFilter('@actionPageId', "createAreaWiseSalesCollectionChart",IsFilterChanged);
            ChartFilter('@actionPageId', "createAreaWiseSalesCollectionChart");
        });



        //LoadDataGrid function for data-grid
        function LoadDataGrid_AreaWiseSalesCollectionPartial(dataSource, monthField) {
            $('.SecondbtnDatagrid').data("type", "Grid");
            $("#SalesCollectionChart_AreaWise").html('');
            $("#SalesCollectionChart_AreaWise").kendoGrid({
                dataSource: dataSource == undefined ? $("#SalesCollectionChart_AreaWise").data("kendoChart").dataSource : dataSource,
                height: $("#AreaWiseSalesCollectionPartial").hasClass("portlet-fullscreen") ? 550 : 350,
                groupable: false,
                sortable: true,
                toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                excel: {
                    fileName: "AreaWise Sales VS Collection Report",
                    allPages: true
                },
                columns: [{
                    field: "BranchName",
                    title: "BranchName",
                    width: 240
                }, {
                    field: "Sales",
                    title: "Sales",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }, {
                    field: "Collection",
                    title: "Collection",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }]
            });
        }

        function SecondChartData() {
            var urlData = "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=";
            $('.SecondbtnDatagrid').data("type", "Chart");
            createAreaWiseSalesCollectionChart(urlData);
            RefreshChartFilterControl('@actionPageId');
        };


        $(".SecondbtnDatagrid").click(function () {
            $('.SecondbtnDatagrid').data("type") == "Chart" ? LoadDataGrid_AreaWiseSalesCollectionPartial() : SecondChartData();
            $("i", this).toggleClass("icon-bar-chart");
        });
        //Export 
        $(".export-pdf").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({

                    dataURI: data,
                    fileName: filename + ".pdf",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        $(".export-img").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportImage().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".png",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export",

                });
            });
        });

        $(".export-svg").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportSVG().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".svg",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });
    </script>
</div>
