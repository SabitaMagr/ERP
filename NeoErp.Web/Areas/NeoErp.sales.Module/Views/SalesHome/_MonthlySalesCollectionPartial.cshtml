@using NeoErp.Core.Models;
@{
    var actionPageId = "MonthlySalesCollectionPartial";
}

<style>
    .checkbox input[type=checkbox], .checkbox-inline input[type=checkbox], .radio input[type=radio], .radio-inline input[type=radio] {
        margin-left: -10px !important;
    }

    ul.dropdown-menu.custom {
        margin-top: 8px !important;
        border: none;
        box-shadow: none !important;
    }

    .dropdown-menu.custom:before {
        left: 58px !important;
    }

    .download-btn {
        margin: 0px !important;
        padding-top: -2px !important;
        padding-left: 0px;
        padding-right: 0px;
        margin-top: -5px !important;
        margin-left: 5px !important;
    }

    .dropdown-menu.custom {
        left: -27px !important;
        top: 20px !important;
    }

    .dropdown > .dropdown-menu:before, .dropdown-toggle > .dropdown-menu:before, .btn-group > .dropdown-menu:before {
        position: absolute;
        top: -8px;
        left: 30px;
        right: auto;
        display: inline-block !important;
        border-right: 8px solid transparent;
        border-bottom: 8px solid #e0e0e0;
        border-left: 8px solid transparent;
        content: '';
    }

    i.icon-arrow-down {
        color: #acacac;
    }

    .btn-group-custom button.btn {
        padding: 7px 7px !important;
        float: left;
    }

    .dropdown-menu.custom {
        left: -55px !important;
    }

    a.btnDataGrid_MonthlySalesCollectionPartial {
        color: #acacac !important;
    }
</style>
<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-bar-chart"></span> Monthly Sales Vs Collection</h4>
            </div>
            <div class="modal-body bottom-gappingtwo form-horizontal">
                <div class="row">
                    <div class="monthlysales-collection">
                        <div class="chart_button clearfix">
                            <div class="col-sm-12 col-md-12 btn-group sales-collection-options responsivegap" data-toggle="buttons">
                                <button type="button" class="btn btn-sm default red-stripe">
                                    <i class="fa fa-bar-chart"></i>
                                    <input id="typeColumn" name="seriesType_SalesCollection"
                                           type="radio" value="column" checked="checked" autocomplete="off" />column
                                </button>
                                <button type="button" class="btn btn-sm default green-stripe ">
                                    <i class="fa fa-bar-chart"></i>
                                    <input id="typeBar" name="seriesType_SalesCollection"
                                           type="radio" value="bar" autocomplete="off" />bar
                                </button>
                                <button type="button" class="btn btn-sm default purple-stripe">
                                    <i class="fa fa-line-chart"></i>
                                    <input id="typeLine" name="seriesType_SalesCollection"
                                           type="radio" value="line" autocomplete="off" />Line
                                </button>
                                @*<button type="button" class="btn btn-sm default blue-stripe ">
                                        <i class="fa fa-area-chart"></i>
                                        <input id="typearea" name="seriesType_SalesCollection"
                                               type="radio" value="area" autocomplete="off" />area
                                    </button>*@

                            </div>

                            <div class="col-md-12 col-sm-12">
                                <!-- show label & Stack option-->
                                <div class="input-group gapspace">
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showlables_monthlySalesCollection" type="checkbox" autocomplete="off" /> Show Labels
                                        </label>
                                        <label>
                                            <input id="salesCollectionInStack" type="checkbox" /> Stack
                                        </label>
                                        <label>
                                            <input type="radio" id="ADFormat" name="DateFormat_SalesCollection" checked="checked" value="AD" /> AD
                                        </label>
                                        <label>
                                            <input type="radio" id="BSFormat" name="DateFormat_SalesCollection" checked="checked" value="BS" /> BS
                                        </label>
                                        <label>
                                            <input id="showzerovalue_monthlySalesCollection" type="checkbox" autocomplete="off" /> Show Zero values series
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                   </div>

                    
                        <div class="filter_title">
                            <label class="filter-label">Advance Filter</label>
                        </div>
                        @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = false,
                       ShowProductFilter = false,
                       ShowPartyTypeFilter = false,
                       ShowCategoryFilter = false,
                       ShowLocationFilter = false,
                       ShowDocumentFilter = false,
                       ShowCompanyFilter = false,
                       ShowBranchFilter = true,
                       ShowDivisionFilter = true,
                       IsPopUp = false,
                       ActionPageId = actionPageId
                   })
                    

                </div>
        

            <div class="modal-footer">
                @*<button type="button" class="btn default" data-dismiss="modal">Close</button>*@
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="portlet portlet-sortable  light bordered" id="MonthlySalesCollectionPartial">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">Monthly Sales Vs Collection</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            <a class="btnGrid btnDataGrid_MonthlySalesCollectionPartial" data-type="Chart" data-title="Grid" data-categoryaxis="0">
                <i class="fa fa-table"></i>
            </a>
            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down Firstcustom"></i>

                </a>
                <ul class="dropdown-menu custom Firstslidetoggle">
                    <div class="btn-group-custom">
                        <button type="button" data-id="SalesCollectionChart" class="export-pdf btn default blue-stripe"><i class="fa fa-file-pdf-o"></i> PDF</button>
                        <button type="button" data-id="SalesCollectionChart" class="export-img btn default red-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="SalesCollectionChart" class="export-svg btn default green-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config">
            </a>
            <a href="javascript:;" class="reload">
            </a>
            <a href="javascript:;" class="fullscreen">
            </a>
            <a href="javascript:;" class="remove">
            </a>
        </div>
    </div>
    <div class="portlet-body">
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="SalesCollectionChart"></div>
            <div class="overlay"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>

    <script>

        var dataProvider = [];
        var series = [{
            field: "Sales",
            name: "Sales"
        }, {
            field: "Collection",
            name: "Collection"
        }];
        var IsStack = true;
        var colors = ["#428bca", "#da3b36", "#e67d4a", "#5bc0de", "#5cb85c", "#f2b661"];
        var toggleFlag_MonthlySalesCollectionPartial = true;

        $('#SalesCollectionChart').closest('.portlet').find('.reload').click(function () {           
            $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", "Chart");
            $("#SalesCollectionChart").data("kendoChart").options.categoryAxis.title.text = "";
            createMonthlySalesCollectionChart();
            RefreshChartFilterControl('@actionPageId');            
        });

        $('#SalesCollectionChart').closest('.portlet').find('.fullscreen').click(function () {
            if ($(this).hasClass("on")) {
                $("#SalesCollectionChart").data("kendoChart").options.chartArea.height = 350;
            }
            else {
                $("#SalesCollectionChart").data("kendoChart").options.chartArea.height = 550;
            }
            $("#SalesCollectionChart").data("kendoChart").dataSource.read();
            $("#SalesCollectionChart").data("kendoChart").refresh();
        });
        $('#SalesCollectionChart').closest('.portlet').find('.config').click(function () {
            $(this).closest('.portlet').css('zIndex', 10040);
        });

        $('#SalesCollectionChart').closest('.portlet').find('.icon-arrow-down').click(function () {
            $(this).closest('.portlet').css('zIndex', 10040);
        });


        function createMonthlySalesCollectionChart(urlData) {
            urlData = (urlData == undefined) ? "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=" : urlData;
            var dateformat = $("input[name=DateFormat_SalesCollection]:checked").val();
            var catagoryAxisName = "MonthYear", sortaxix = "NepaliMonth";
            if (dateformat == "BS") {
                catagoryAxisName = "NepaliMonth";
                sortaxix = "NepaliMonthInt"
            }
            $('.btnDataGrid_MonthlySalesCollectionPartial').data('categoryaxis', catagoryAxisName);
            var mainUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesCollectionMonthlyReport";
            var daywiseUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesCollectionDailyReport";
            var IsDataGrid = $('.btnDataGrid_MonthlySalesCollectionPartial').data("type");
            reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: mainUrl + "?DateFormat=" + dateformat + urlData.replace('?', '&'),
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, reportFilter));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },
                requestStart: function () {
                    if (IsDataGrid != "Grid") {
                        kendo.ui.progress($("#SalesCollectionChart"), true);
                    }
                },
                requestEnd: function () {
                    kendo.ui.progress($("#SalesCollectionChart"), false);
                },
                //sort: {
                //    field: sortaxix,
                //    dir: "asc"
                //},
                schema: {
                    parse: function (items) {

                        var item,
                            result = [];
                        var showzerovalue = $("#showzerovalue_monthlySalesCollection").prop("checked");

                        if (showzerovalue) {
                            for (var i = 0; i < items.length; i++) {
                                item = items[i];

                                result.push(item);

                            }

                        }
                        else {
                            for (var i = 0; i < items.length; i++) {
                                item = items[i];
                                if (item.Collection !== 0 && item.Sales !== 0) {
                                    result.push(item);
                                }
                            }
                        }


                        return result;
                    }
                }

            });
            dataProvider = dataSource;
            $("#MonthlySalesCollectionPartial .DisplayFilterContent a").text("");
            $(this).parent($("#SalesCollectionChart")).html('')
            $("#SalesCollectionChart").html('');
            // data-grid set option on ceate funciton
            if (IsDataGrid == "Grid") {
                LoadDataGrid_MonthlySalesCollectionPartial(dataSource);
                return;
            }
            LoadMonthlySalescollectionChart(dataSource);

        }

        function LoadMonthlySalescollectionChart(dataSource) {
            var daywiseUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesCollectionDailyReport";

            dataSource = dataSource == undefined ? $("#SalesCollectionChart").data("kendoChart").dataSource : dataSource
             var dateformat = $("input[name=DateFormat_SalesCollection]:checked").val();
            var catagoryAxisName = "MonthYear", sortaxix = "NepaliMonth";
            if (dateformat == "BS") {
                catagoryAxisName = "NepaliMonth";
                sortaxix = "NepaliMonthInt"
            }
            $('.btnDataGrid_MonthlySalesCollectionPartial').data('categoryaxis', catagoryAxisName);

            var monthField = 'acc_group';
            if (dataSource.data().length > 0)
            {
                if (dataSource.data()[0].Day != null)
                {
                    monthField = 'Day';
                   
                }                    
                else if (dataSource.data()[0].Month != null)
                {
                    monthField = 'Month';
                   
                }
                else
                {
                    monthField = 'acc_group';
                  
                }

            }
            $("#SalesCollectionChart").kendoChart({
                chartArea: {
                    height: $("#MonthlySalesCollectionPartial").hasClass("portlet-fullscreen") ? 550 : 350
                },
                legend: {
                    position: "bottom"
                },
                seriesDefaults: {
                    type: $("input[name=seriesType_SalesCollection]:checked").val(),
                    style: "smooth",
                    stack: $("#salesCollectionInStack").prop("checked"),
                    labels: {
                        visible: $("#showlables_monthlySalesCollection").prop("checked"),
                        template: "#= FormatSeriesLabels(value)#",
                        rotation: '270',
                        padding: {
                            left: -5
                        },
                    },
                },
                dataSource: dataSource,
                onDrag: function (e) {
                    var chart = e.sender;
                    var ds = chart.dataSource;
                    var options = chart.options;

                    var categoryRange = e.axisRanges.CategoryAxis;

                    if (categoryRange) {
                        var xMin = categoryRange.min;
                        var xMax = categoryRange.max;
                        options.categoryAxis.min = xMin;
                        options.categoryAxis.max = xMax;
                        ds.filter(viewModel.getFilter(xMin, xMax));
                    }
                },

                pannable: {
                    lock: "y"
                },
                zoomable: {
                    mousewheel: {
                        lock: "y"
                    },
                    selection: {
                        lock: "y"
                    }
                },
                series: series,
                valueAxis: {
                    line: {
                        visible: true,
                    },
                    labels: {
                        template: "#= FormatSeriesLabels(value)#"
                    },
                    title: { text: amountFigureType }
                },

                seriesColors: colors,
                categoryAxis: {
                    field: $('.btnDataGrid_MonthlySalesCollectionPartial').data('categoryaxis'),
                    labels: {
                        rotation: -45,
                    },
                },
                tooltip: {
                    visible: true,
                    format: "{0}",
                    template: "#= category #: \n #= FormatSeriesLabels(value)#"
                },
                dataBound: function (e) {
                    var maxValue = getMaxValueFromDataSource(e);
                    var majorunit = Math.max(6, maxValue / 6);
                    e.sender.options.valueAxis.majorUnit = majorunit;
                    e.sender.options.valueAxis.max = maxValue + majorunit;
                    $("#SalesCollectionChart").next(".overlay").toggle(maxValue <= 0);
                },
                seriesClick: function (e) {
                    $('.btnDataGrid_MonthlySalesCollectionPartial').data('categoryaxis', "day");
                    var dateformat = $("input[name=DateFormat_SalesCollection]:checked").val();
                    e.dataItem.Month = dateformat == "AD" ? e.dataItem.Month : e.dataItem.NepaliMonth;
                    if (e.dataItem.Month == undefined || e.dataItem.Month == null)
                        return false;
                    var dataSourcetest = new kendo.data.DataSource({
                        transport: {
                            read: {
                                url: daywiseUrl + "?monthName=" + e.dataItem.MonthInt + "&DateFormat=" + dateformat,
                                dataType: "json", // <-- The default was "jsonp".
                                type: "POST",
                                contentType: "application/json; charset=utf-8"
                            },
                            parameterMap: function (options, type) {
                                var paramMap = JSON.stringify($.extend(options, reportFilter));
                                delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                                delete paramMap.$format; // <-- remove format parameter.
                                return paramMap;
                            }
                        },
                        requestStart: function () {
                            kendo.ui.progress($("#SalesCollectionChart"), true);
                        },
                        requestEnd: function () {
                            kendo.ui.progress($("#SalesCollectionChart"), false);
                        },
                        sort: {
                            field: "day",
                            dir: "asc"
                        }
                    });
                    var chart = $("#SalesCollectionChart").data("kendoChart");

                    type = $("input[name=seriesType_SalesCollection]:checked").val(),
                    chart.options.series[0].field = "Sales";
                    chart.options.series[1].field = "Collection";
                    //chart.options.categoryAxis.field = "day";
                    chart.setOptions({
                        seriesColors: ["#5cb85c", "#da3b36", "#e67d4a", "#5bc0de", "#428bca", "#f2b661"],
                        categoryAxis: {
                            field: "day",
                            labels: {
                                rotation: -45,
                            },
                            title: { text: e.category }
                        },
                        tooltip: {
                            template: "day #= category #: \n #= FormatSeriesLabels(value)#"
                        },
                    });
                    chart.setDataSource(dataSourcetest);
                    chart.refresh();
                },
            });
        }

        function refreshMonthlySalesCollectionChart() {
            if ($('.btnDataGrid_MonthlySalesCollectionPartial').data("type") == "Grid")// data-grid toogle chart option in data-grid attribute in div
            {
                $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", "Chart");
                createMonthlySalesCollectionChart();
                return;
            }
            var chart = $("#SalesCollectionChart").data("kendoChart"),
                type = $("input[name=seriesType_SalesCollection]:checked").val(),
                stack = $("#salesCollectionInStack").prop("checked"),
                IsShowLevel = $("#showlables_monthlySalesCollection").prop("checked");


            for (var i = 0, length = series.length; i < length; i++) {
                series[i].stack = stack;
                series[i].type = type;
            };

            if (type == "bar") {
                chart.setOptions({
                    series: series,
                    valueAxis: {
                        labels: {
                            rotation: -45
                        }
                    },
                });
            }
            else {
                chart.setOptions({
                    series: series,
                });
            }

            chart.options.series[0].labels.visible = IsShowLevel;
            chart.options.series[1].labels.visible = IsShowLevel;
            if (type == "column") {
                //chart.options.series[0].labels.position = "top";
                chart.options.series[0].labels.rotation = -90;
                chart.options.series[1].labels.rotation = -90;
            }
            if (type == "bar") {
                //  chart.options.series[0].labels.position = "center";
                chart.options.series[0].labels.rotation = 0;
                chart.options.series[1].labels.rotation = 0;
            }
            chart.refresh();
        }

        var defaultDateFormat_monthlySalesCollection_monthlySalesCollection = "";
        $('#apply_@actionPageId').click(function () {
            var checkedDateFormat = $('input[name=DateFormat_SalesCollection]:checked').val();
            var IsDateChanged = false;
            if (defaultDateFormat_monthlySalesCollection != checkedDateFormat) {
                IsDateChanged = true;
                defaultDateFormat_monthlySalesCollection = checkedDateFormat;
            }
            ChartFilter('@actionPageId', "createMonthlySalesCollectionChart", IsDateChanged);
        });
        $("#showzerovalue_monthlySalesCollection").on("change", function () {
            createMonthlySalesCollectionChart();
            RefreshChartFilterControl('@actionPageId');
        });


        //LoadDataGrid function for data-grid
        function LoadDataGrid_MonthlySalesCollectionPartial(dataSource, monthField) {
            $("#SalesCollectionChart").html('');
            $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", "Grid");
            var monthTitle = "Month";
            dataSource = dataSource == undefined ? $("#SalesCollectionChart").data("kendoChart").dataSource : dataSource;
            if ($("input[name=DateFormat_SalesCollection]:checked").val() == "BS") {
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + dataSource.data()[0].Nepalimonth + "]";
                }
                else {
                    monthField = "NepaliMonth";
                    monthTitle = "Month"
                }
            }
            if (monthField == undefined)
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null) {
                    monthField = "day";
                    monthTitle = "days [month : " + dataSource.data()[0].MonthEnglish + "]";
                }
                else {
                    monthField = "MonthYear";
                    monthTitle = "Month"
                }
            $("#SalesCollectionChart").kendoGrid({
                dataSource: dataSource,
                height: $("#MonthlySalesCollectionPartial").hasClass("portlet-fullscreen") ? 550 : 350,
                groupable: false,
                sortable: true,
                // selectable: "multiple",
                toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                excel: {
                    fileName: "Monthly Sales VS Collection Report",
                    allPages: true
                },
                columns: [{
                    field: monthField,
                    title: monthTitle,
                    width: 240
                }, {
                    field: "Sales",
                    title: "Sales",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }, {
                    field: "Collection",
                    title: "Collection",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                }]

            });

        }


        function ChartData() {
            $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", "Chart");
            createMonthlySalesCollectionChart();
            RefreshChartFilterControl('@actionPageId');
        };

        $(".btnDataGrid_MonthlySalesCollectionPartial").click(function () {
            var datasource = $("#SalesCollectionChart").data("kendoChart").dataSource;
            var type = $('.btnDataGrid_MonthlySalesCollectionPartial').data("type");
            if (type == "Chart") {
                LoadDataGrid_MonthlySalesCollectionPartial(datasource);
                $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", "Grid");
            }
            else {
                LoadMonthlySalescollectionChart(datasource);
                $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", "Chart");
            }
            //$('.btnDataGrid_MonthlySalesCollectionPartial').data("type") == "Chart" ? LoadDataGrid_MonthlySalesCollectionPartial() : ChartData();;
            $("i", this).toggleClass("icon-bar-chart");
        });

        //load ChildGrid when dblClick on row
        $("#SalesCollectionChart").on('dblclick', ".k-state-selected", function (e) {
            var grid = $("#SalesCollectionChart").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            var dateformat = $("input[name=DateFormat_SalesCollection]:checked").val();
            if (dateformat == "BS")
                selectedItem.Month = selectedItem.NepaliMonth;
            if (selectedItem.Month != null) {
                var daywiseUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesCollectionDailyReport";
                var dataSourcetest = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: daywiseUrl + "?monthName=" + selectedItem.MonthInt + "&DateFormat=" + dateformat,
                            dataType: "json", // <-- The default was "jsonp".
                            type: "POST",
                            contentType: "application/json; charset=utf-8"
                        },
                        parameterMap: function (options, type) {
                            var paramMap = JSON.stringify($.extend(options, reportFilter));
                            delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                            delete paramMap.$format; // <-- remove format parameter.
                            return paramMap;
                        }
                    },
                    sort: {
                        field: "day",
                        dir: "asc"
                    }
                });
                //
                $("#SalesCollectionChart").html('');
                $("#SalesCollectionChart").kendoGrid({
                    dataSource: dataSourcetest,
                    height: ($("#SalesCollectionChart").hasClass("portlet-fullscreen")) ? 550 : 350,
                    groupable: false,
                    sortable: true,
                    selectable: "multiple",
                    toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                    excel: {
                        fileName: "Monthly Sales VS Collection Report",
                        allPages: true
                    },
                    columns: [{
                        field: "day",
                        title: "days [month : " + selectedItem.Month + "]",
                    },
                    {
                        field: "Sales",
                        title: "Sales",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    }, {
                        field: "Collection",
                        title: "Collection",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    }]
                });
            }
        })
    </script>
    <script>

        $(document).ready(function () {
            defaultDateFormat_monthlySalesCollection = $('input[name=DateFormat_SalesCollection]:checked').val();

            $('[title="Download"]').tooltip({
                trigger: 'hover'
            });
            $('.icon-arrow-down.Firstcustom').click(function () {
                $('.dropdown-menu.custom.Firstslidetoggle').slideToggle(200);
            });

            ReportFilter.init('@actionPageId');

            $("checkbox").not("#salesCollectionInStack").uniform();
            createMonthlySalesCollectionChart();
            $(document).bind("kendo:skinChange", createMonthlySalesCollectionChart);


            $(".sales-collection-options").bind("change", function () {
                if ($('.btnDataGrid_MonthlySalesCollectionPartial').data("type") == "Chart")
                    refreshMonthlySalesCollectionChart();
                else
                    chart_grid_option_change("btnDataGrid_MonthlySalesCollectionPartial", 'createMonthlySalesCollectionChart');
            });
            $("#showlables_monthlySalesCollection").bind("change", function () {
                var temp = $('.btnDataGrid_MonthlySalesCollectionPartial').data("type");
                $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", "temp");
                refreshMonthlySalesCollectionChart();
                $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", temp);
            });
            $('#salesCollectionInStack').on('click', function () {
                var temp = $('.btnDataGrid_MonthlySalesCollectionPartial').data("type");
                $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", "temp");
                refreshMonthlySalesCollectionChart();
                $('.btnDataGrid_MonthlySalesCollectionPartial').data("type", temp);
            });
            //$("input[name=DateFormat_SalesCollection]").on('change', function () {
            //    createMonthlySalesCollectionChart();
            //})
        });


        //Export 
        $(".export-pdf").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({

                    dataURI: data,
                    fileName: filename + ".pdf",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        $(".export-img").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportImage().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".png",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export",

                });
            });
        });

        $(".export-svg").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportSVG().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".svg",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });


        function FormatSeriesLabels(value) {
            if (isNaN(value))
                value = 0;
            var decimalPlaces = 2;
            if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != "" && ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != undefined) {
                if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".").length > 1)
                    decimalPlaces = ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".")[1].length;
                else
                    decimalPlaces = 0;
            }

            if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Lakh") {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            } else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Thousand") {
                value = (value / 1000).toFixed(decimalPlaces) + " K";
            }
            else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Crore") {
                value = (value / 10000000).toFixed(decimalPlaces) + " C";
            }
            else {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            }
            return kendo.format("{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}", value);
        }
    </script>
</div>