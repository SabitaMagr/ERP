@using NeoErp.Core.Models;
@{
    var actionPageId = "DivisionWiseSalesCollection";
}

<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-bar-chart"></span> Sales vs Collection (Division)</h4>
            </div>
            <div class="modal-body bottom-gappingtwo form-horizontal">
                <div class="row">
                    <div class="clearfix">
                        <div class="btn-group options_@actionPageId responsivegap col-sm-12 col-md-12" data-toggle="buttons">
                            <button type="button" class="btn btn-sm btn default red-stripe">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeColumn" name="seriesType_@actionPageId"
                                       type="radio" value="column" autocomplete="off" />column
                            </button>
                            <button type="button" class="btn btn-sm default green-stripe">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeBar" name="seriesType_@actionPageId"
                                       type="radio" value="bar" autocomplete="off" />bar
                            </button>
                            <button type="button" class="btn btn-sm default purple-stripe active">
                                <i class="fa fa-line-chart"></i>
                                <input id="typeLine" name="seriesType_@actionPageId"
                                       type="radio" value="line" checked="checked" autocomplete="off" />Line
                            </button>
                            <button class="btn btn-green btn-sm pull-right saveChartConfig_@actionPageId" data-id="@actionPageId" title="Save Setting"><i class="fa fa-save"></i> Save</button>
                        </div>
                        <div class="col-xs-12 col-md-6 col-sm-6 margin-buttom">
                            <h5> Choose Value Field</h5>
                            <div class="btn-group" data-toggle="buttons">
                                <button type="button" class="btn btn-sm default red-stripe">
                                    <i class="fa fa-cart-arrow-down"></i>
                                    <input id="QuantityColumn" name="fieldType_@actionPageId"
                                           type="radio" value="Quantity" autocomplete="off" /> Quantity
                                </button>
                                <button type="button" class="btn btn-sm default green-stripe active">
                                    <i class=""></i>
                                    <input id="typeBar" name="fieldType_@actionPageId"
                                           type="radio" value="Amount" checked="checked" autocomplete="off" /> Amount
                                </button>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="br"><div class="br"></div> </div>
                            <div class="clearfix">
                                <div class="dateOption_@actionPageId sr-only">
                                    <label>
                                        <input type="radio" id="ADFormat" name="DateFormat_@actionPageId" value="AD" /> AD
                                    </label>
                                    <label>
                                        <input type="radio" id="BSFormat" name="DateFormat_@actionPageId" checked="checked" value="BS" /> BS
                                    </label>
                                </div>
                            </div>
                            <div>
                                <!-- show labels & inStack option-->
                                <div class="input-group">
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showLabel_@actionPageId" type="checkbox" autocomplete="off" /> Show Labels
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                
                
                        <div class="filter_title">
                            <label class="filter-label">Advance Filter</label>
                        </div>

                        @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = false,
                       //ShowFiscalYearFilter=true,
                       ShowProductFilter = false,
                       ShowPartyTypeFilter = false,
                       ShowCategoryFilter = false,
                       ShowLocationFilter = false,
                       ShowDocumentFilter = false,
                       ShowCompanyFilter = false,
                       ShowFiscalYearFilter = true,
                       ShowBranchFilter = false,
                       ShowEmployeeFilter = false,
                       ShowAgentFilter = false,
                       IsPopUp = false,
                       ActionPageId = actionPageId
                   })
                 
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
    </div>
</div>

<div class="portlet portlet-sortable light bordered" id="DivisionWiseSalesCollection">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">Sales vs Collection (Division)</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            <a class="btnGrid btnGrid_@actionPageId" data-type="Chart" data-title="Grid">
                <i class="fa fa-table"></i>
            </a>
            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" data-title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down Thirdcustom"></i>
                </a>
                <ul class="dropdown-menu custom">
                    <div class="btn-group-custom">
                        <button type="button" data-id="DivisionWiseSalesCollectionChart" class="export-pdf btn default red-stripe"><i class="fa fa-file-pdf-o"></i>PDF</button>
                        <button type="button" data-id="DivisionWiseSalesCollectionChart" class="export-img btn default blue-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="DivisionWiseSalesCollectionChart" class="export-svg btn default green-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config"></a>
            <a href="javascript:;" class="reload"></a>
            <a href="javascript:;" class="fullscreen"></a>
            <a href="javascript:;" class="remove"></a>
        </div>
    </div>
    <div class="portlet-body">
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="DivisionWiseSalesCollectionChart"></div>
            <div class="overlay"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>

    <script>

        var pageId = '@actionPageId';
        var DivisionWiseSalesCollection = (function () {
            //initialize variables

            var config = {
                url: window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesCollectionDivisionWiseReport",
                series: [{
                    field: "Sales",
                    name: "Sales"
                }, {
                    field: "Collection",
                    name: "Collection"
                }],
                color: ["#0000FF", "#7FFF00", "#006400", "#9932CC", "#C71585", "#FF0000", "#FFFF00"],
                categoryField: "BranchName",
                categoryTitle: '',
                group: { field: "BranchName" },
                sortField: "BranchName",

                isStack: false,
                fieldValue: $("input[name=fieldType_DivisionWiseSalesCollection]:checked").val(),
                showLabel: $("#showLabel_DivisionWiseSalesCollection").prop("checked"),
                seriesType: $("input[name=seriesType_DivisionWiseSalesCollection]:checked").val(),

                _oldData: {
                    dateFormat: $("input[name=DateFormat_DivisionWiseSalesCollection]:checked").val(),
                    fieldValue: $("input[name=fieldType_DivisionWiseSalesCollection]:checked").val()
                },

            };
            var _oldConfig = JSON.stringify(config);
            function PreInit() {
                $.ajax({
                    type: 'POST',
                    data: { 'ChartName': pageId },
                    async: false,
                    url: window.location.protocol + "//" + window.location.host + "/Main/GetUserWiseChartConfig",
                    success: function (data) {
                        if (data != "") {
                            //for series Type
                            $("input[name=seriesType_" + pageId + "]").filter('[value=' + data.ChartType + ']').prop('checked', true);
                            $("input[name=seriesType_" + pageId + "]").parent().removeClass("active")
                            $("input[name=seriesType_" + pageId + "]:checked").parent().addClass("active");
                            //for dateFormat
                            $("input[name=DateFormat_" + pageId + "]").filter('[value=' + data.DateFormat + ']').prop('checked', true);
                            //for fieldValue
                            $("input[name=fieldType_" + pageId + "]").filter('[value=' + data.FieldValue + ']').prop('checked', true);
                            $("input[name=fieldType_" + pageId + "]").parent().removeClass("active")
                            $("input[name=fieldType_" + pageId + "]:checked").parent().addClass("active");
                            //for showLabel
                            data.ShowLabel == "true" ? $("#showLabel_" + pageId).prop("checked", true) : $("#showLabel_" + pageId).prop("checked", false);

                            config.seriesType = data.ChartType;
                            config.dateFormat = data.DateFormat;
                            config.fieldValue = data.FieldValue;
                            config.isStack = data.IsStack;
                            config.showLabel = data.ShowLabel;
                        }
                    }
                });
                loadDataSource()
            }
            function loadDataSource() {
                reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
                 var filter = $.extend(true, {}, reportFilter);
                var dateformat = $("input[name=DateFormat_DivisionWiseSalesCollection]:checked").val();
                config.showLabel = $("#showLabel_DivisionWiseSalesCollection").prop("checked");
                var dataSource = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: config.url,
                            dataType: "json", // <-- The default was "jsonp".
                            type: "POST",
                            contentType: "application/json; charset=utf-8"
                        },
                        parameterMap: function (options, type) {
                            var paramMap = JSON.stringify($.extend(options, filter));
                            delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                            delete paramMap.$format; // <-- remove format parameter.
                            return paramMap;
                        }
                    },
                    requestStart: function () {
                        if (IsDataGrid != "Grid") {
                            kendo.ui.progress($("#DivisionWiseSalesCollectionChart"), true);
                        }
                    },
                    requestEnd: function () {
                        kendo.ui.progress($("#DivisionWiseSalesCollectionChart"), false);
                    },
                    schema: {
                        parse: function (items) {
                            var item,
                                result = [];
                            var showzerovalue = $("#showzerovalue_DivisionWiseSalesCollection").prop("checked");

                            if (showzerovalue) {
                                for (var i = 0; i < items.length; i++) {
                                    item = items[i];
                                    result.push(item);
                                }
                            }
                            else {
                                for (var i = 0; i < items.length; i++) {
                                    item = items[i];
                                    if (item.Amount !== 0 && item.Quantity !== 0) {
                                        result.push(item);
                                    }
                                }
                            }


                            return result;
                        }
                    },
                    //group: config.group,
                    sort: {
                        field: config.sortField,
                        dir: "asc"
                    }

                });

                $("#DivisionWiseSalesCollection .DisplayFilterContent a").text("");
                var IsDataGrid = $('.btnGrid_DivisionWiseSalesCollection').data("type");
                if (IsDataGrid == "Grid") {
                    CreateGrid(dataSource);
                    return;
                }
                CreateChart(dataSource);
            }
            function CreateChart(dataSource) {
                $('.btnGrid_DivisionWiseSalesCollection').data("type", "Chart");
                $("#DivisionWiseSalesCollectionChart").html('');
                $("#DivisionWiseSalesCollectionChart").removeAttr("style");
                $("#DivisionWiseSalesCollectionChart").removeAttr("class");
                $("#DivisionWiseSalesCollectionChart").kendoChart({
                    chartArea: {
                        height: ($("#DivisionWiseSalesCollectionChart").hasClass("portlet-fullscreen")) ? 550 : 350,
                    },
                    onDrag: function (e) {
                        var chart = e.sender;
                        var ds = chart.dataSource;
                        var options = chart.options;

                        var categoryRange = e.axisRanges.CategoryAxis;

                        if (categoryRange) {
                            var xMin = categoryRange.min;
                            var xMax = categoryRange.max;

                            options.categoryAxis.min = xMin;
                            options.categoryAxis.max = xMax;

                            ds.filter(viewModel.getFilter(xMin, xMax));
                        }
                    },
                    pannable: {
                        lock: "y"
                    },
                    zoomable: {
                        mousewheel: {
                            lock: "y"
                        },
                        selection: {
                            lock: "y"
                        }
                    },
                    dataSource: dataSource,
                    legend: {
                        position: "bottom"
                    },
                    seriesColors: config.color,
                    seriesDefaults: {
                        type: config.seriesType,
                        labels: {
                            visible: config.showLabel,
                            template: "#= FormatLabels(value)#",
                            rotation: '270',
                            padding: {
                                left: -5
                            },
                        },
                        style: "smooth",
                    },
                    series: config.series,
                    categoryAxis: {
                        field: config.categoryField,
                        labels: {
                            rotation: -45,
                        },
                        title: { text: config.categoryTitle }
                    },
                    valueAxis: {
                        line: {
                            visible: true
                        },
                        labels: {
                            rotation: 'auto',
                            template: "#= FormatLabels(value)#"
                        },
                        title: { text: amountFigureType }
                    },
                    tooltip: {
                        visible: true,
                        format: "{0}",
                        template: "#= category #: \n #= FormatLabels(value)#"
                    },
                    dataBound: function (e) {
                        var maxValue = getMaxValueFromDataSource(e);
                        var majorunit = Math.max(6, maxValue / 6);
                        e.sender.options.valueAxis.majorUnit = majorunit;
                        e.sender.options.valueAxis.max = maxValue + majorunit;
                        e.sender.options.valueAxis.axisCrossingValue = [0, -(maxValue + majorunit)];
                        $("#DivisionWiseSalesCollectionChart").next(".overlay").toggle(maxValue <= 0);
                       // e.sender.options.categoryAxis.categories = getCategoryFromDataSource(e);
                    },
                    seriesClick: function (e) {
                        
                        if (e.dataItem.Month == undefined) {
                            var url = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesCollectionDivisionWiseMonthlyReport?DateFormat=" + $("input[name=DateFormat_DivisionWiseSalesCollection]:checked").val() + "&divisionCode=" + e.dataItem.Branch;
                            config.url = url;
                            config.categoryField = "Month";
                            config.categoryTitle = e.dataItem.BranchName;
                            config.sortField = "MonthNo";
                            reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
                            //reportFilter.ReportFilters.BranchFilter = [e.dataItem.Branch_Code];
                            loadDataSource();
                           // $(".dateOption_DivisionWiseSalesCollection").removeClass("sr-only");
                        }
                        else if (e.dataItem.day == undefined) {
                            var url = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesCollectionDivisionWiseDailyReport?DateFormat=" + $("input[name=DateFormat_DivisionWiseSalesCollection]:checked").val() + "&month=" + e.dataItem.MonthNo;
                            config.url = url;
                            config.categoryField = "day";
                            config.categoryTitle = config.categoryTitle +":  "+ e.dataItem.Month;
                            config.sortField = "day";
                            reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
                            //reportFilter.ReportFilters.BranchFilter = [e.dataItem.Branch_Code];
                            loadDataSource();
                           // $(".dateOption_DivisionWiseSalesCollection").removeClass("sr-only");
                        }


                    },
                });
            }
            function CreateGrid(dataSource) {
                $("#DivisionWiseSalesCollectionChart").html('');
                $("#DivisionWiseSalesCollectionChart").removeAttr("style");
                $("#DivisionWiseSalesCollectionChart").removeAttr("class");
                $('.btnGrid_DivisionWiseSalesCollection').data("type", "Grid");

                var monthTitle = "",
                    monthField = "";
                dataSource = dataSource == undefined ? $("#DivisionWiseSalesCollectionChart").data("kendoChart").dataSource : dataSource;
                if (dataSource.data().length > 0 && dataSource.data()[0].DisplayMonth != null) {
                    monthField = "DisplayMonth";
                    monthTitle = "Month";
                }
                else {
                    monthField = config.categoryField;
                    monthTitle = "Branch"
                }
                $("#DivisionWiseSalesCollectionChart").kendoGrid({
                    dataSource: dataSource,
                    height: $("#DivisionWiseSalesCollectionChart").hasClass("portlet-fullscreen") ? 550 : 350,
                    groupable: false,
                    sortable: true,
                    //selectable: "multiple",
                    toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                    excel: {
                        fileName: "BranchWise Sales(Compare Report)",
                        allPages: true
                    },
                    columns: [{
                        field: monthField,
                        title: monthTitle,
                        width: 240
                    }, {
                        field: "Quantity",
                        title: "Quantity",
                        format: "{0:n0}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    }, {
                        field: "Amount",
                        title: "Amount",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    }],
                    dataBound: function (e) {
                        var gird = e.sender;
                        gird.table.find(".k-grouping-row:not(:first-child)").each(function () {
                            gird.collapseGroup(this);
                        });
                    }
                });
            }
            function refreshChart(flag) {
                
                //check if showlevel and stack changed
                if (flag != undefined && flag.data == false) {
                    if ($(".btnGrid_DivisionWiseSalesCollection").data("type") == "Grid") {
                        $(".btnGrid_DivisionWiseSalesCollection").data("type", "Chart");
                        loadDataSource();
                        return;
                    }
                }
                //check if series type changed
                if (flag != undefined && flag.data.options != undefined) {
                    if ($(".btnGrid_DivisionWiseSalesCollection").data("type") == "Grid") {
                        chart_grid_option_change("btnGrid_DivisionWiseSalesCollection", DivisionWiseSalesCollection.init);
                        return;
                    }
                }
                var chart = $("#DivisionWiseSalesCollectionChart").data("kendoChart"),
                    type = $("input[name=seriesType_DivisionWiseSalesCollection]:checked").val(),
                    stack = $("#Stack_DivisionWiseSalesCollection").prop("checked"),
                    IsLebelShow = $("#showLabel_DivisionWiseSalesCollection").prop("checked"),
                    fieldValue = $("input[name=fieldType_DivisionWiseSalesCollection]:checked").val();

                for (var i = 0, length = chart.options.series.length; i < length; i++) {
                    chart.options.series[i].stack = stack;
                    chart.options.series[i].type = type;
                    //chart.options.series[i].field = fieldValue;
                    chart.options.series[i].labels.visible = IsLebelShow;
                    if (type == "column") {
                        chart.options.series[i].labels.rotation = -90;
                    }
                    if (type == "bar") {
                        chart.options.series[i].labels.rotation = 0;
                    }


                };
                chart.refresh();
            }

            //event Bind
            function applyClickEvent() {
                var checkedDateFormat = $("input[name=DateFormat_DivisionWiseSalesCollection]:checked").val();
                var checkedFieldValue = $("input[name=fieldType_DivisionWiseSalesCollection]:checked").val();
                var IsChanged = false;
                if (config._oldData.dateFormat != checkedDateFormat) {
                    IsChanged = true;
                    config._oldData.dateFormat = checkedDateFormat;

                }
                if (config._oldData.fieldValue != checkedFieldValue) {
                    refreshChart();
                    config._oldData.fieldValue = checkedFieldValue;
                }
                ChartFilter('DivisionWiseSalesCollection', DivisionWiseSalesCollection.init, IsChanged);
            }
            function reloadClickEvent() {
                RefreshChartFilterControl('DivisionWiseSalesCollection');
                config = JSON.parse(_oldConfig);

                //update DateFormat
                $("input[name=DateFormat_DivisionWiseSalesCollection]:checked").val("BS");
                $($(".dateOption_DivisionWiseSalesCollection").find("span")[0]).removeClass("checked");
                $($(".dateOption_DivisionWiseSalesCollection").find("span")[1]).addClass("checked");
                $(".dateOption_DivisionWiseSalesCollection").addClass("sr-only");
                reportFilter.ReportFilters.BranchFilter = [];
                loadDataSource();
                PreInit();
            }
            function chartGridSwitchEvent() {
                var datasource = $("#DivisionWiseSalesCollectionChart").data("kendoChart").dataSource;
                $('.btnGrid_DivisionWiseSalesCollection').data("type") == "Chart" ? CreateGrid(datasource) : CreateChart(datasource);
                $("i", this).toggleClass("icon-bar-chart");
            }
            function saveChartConfig() {
                var pageId = $(this).data("id");
                var data = {
                    ChartName: pageId,
                    ChartType: $("input[name=seriesType_" + pageId + "]:checked").val(),
                    FieldValue: $("input[name=fieldType_" + pageId + "]:checked").val(),
                    DateFormat: $("input[name=DateFormat_" + pageId + "]:checked").val(),
                    ShowLabel: $("#showLabel_" + pageId).prop("checked"),
                    IsStack: false
                }

                $.ajax({
                    type: 'POST',
                    data: data,
                    url: window.location.protocol + "//" + window.location.host + "/Main/SaveUserWiseChartConfig",
                    success: function (xhr, status) {
                        displayPopupNotification("Setting Saved", "success");
                    },
                    error: function (xhr, status) {
                        displayPopupNotification("Error", "error");
                    }
                });

            }

            return {
                preInit: PreInit,
                init: loadDataSource,
                refreshChart: refreshChart,
                applyClick: applyClickEvent,
                reloadClick: reloadClickEvent,
                btnGridClick: chartGridSwitchEvent,
                saveConfig: saveChartConfig,
            };
        })();

        $(document).ready(function () {
           // DivisionWiseSalesCollection.init();
            DivisionWiseSalesCollection.preInit();
            //start Binding
            $(document).bind("kendo:skinChange", DivisionWiseSalesCollection.init);
            $('#DivisionWiseSalesCollectionChart').closest('.portlet').find('.reload').bind("click", DivisionWiseSalesCollection.reloadClick);
            $('#apply_DivisionWiseSalesCollection').bind("click", DivisionWiseSalesCollection.applyClick);
            $(".btnGrid_DivisionWiseSalesCollection").bind('click', DivisionWiseSalesCollection.btnGridClick);
            $("#showLabel_DivisionWiseSalesCollection").bind("change", true, DivisionWiseSalesCollection.refreshChart);
            $('#Stack_DivisionWiseSalesCollection').bind('click', true, DivisionWiseSalesCollection.refreshChart);
            $(".options_DivisionWiseSalesCollection").bind("change", { "options": true }, DivisionWiseSalesCollection.refreshChart);
            $(".saveChartConfig_DivisionWiseSalesCollection").bind("click", DivisionWiseSalesCollection.saveConfig);
        });


        //Export 
        $(".export-pdf").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({

                    dataURI: data,
                    fileName: filename + ".pdf",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        $(".export-img").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportImage().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".png",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export",

                });
            });
        });

        $(".export-svg").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportSVG().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".svg",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });
    </script>
</div>
