@using NeoErp.Core.Models;
@{
    var actionPageId = "MonthlyProductionPlanChart";
}

<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">Monthly Production Plan</h4>
            </div>
            <div class="modal-body bottom-gappingtwo form-horizontal">
                <div class="row">
                    <div class="branchwisesales-col clearfix">
                        <div class="btn-group options_MonthlyProductionPlanChart responsivegap col-sm-12 col-md-12" data-toggle="buttons" data-type="chart">
                            <button type="button" class="btn btn-sm default red-stripe active">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeColumn" name="seriesType_MonthlyProductionPlanChart"
                                       type="radio" checked="checked" value="column" autocomplete="off" />column
                            </button>
                            <button type="button" class="btn btn-sm default green-stripe">
                                <i class="fa fa-bar-chart"></i>
                                <input id="typeBar" name="seriesType_MonthlyProductionPlanChart"
                                       type="radio" value="bar" autocomplete="off" />bar
                            </button>
                            <button type="button" class="btn btn-sm default purple-stripe">
                                <i class="fa fa-line-chart"></i>
                                <input id="typeLine" name="seriesType_MonthlyProductionPlanChart"
                                       type="radio" value="line" autocomplete="off" />Line
                            </button>
                        </div>
                        <div class="col-xs-12 col-md-6 col-sm-6 margin-buttom">
                            <h5> Choose Value Field</h5>
                            <div class="btn-group" data-toggle="buttons">
                                <button type="button" class="btn btn-sm default red-stripe" style="display:none;">
                                    <i class="fa fa-cart-arrow-down"></i>
                                    <input id="QuantityColumn" name="fieldType_@actionPageId"
                                           type="radio" value="Quantity" autocomplete="off" /> Quantity
                                </button>
                                <button type="button" class="btn btn-sm default green-stripe active">
                                    <i class=""></i>
                                    <input id="typeBar" name="fieldType_@actionPageId"
                                           type="radio" value="Amount" checked="checked" autocomplete="off" /> Amount
                                </button>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="br"><div class="br"></div> </div>
                            <div class="clearfix" style="display:none;">
                                <div class="date-option">
                                    <label>
                                        <input type="radio" id="ADFormat" name="DateFormat_MonthlyProductionPlanChart" value="AD" /> AD
                                    </label>
                                    <label>
                                        <input type="radio" id="BSFormat" name="DateFormat_MonthlyProductionPlanChart" checked="checked" value="BS" /> BS
                                    </label>
                                </div>
                            </div>
                            <div>
                                <!-- show labels & inStack option-->
                                <div class="input-group">
                                    <div class="icheck-inline">
                                        <label>
                                            <input id="showLabel_MonthlyProductionPlanChart" type="checkbox" autocomplete="off" /> Show Labels
                                        </label>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="br"></div>


                <div class="filter_title">
                    <label class="filter-label">Advance Filter</label>
                </div>

                @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                {
                ShowCustomerFilter = true,
                ShowProductFilter = false,
                ShowPartyTypeFilter = false,
                ShowCategoryFilter = false,
                ShowLocationFilter = false,
                ShowDocumentFilter = false,
                ShowCompanyFilter = false,
                ShowFiscalYearFilter = false,
                ShowBranchFilter = true,
                ShowEmployeeFilter = true,
                ShowAgentFilter = false,
                ShowDivisionFilter = true,
                IsPopUp = false,
                ActionPageId = actionPageId
                })
            </div>


            <div class="modal-footer">
                @*<button type="button" class="btn default" data-dismiss="modal">Close</button>*@
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="portlet portlet-sortable  light bordered" id="MonthlyProductionPlanChart">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">Monthly Production plan</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            @*<a class="btnDatagrid" href="javascript:;" onclick="CreateGrid_MonthlyProductionPlanChart();" data-grid="Chart" title="Data grid">
                *@
                <a class="btnGrid btnGrid_MonthlyProductionPlanChart" data-type="Chart" data-title="Grid">
                    <i class="fa fa-table"></i>
                </a>
                <div class="btn-group">
                    <a class="btn dropdown-toggle download-btn" data-title="Download" data-toggle="dropdown" href="#">
                        <i class="icon-arrow-down Thirdcustom"></i>
                    </a>
                    <ul class="dropdown-menu custom">
                        <div class="btn-group-custom">
                            <button type="button" data-id="MonthlyProductionPlanChartChart" class="export-pdf btn default red-stripe"><i class="fa fa-file-pdf-o"></i>PDF</button>
                            <button type="button" data-id="MonthlyProductionPlanChartChart" class="export-img btn default blue-stripe"><i class="fa fa-image-o"></i>Image</button>
                            <button type="button" data-id="MonthlyProductionPlanChartChart" class="export-svg btn default green-stripe">SVG</button>
                        </div>
                    </ul>
                </div>
                <a href="#Model_@actionPageId" data-toggle="modal" class="config"></a>
                <a href="javascript:;" class="reload"></a>
                <a href="javascript:;" class="fullscreen"></a>
                <a href="javascript:;" class="remove"></a>
        </div>
    </div>
    <div class="portlet-body">
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="MonthlyProductionPlanChartChart"></div>
            <div class="overlay"><div>No data available</div></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>

    <script>
        //initialize variables
        var config_MonthlyProductionPlanChart = {
            url: window.location.protocol + "//" + window.location.host + "/api/PlanChartReportApi/getMonthlyProductionPlanChart",
            dateFormat: $("input[name=DateFormat_MonthlyProductionPlanChart]:checked").val(),
            fieldValue: $("input[name=fieldType_MonthlyProductionPlanChart]:checked").val(),
            series: [{
                field: "PER_DAY_QUANTITY",
                name: "Qty"//"#= group.value #"
            }],
            isStack: false,
            showLabel: $("#showLabel_MonthlyProductionPlanChart").prop("checked"),
            color: ["#8A2BE2", "#ADFF2F", "#5bc0de", "#5cb85c", "#f2b661"],
            seriesType: $("input[name=seriesType_MonthlyProductionPlanChart]:checked").val(),
            categoryField: "MONTH",
            categoryTitle: '',
            group: { field: "COMPANY_CODE" },
            sortField: "MONTHINT",
            sortFields: [{
                field: "YEAR",
                dir: "asc"
            },{
                field: "MONTHINT",
                dir:"asc"
            }],
            _oldData: {
                dateFormat: $("input[name=DateFormat_MonthlyProductionPlanChart]:checked").val(),
                fieldValue: $("input[name=fieldType_MonthlyProductionPlanChart]:checked").val()
            },

        };
        var _oldConfig_MonthlyProductionPlanChart = JSON.stringify(config_MonthlyProductionPlanChart);



        function loadDataSource_MonthlyProductionPlanChart() {

            reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
            var filter = $.extend(true, {}, reportFilter);
            config_MonthlyProductionPlanChart.dateFormat = $("input[name=DateFormat_MonthlyProductionPlanChart]:checked").val();
            config_MonthlyProductionPlanChart.showLabel = $("#showLabel_MonthlyProductionPlanChart").prop("checked");
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: Arg.url(config_MonthlyProductionPlanChart.url, { DateFormat: config_MonthlyProductionPlanChart.dateFormat }),
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, filter));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },
                requestStart: function () {
                    if (IsDataGrid != "Grid") {
                        kendo.ui.progress($("#MonthlyProductionPlanChartChart"), true);
                    }
                },
                requestEnd: function () {
                    kendo.ui.progress($("#MonthlyProductionPlanChartChart"), false);
                },
                schema: {
                    parse: function (items) {
                        var item,
                            result = [];
                        var showzerovalue = $("#showzerovalue_MonthlyProductionPlanChart").prop("checked");

                        if (showzerovalue) {
                            for (var i = 0; i < items.length; i++) {
                                item = items[i];
                                result.push(item);
                            }
                        }
                        else {
                            for (var i = 0; i < items.length; i++) {
                                item = items[i];
                                if (item.Amount !== 0 && item.Quantity !== 0) {
                                    result.push(item);
                                }
                            }
                        }


                        return result;
                    }
                },
                group: config_MonthlyProductionPlanChart.group,
                sort: config_MonthlyProductionPlanChart.sortFields
                //{
                //    field: config_MonthlyProductionPlanChart.sortField,
                //    dir: "asc"
                //}

            });

            $("#MonthlyProductionPlanChart .DisplayFilterContent a").text("");
            var IsDataGrid = $('.btnGrid_MonthlyProductionPlanChart').data("type");
            if (IsDataGrid == "Grid") {
                CreateGrid_MonthlyProductionPlanChart(dataSource);
                return;
            }

            $('.btnGrid_MonthlyProductionPlanChart').data("type", "Chart");
            CreateChart_MonthlyProductionPlanChart(dataSource);
            //CreateGrid_MonthlyProductionPlanChart(dataSource);
        }
        function CreateChart_MonthlyProductionPlanChart(dataSource) {

            $('.btnGrid_MonthlyProductionPlanChart').data("type", "Chart");
            $("#MonthlyProductionPlanChartChart").html('');
            $("#MonthlyProductionPlanChartChart").removeAttr("style");
            $("#MonthlyProductionPlanChartChart").removeAttr("class");

            dataSource.group(config_MonthlyProductionPlanChart.group);
            $("#MonthlyProductionPlanChartChart").kendoChart({
                chartArea: {
                    height: ($("#MonthlyProductionPlanChartChart").hasClass("portlet-fullscreen")) ? 550 : 350,
                },
                onDrag: function (e) {
                    var chart = e.sender;
                    var ds = chart.dataSource;
                    var options = chart.options;

                    var categoryRange = e.axisRanges.CategoryAxis;

                    if (categoryRange) {
                        var xMin = categoryRange.min;
                        var xMax = categoryRange.max;

                        options.categoryAxis.min = xMin;
                        options.categoryAxis.max = xMax;

                        ds.filter(viewModel.getFilter(xMin, xMax));
                    }
                },
                pannable: {
                    lock: "y"
                },
                zoomable: {
                    mousewheel: {
                        lock: "y"
                    },
                    selection: {
                        lock: "y"
                    }
                },
                dataSource: dataSource,
                legend: {
                    position: "bottom",
                    visible: false
                },

                seriesColors: config_MonthlyProductionPlanChart.color,
                seriesDefaults: {
                    type: config_MonthlyProductionPlanChart.seriesType,
                    labels: {
                        visible: config_MonthlyProductionPlanChart.showLabel,
                        template: "#= FormatLabels(value)#",
                        rotation: '270',
                        padding: {
                            left: -5
                        },
                    },
                    style: "smooth",
                },
                series: config_MonthlyProductionPlanChart.series,
                categoryAxis: {
                    field: config_MonthlyProductionPlanChart.categoryField,
                    labels: {
                        rotation: -45,
                    },
                    title: { text: config_MonthlyProductionPlanChart.categoryTitle }
                },
                valueAxis: {
                    line: {
                        visible: true
                    },
                    labels: {
                        rotation: 'auto',
                        template: "#= FormatLabels(value)#"
                    },
                    title: { text: amountFigureType }
                },
                tooltip: {
                    visible: true,
                    format: "{0}",
                    template: "#= category #: \n #= FormatLabels(value)#"
                },
                dataBound: function (e) {
                    var maxValue = getMaxValueFromDataSource(e);
                    var majorunit = Math.max(6, maxValue / 6);
                    e.sender.options.valueAxis.majorUnit = majorunit;
                    e.sender.options.valueAxis.max = maxValue + majorunit;
                    $("#MonthlyProductionPlanChartChart").next(".overlay").toggle(maxValue <= 0);
                    e.sender.options.categoryAxis.categories = getCategoryFromDataSource(e);
                    //
                    //if (totalChartList.length > 0) {
                    //    var chart = totalChartList[0];
                    //    totalChartList = totalChartList.splice(1, totalChartList.length);
                    //    loadChartSync(chart);
                    //}

                },
                //seriesClick: function (e) {
                //    if (e.dataItem.Day == null) {
                //        var url = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetSalesDailyFiscalYearReport?month=" + e.dataItem.MonthInt + "&dbName=" + e.dataItem.DBName;
                //        config_MonthlyProductionPlanChart.url = url;
                //        config_MonthlyProductionPlanChart.categoryField = "Day";
                //        config_MonthlyProductionPlanChart.categoryTitle = e.dataItem.DisplayMonth;
                //        loadDataSource_MonthlyProductionPlanChart();
                //    }
                //},
            });
        }
        function CreateGrid_MonthlyProductionPlanChart(dataSource) {

            $("#MonthlyProductionPlanChartChart").html('');
            $("#MonthlyProductionPlanChartChart").removeAttr("style");
            $("#MonthlyProductionPlanChartChart").removeAttr("class");
            $('.btnGrid_MonthlyProductionPlanChart').data("type", "Grid");
            var format = $("input[name=DateFormat_MonthlyProductionPlanChart]:checked").val();
            var monthTitle = "Month";
            dataSource = dataSource == undefined ? $("#MonthlyProductionPlanChartChart").data("kendoChart").dataSource : dataSource;
            if (dataSource.data().length > 0 && dataSource.data()[0].Day != null) {
                monthField = "Day";
                monthTitle = "Days [month : " + dataSource.data()[0].DisplayMonth + "]";
            }
            else {
                monthField = config_MonthlyProductionPlanChart.categoryField;
                monthTitle = "Month"
            }
            dataSource.group([]);
            $("#MonthlyProductionPlanChartChart").kendoGrid({
                dataSource: dataSource,
                height: $("#MonthlyProductionPlanChartChart").hasClass("portlet-fullscreen") ? 550 : 350,
                groupable: false,
                sortable: true,
                //selectable: "multiple",
                toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                excel: {
                    fileName: "Sales Plan Report",
                    allPages: true
                },
                columns: [{
                    field: monthField,
                    title: monthTitle,
                    width: 240
                },  {
                    field: "PER_DAY_QUANTITY",
                    title: "Quantity",
                    format: "{0:n}",
                    attributes:
                    {
                        style: "text-align:right;"
                    },

                }],
                dataBound: function (e) {
                    var gird = e.sender;
                    gird.table.find(".k-grouping-row:not(:first-child)").each(function () {
                        gird.collapseGroup(this);
                    });
                }
            });
        }



        function refreshMonthlyProductionPlanChart() {
            if ($(".btnGrid_MonthlyProductionPlanChart").data("type") == "Grid")// data-grid toogle chart option in data-grid attribute in div
            {
                $(".btnGrid_MonthlyProductionPlanChart").data("type", "Chart");
                loadDataSource_MonthlyProductionPlanChart();
                return;
            }

            var chart = $("#MonthlyProductionPlanChartChart").data("kendoChart"),
                type = $("input[name=seriesType_MonthlyProductionPlanChart]:checked").val(),
                stack = $("#Stack_MonthlyProductionPlanChart").prop("checked"),
                IsLebelShow = $("#showLabel_MonthlyProductionPlanChart").prop("checked"),
                fieldValue = $("input[name=fieldType_MonthlyProductionPlanChart]:checked").val();

            for (var i = 0, length = config_MonthlyProductionPlanChart.series.length; i < length; i++) {
                config_MonthlyProductionPlanChart.series[i].stack = stack;
                config_MonthlyProductionPlanChart.series[i].type = type;
                if (fieldValue == "Amount")
                    config_MonthlyProductionPlanChart.series[i].field = "PER_DAY_AMOUNT";


            };

            chart.setOptions({
                series: config_MonthlyProductionPlanChart.series,
            });

            for (var i = 0; i < chart.options.series.length; i++) {
                chart.options.series[i].labels.visible = IsLebelShow;
                if (type == "column") {
                    chart.options.series[i].labels.rotation = -90;
                }
                if (type == "bar") {
                    chart.options.series[i].labels.rotation = 0;
                }
            }

            chart.refresh();
        }
        $('#apply_MonthlyProductionPlanChart').click(function () {
            var checkedDateFormat = $("input[name=DateFormat_MonthlyProductionPlanChart]:checked").val();
            var checkedFieldValue = $("input[name=fieldType_MonthlyProductionPlanChart]:checked").val();
            var IsChanged = false;
            if (config_MonthlyProductionPlanChart._oldData.dateFormat != checkedDateFormat) {
                IsChanged = true;
                config_MonthlyProductionPlanChart = JSON.parse(_oldConfig_MonthlyProductionPlanChart);
                config_MonthlyProductionPlanChart._oldData.dateFormat = checkedDateFormat;

            }
            if (config_MonthlyProductionPlanChart._oldData.fieldValue != checkedFieldValue) {
                refreshMonthlyProductionPlanChart();
                config_MonthlyProductionPlanChart._oldData.fieldValue = checkedFieldValue;
            }
            $('.btnGrid_MonthlyProductionPlanChart').data("type", "Chart");
            ChartFilter('MonthlyProductionPlanChart', "loadDataSource_MonthlyProductionPlanChart", IsChanged);
        });
        $(document).ready(function () {
            loadDataSource_MonthlyProductionPlanChart();

            //start Binding
            $(document).bind("kendo:skinChange", loadDataSource_MonthlyProductionPlanChart);

            $('#MonthlyProductionPlanChartChart').closest('.portlet').find('.reload').click(function () {
                RefreshChartFilterControl('MonthlyProductionPlanChart');
                $('.btnGrid_MonthlyProductionPlanChart').data("type", "Chart");
                config_MonthlyProductionPlanChart = JSON.parse(_oldConfig_MonthlyProductionPlanChart);
                loadDataSource_MonthlyProductionPlanChart();
            });



            $(".btnGrid_MonthlyProductionPlanChart").click(function () {
                var datasource = $("#MonthlyProductionPlanChartChart").data("kendoChart").dataSource;
                $('.btnGrid_MonthlyProductionPlanChart').data("type") == "Chart" ? CreateGrid_MonthlyProductionPlanChart(datasource) : CreateChart_MonthlyProductionPlanChart(datasource);
                $("i", this).toggleClass("icon-bar-chart");
            });
            $(".options_MonthlyProductionPlanChart").bind("change", function () {  // data-grid toogle chart option in data-grid attribute in button
                if ($('.btnGrid_MonthlyProductionPlanChart').data("type") == "Chart")
                    refreshMonthlyProductionPlanChart();
                else
                    chart_grid_option_change("btnGrid_MonthlyProductionPlanChart", "loadDataSource_MonthlyProductionPlanChart");
            });
            $("#showLabel_MonthlyProductionPlanChart").bind("change", function () {// data-grid toogle chart option in data-grid attribute in button
                var temp = $('.btnGrid_MonthlyProductionPlanChart').data("type");
                $('.btnGrid_MonthlyProductionPlanChart').data("type", "temp");
                refreshMonthlyProductionPlanChart()
                $('.btnGrid_MonthlyProductionPlanChart').data("type", temp);
            });
            $('#Stack_MonthlyProductionPlanChart').on('click', function () {// data-grid toogle chart option in data-grid attribute in button
                var temp = $('.btnGrid_MonthlyProductionPlanChart').data("type");
                $('.btnGrid_MonthlyProductionPlanChart').data("type", "temp");
                refreshMonthlyProductionPlanChart()
                $('.btnGrid_MonthlyProductionPlanChart').data("type", temp);
            });

        });

    </script>
</div>
