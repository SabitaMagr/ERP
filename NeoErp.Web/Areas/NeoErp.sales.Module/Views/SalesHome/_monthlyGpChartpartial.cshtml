<style>
    a.icon-arrow-down {
        color: #acacac;
        opacity: 0;
        text-decoration: none !important;
    }

    a.fullscreen {
        text-decoration: none !important;
    }

    ul.dropdown-menu.custom {
        margin-top: 8px !important;
        border: none;
        box-shadow: none !important;
    }

    .dropdown-menu.custom:before {
        left: 58px !important;
    }

    .download-btn {
        margin: 0px !important;
        padding-top: -2px !important;
        padding-left: 0px;
        padding-right: 0px;
        margin-top: -5px !important;
        margin-left: 5px !important;
    }

    .dropdown-menu.custom {
        left: -27px !important;
        top: 20px !important;
    }

    .dropdown > .dropdown-menu:before, .dropdown-toggle > .dropdown-menu:before, .btn-group > .dropdown-menu:before {
        position: absolute;
        top: -8px;
        left: 30px;
        right: auto;
        display: inline-block !important;
        border-right: 8px solid transparent;
        border-bottom: 8px solid #e0e0e0;
        border-left: 8px solid transparent;
        content: '';
    }

    i.icon-arrow-down {
        color: #acacac;
    }

    .btn-group-custom button.btn {
        padding: 7px 7px !important;
        float: left;
    }

    .dropdown-menu.custom {
        left: -55px !important;
    }
    /*.modal-body {
        padding: 31px !important;
    }*/
    a.btnGPDatagrid {
        color: #acacac !important;
    }
</style>


@using NeoErp.Core.Models;
@{
    var actionPageId = "monthlyGpChartpartial";
}
<div class="modal fade" id="Model_@actionPageId" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog custom-chart">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title"><span class="fa fa-bar-chart"></span> GP Chart Settings</h4>
            </div>
            <div class="modal-body bottom-gappingtwo form-horizontal">
                <div class="row">
                    <div class="monthlyGpchart">
                        <div class="col-md-6 col-sm-6 margin_bottom">
                            <div class="btn-group gp-options" data-toggle="buttons" data-type="chart">
                                <button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-bar-chart"></i>
                                    <input id="GptypeColumn" name="seriesType_GP"
                                           type="radio" value="column" checked="checked" autocomplete="off" /> column
                                </button>
                                <button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-bar-chart"></i>
                                    <input id="GptypeBar" name="seriesType_GP"
                                           type="radio" value="bar" autocomplete="off" /> bar
                                </button>
                                <button type="button" class="btn btn-sm default yellow-stripe">
                                    <i class="fa fa-line-chart"></i>
                                    <input id="GptypeLine" name="seriesType_GP"
                                           type="radio" value="line" autocomplete="off" />Line
                                </button>
                                @*<button type="button" class="btn btn-sm default blue-stripe">
                                    <i class="fa fa-area-chart"></i>
                                    <input id="Gptypearea" name="seriesType_GP"
                                           type="radio" value="area" autocomplete="off" />area
                                </button>*@
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 col-sm-6">
                    
                        <div class="date-option">
                            <label>
                                <input type="radio" id="ADFormat" name="DateFormat_monthlyGp" checked="checked" value="AD" /> AD
                            </label>
                            <label>
                                <input type="radio" id="BSFormat" name="DateFormat_monthlyGp" value="BS" /> BS
                            </label>
                        </div>
                        </div>
                    <div class="col-md-12">
                        <div class="icheck-inline check_labels">
                            <label for="showlablesBranch" class="">
                                <input id="showlables_monthlyGp" type="checkbox" autocomplete="off" /> Show Labels
                            </label>
                        </div>
                        <div class="icheck-inline  check_labels">
                            <label>
                                <input id="showzerovalue_monthlyGp" type="checkbox" checked="checked" autocomplete="off" /> Show Zero values series
                            </label>
                        </div>
                        </div>
                    </div>
                
                
                
                    
                        <div class="filter_title">
                            <label class="filter-label">Advance Filter</label>
                        </div>
                        @Html.Partial("~/Views/Shared/Controls/DashboardChartFilter/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowCustomerFilter = false,
                       ShowProductFilter = false,
                       ShowPartyTypeFilter = false,
                       ShowCategoryFilter = false,
                       ShowLocationFilter = false,
                       ShowDocumentFilter = false,
                       ShowCompanyFilter = false,
                       ShowBranchFilter = true,
                       IsPopUp = false,
                       ActionPageId = actionPageId
                   })
                    
               

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn default" data-dismiss="modal">Close</button>*@
                <button type="button" class="btn btn-green applydp" data-dismiss="modal" id="apply_@actionPageId">Apply</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="portlet portlet-sortable  light bordered" id="monthlyGpChartpartial">
    <div class="portlet-title">
        <div class="caption">
            <i class="icon-bar-chart font-green-haze"></i>
            <span class="caption-subject bold uppercase font-green-haze custom-modal">GP Report</span>
        </div>
        <div class="tools">
            <a href="javascript:;" class="collapse"></a>
            <a class="btnGrid btnGPDatagrid" href="javascript:;" data-type="Chart" data-title="Grid">
                <i class="fa fa-table"></i>
            </a>
            <div class="btn-group">
                <a class="btn dropdown-toggle download-btn" title="Download" data-toggle="dropdown" href="#">
                    <i class="icon-arrow-down Nincustom"></i>
                </a>
                <ul class="dropdown-menu custom Ninslidetoggle">
                    <div class="btn-group-custom">
                        <button type="button" data-id="GpMonthlychart" class="export-pdf btn default blue-stripe"><i class="fa fa-file-pdf-o"></i>PDF</button>
                        <button type="button" data-id="GpMonthlychart" class="export-img btn default red-stripe"><i class="fa fa-image-o"></i>Image</button>
                        <button type="button" data-id="GpMonthlychart" class="export-svg btn default green-stripe">SVG</button>
                    </div>
                </ul>
            </div>
            <a href="#Model_@actionPageId" data-toggle="modal" class="config"></a>
            <a href="javascript:;" class="reload"></a>
            <a href="javascript:;" class="fullscreen"></a>
            <a href="javascript:;" class="remove"></a>
        </div>
    </div>
    <div class="portlet-body">
        <script type="text/x-kendo-template" id="toolbar-template">
            <div class="k-header k-grid-toolbar pull-right">

                <a class="k-button k-button-icontext k-grid-excel" href="javascript:">
                    <i class="fa fa-file-excel-o"></i>
                </a>
        </script>
        <div class="k-content wide">
            <div id="GpMonthlychart"></div>
            <div class="AmountFigureType"></div>
            <div class="DisplayFilterContent"><a href="javascript:;" data-toggle="tooltip" title=""></a></div>
        </div>
    </div>
    <script>
        var toggleFlag_monthlyGpChartpartial = true;
        var Monthsseries = [{
            field: "TotalProfitPer",
            name: "Total Profit"
        }];
        var GpChartUrlData = null;
        function createGPChart(urlData) {
            urlData = (urlData == undefined) ? "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=" : urlData;
            GpChartUrlData = urlData;
            var dateformat = $("input[name=DateFormat_monthlyGp]:checked").val();
            var mainUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetGPMonthWiseReport";
            var daywiseUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetGPDayWiseReport";
            var IsDataGrid = $('.btnGPDatagrid').data("type");
             reportFilter = reportFilter == undefined ? ReportFilter.filterAdditionalData() : reportFilter;
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: mainUrl + urlData + "&DateFormat=" + dateformat, // <-- Get data from here.
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, reportFilter));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },
                requestStart: function () {
                    if (IsDataGrid != "Grid") {
                        kendo.ui.progress($("#GpMonthlychart"), true);
                    }
                },
                requestEnd: function () {
                    kendo.ui.progress($("#GpMonthlychart"), false);
                },
                serverSorting: false,
                serverPaging: false,
                serverFiltering: false,
                pageSize: 20,
            });
            dataProvider = dataSource;
            $("#monthlyGpChartpartial .DisplayFilterContent a").text("");

            if (IsDataGrid == "Grid") {
                GenerateDataGrid_GPChart(dataSource);
                return;
            }

            $("#GpMonthlychart").kendoChart({
                chartArea: {
                    height: ($("#monthlyGpChartpartial").hasClass("portlet-fullscreen")) ? 550 : 350,
                },
                legend: {
                    position: "bottom"
                },
                seriesDefaults: {
                    type: $("input[name=seriesType_GP]:checked").val(),
                    stack: false,
                    labels: {
                        visible: $("#showlables_monthlyGp").prop("checked"),
                        template: "#= FormatLabels(value)# %",
                        rotation: '270',
                        //padding: {
                        //    left: -5
                        //},
                    },
                },
                dataSource: dataSource,
                onDrag: function (e) {
                    var chart = e.sender;
                    var ds = chart.dataSource;
                    var options = chart.options;

                    var categoryRange = e.axisRanges.CategoryAxis;

                    if (categoryRange) {
                        var xMin = categoryRange.min;
                        var xMax = categoryRange.max;
                        options.categoryAxis.min = xMin;
                        options.categoryAxis.max = xMax;
                        ds.filter(viewModel.getFilter(xMin, xMax));
                    }
                },

                pannable: {
                    lock: "y"
                },
                zoomable: {
                    mousewheel: {
                        lock: "y"
                    },
                    selection: {
                        lock: "y"
                    }
                },
                series: Monthsseries,
                seriesColors: ["#428bca", "#da3b36", "#e67d4a", "#5bc0de", "#5cb85c", "#f2b661"],

                categoryAxis: [{
                    visible: false
                },
                  {
                      field: "MonthsDisplayName",
                      name: "Total Profit",
                  }],
                valueAxis: {
                    majorUnit: 20,
                    max: 100,
                    min: -100,
                    axisCrossingValue: [0, -1e6, -1e6],
                    line: {
                        visible: true,
                    },
                    labels: {
                        template: "#= value #%"
                    },
                    title: { text: amountFigureType }
                },

                tooltip: {
                    visible: true,
                    format: "{0}",
                    template: "#= FormatLabels(value)#%"
                },

                seriesClick: function (e) {
                    var month = null;
                    var dateformat = $("input[name=DateFormat_monthlyGp]:checked").val();
                    month = (dateformat == "AD") ? e.dataItem.MonthsName : e.dataItem.MonthsDisplayName;
                    if (month == null) {
                        return false;
                    }
                    var url = daywiseUrl + urlData + "&month=" + month + "&DateFormat=" + dateformat;
                    var dataSourcetest = new kendo.data.DataSource({
                        transport: {
                            read: {
                                url: url,
                                dataType: "json", // <-- The default was "jsonp".
                                type: "POST",
                                contentType: "application/json; charset=utf-8"
                            },
                            parameterMap: function (options, type) {
                                var paramMap = JSON.stringify($.extend(options, reportFilter));
                                delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                                delete paramMap.$format; // <-- remove format parameter.
                                return paramMap;
                            }
                        },
                        requestStart: function () {
                            kendo.ui.progress($("#GpMonthlychart"), true);
                        },
                        requestEnd: function () {
                            kendo.ui.progress($("#GpMonthlychart"), false);
                        },
                        sort: {
                            field: "day",
                            dir: "asc"
                        }
                    });
                    var chart = $("#GpMonthlychart").data("kendoChart");

                    type = $("input[name=seriesType_GP]:checked").val(),
                    chart.options.series[0].field = "TotalSalesAmount";
                    //chart.options.series[1].field = "Quantity";

                    chart.setOptions({
                        seriesColors: ["#5cb85c", "#da3b36", "#e67d4a", "#5bc0de", "#428bca", "#f2b661"],
                        categoryAxis: [{
                            visible: false
                        },
                  {
                      field: "day",
                      labels: {
                          rotation: -45,
                          template: "#: value #",
                      },                     
                  }],
                    });
                    chart.setDataSource(dataSourcetest);
                    chart.refresh();
                },
            });
        }
        var defaultDateFormat_MonthlyGp="";
        $(document).ready(function () {
            defaultDateFormat_MonthlyGp = $('input[name=DateFormat_monthlyGp]:checked').val();
            //Custom tooltip for the pdf download
            $('[title="Download"]').tooltip({
                //tooltip dissapear after click
                trigger: 'hover'
            });

            $('.icon-arrow-down.Nincustom').click(function () {
                $('.dropdown-menu.custom.Ninslidetoggle').slideToggle(200);
            });


            createGPChart(),
            //$(document).bind("kendo:skinChange", createWeeklyCollectionChart);
            $(".gp-options").bind("change", function () {
                if ($('.btnGPDatagrid').data("type") == "Chart")
                    refreshGPChart();
                else
                    chart_grid_option_change("btnGPDatagrid", "createGPChart");
            });
            $('#GpMonthlychart').closest('.portlet').find('.reload').click(function () {
                var urlData = "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=";
                createGPChart();
                RefreshChartFilterControl('@actionPageId');
            });
            $('#GpMonthlychart').closest('.portlet').find('.config').click(function () {
                $(this).closest('.portlet').css('zIndex', 10040);
            });
            //Here we go for pdf download
            $('#GpMonthlychart').closest('.portlet').find('.icon-arrow-down').click(function () {
                $(this).closest('.portlet').css('zIndex', 10040);
            });

            $('#GpMonthlychart').closest('.portlet').find('.fullscreen').click(function () {
                if ($(this).hasClass("on")) {
                    $("#GpMonthlychart").data("kendoChart").options.chartArea.height = 350;
                }
                else {
                    $("#GpMonthlychart").data("kendoChart").options.chartArea.height = 550;
                }
                $("#GpMonthlychart").data("kendoChart").dataSource.read();
                $("#GpMonthlychart").data("kendoChart").refresh();
            });

            $("#showlables_monthlyGp").bind("change", function () {
                var temp = $('.btnGPDatagrid').data("type");
                $('.btnGPDatagrid').data("type", "temp");
                refreshGPChart();
                $('.btnGPDatagrid').data("type", temp);
            });
        });
        function refreshGPChart() {
            if ($(".btnGPDatagrid").attr("data-type") == "Grid")// data-grid toogle chart option in data-grid attribute in div
            {
                $(".btnGPDatagrid").attr("data-type", "Chart");
                createGPChart();
                return;
            }
            var chart = $("#GpMonthlychart").data("kendoChart"),
                type = $("input[name=seriesType_GP]:checked").val(),
                fieldtype = $("input[name=fieldType]:checked").val(),
                labels = $("#showlables_monthlyGp").prop("checked");

            chart.options.series[0].type = type;
            chart.options.series[0].labels.visible = labels;
            if (type == "column") {
                chart.options.series[0].labels.rotation = -90;
            }
            if (type == "bar") {
                chart.options.series[0].labels.rotation = 0;
            }
            chart.refresh();
        }
        $("#showzerovalue_monthlySales").on("change", function () {
            createGPChart();
            RefreshChartFilterControl('@actionPageId');
        });

        $('#apply_@actionPageId').click(function () {
            var checkedDateFormat = $('input[name=DateFormat_monthlyGp]:checked').val();
            var IsDateChanged = false;
            if (defaultDateFormat_MonthlyGp != checkedDateFormat) {
                IsDateChanged = true;
                defaultDateFormat_MonthlyGp = checkedDateFormat;
            }
            ChartFilter('@actionPageId', "createGPChart",IsDateChanged);
        });


        $("#GpMonthlychart").on('dblclick', ".k-state-selected", function (e) {
            var grid = $("#GpMonthlychart").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            var dateformat = $("input[name=DateFormat_monthlyGp]:checked").val();
            selectedItem.MonthsName = selectedItem.MonthsName != null ? selectedItem.MonthsName : selectedItem.MonthsDisplayName;
            if (selectedItem.MonthsName != null) {
                var daywiseUrl = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetGPDayWiseReport";
                var url = daywiseUrl + GpChartUrlData + "&month=" + selectedItem.MonthsName + "&DateFormat=" + dateformat;
                var dataSourcetest = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: url,
                            dataType: "json", // <-- The default was "jsonp".
                            type: "POST",
                            contentType: "application/json; charset=utf-8"
                        },
                        parameterMap: function (options, type) {
                            var paramMap = JSON.stringify($.extend(options, reportFilter));
                            delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                            delete paramMap.$format; // <-- remove format parameter.
                            return paramMap;
                        }
                    },
                    sort: {
                        field: "day",
                        dir: "asc"
                    }
                });
                //
                $("#GpMonthlychart").html('');
                $("#GpMonthlychart").kendoGrid({
                    dataSource: dataSourcetest,
                    groupable: false,
                    sortable: true,
                    toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                    excel: {
                        fileName: "GP Report",
                        allPages: true
                    },
                    columns: [{
                        field: "day",
                        title: "Days [month : " + selectedItem.MonthsName + "]",
                    },
                    {
                        field: "TotalLandedCost",
                        title: "Total Landed Cost",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    }, {
                        field: "TotalSalesAmount",
                        title: "Total Sales Amount",
                        format: "{0:n}",
                        attributes: {
                            style: "text-align: right;"
                        },
                    },
                    {
                        field: "TotalProfitPer",
                        title: "Total Profit Per"
                    }, ]
                });
            }
        })

        //GenerateDataGrid_GPChart function for data-grid
        function LoadDataGrid_GPChart(dataSource, monthField) {
            $("#GpMonthlychart").html('');
            $('btnGPDatagrid').data("type", "Grid");
            dataSource = dataSource == undefined ? $("#GpMonthlychart").data("kendoChart").dataSource : dataSource;
            if (monthField == undefined)
                if (dataSource.data().length > 0 && dataSource.data()[0].day != null)
                    monthField = "day";
                else
                    monthField = "MonthYear";
            if ($("input[name=DateFormat_SalesCollection]:checked").val() == "BS") {
                monthField = "NepaliMonth";
            }
            $("#GpMonthlychart").kendoGrid({
                dataSource: dataSource,
                groupable: false,
                sortable: true,
                selectable: "multiple",
                toolbar: [{ template: kendo.template($("#toolbar-template").html()) }],
                excel: {
                    fileName: "GP Report",
                    allPages: true
                },
                columns: [{
                    field: "MonthsDisplayName",
                    title: "Months",
                },
                {
                    field: "TotalLandedCost",
                    title: "Total Landed Cost",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                },
                {
                    field: "TotalSalesAmount",
                    title: "Total Sales Amount",
                    format: "{0:n}",
                    attributes: {
                        style: "text-align: right;"
                    },
                },
                {
                    field: "TotalProfitPer",
                    title: "Total Profit Per"
                }, ]
            });
        }


        function GPChartData() {
            var urlData = "?customerCode=&itemCode=&categoryCode=&companyCode=&branchCode=" + branchCodes + "&partyTypeCode=&formCode=";
            $('.btnGPDatagrid').data("type", "Chart");
            createGPChart();
            RefreshChartFilterControl('@actionPageId');

        }



        $(".btnGPDatagrid").click(function () {
            $('.btnGPDatagrid').data("type") == "Chart" ? LoadDataGrid_GPChart() : GPChartData();
            $("i", this).toggleClass("icon-bar-chart");
        });


        function GenerateDataGrid_GPChart(datasource) { // data-grid function onClick event of button DataGrid
            $('.btnGPDatagrid').data("type", "Grid");
            var chart = $("#GpMonthlychart").data("kendoChart");
            if (datasource == undefined || datasource == null) {
                LoadDataGrid_GPChart(chart.dataSource);
            }
            else {
                LoadDataGrid_GPChart(datasource);
            }

        }
    </script>
    <script>
        //$("input[name=DateFormat_monthlyGp]").on('change', function () {
        //    $this = $(this);
        //    var mainUrlForBS = window.location.protocol + "//" + window.location.host + "/api/SalesDashboard/GetGPMonthWiseReport";
        //    var dataSourcetest = new kendo.data.DataSource({
        //        transport: {
        //            read: {
        //                url: mainUrlForBS + GpChartUrlData + "&DateFormat=" + $this.val(),
        //                dataType: "json",
        //                type: "POST",
        //                contentType: "application/json; charset=utf-8"
        //            },
        //            parameterMap: function (options, type) {
        //                var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
        //                delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
        //                delete paramMap.$format; // <-- remove format parameter.
        //                return paramMap;
        //            }
        //        },
        //        //sort: {
        //        //    field: sortAxis,
        //        //    dir: "asc"
        //        //}

        //    });
        //    // data-grid set option on ceate funciton
        //    var IsDataGrid = $('.btnGPDatagrid').data("grid");
        //    if (IsDataGrid == "Grid") {
        //        LoadDataGrid_GPChart(dataSourcetest);
        //        return;
        //    }
        //    var chart = $("#GpMonthlychart").data("kendoChart");
        //    chart.setDataSource(dataSourcetest);
        //    chart.refresh();
        //})
        //Export 
        $(".export-pdf").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({

                    dataURI: data,
                    fileName: filename + ".pdf",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });

        $(".export-img").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportImage().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".png",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export",

                });
            });
        });

        $(".export-svg").click(function () {
            var chartid = $(this).data("id");
            var chart = $("#" + chartid).getKendoChart();
            var filename = $(this).closest(".portlet-title").find(".custom-modal").html();
            chart.exportSVG().done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: filename + ".svg",
                    proxyURL: "//demos.telerik.com/kendo-ui/service/export"
                });
            });
        });


        function FormatSeriesLabels(value) {
            if (isNaN(value))
                value = 0;
            var decimalPlaces = 2;
            if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != "" && ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter != undefined) {
                if (ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".").length > 1)
                    decimalPlaces = ReportFilter.filterAdditionalData().ReportFilters.AmountRoundUpFilter.split(".")[1].length;
                else
                    decimalPlaces = 0;
            }

            if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Lakh") {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            } else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Thousand") {
                value = (value / 1000).toFixed(decimalPlaces) + " K";
            }
            else if (ReportFilter.filterAdditionalData().ReportFilters.AmountFigureFilter == "Crore") {
                value = (value / 10000000).toFixed(decimalPlaces) + " C";
            }
            else {
                value = (value / 100000).toFixed(decimalPlaces) + " L";
            }
            return kendo.format("{0:n" + ReportFilter.parseDecimalPlace("AmountRoundUpFilter").toString() + "}", value);
        }
    </script>
</div>
