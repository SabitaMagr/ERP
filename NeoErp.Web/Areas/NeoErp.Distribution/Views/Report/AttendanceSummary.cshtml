
@using NeoErp.Core.Models;
@using NeoErp.Core;
@using NeoErp.Core.Infrastructure;
@{
    Layout = null;
    var workingContent = EngineContext.Current.Resolve<IWorkContext>();
}
<style>
    div.k-grid-header th.k-header, tr.k-filter-row > th {
        text-align: center;
        // width: 183px !important;
    }

    .k-footer-template div {
        border-bottom: none;
    }
    /*.page-bar {
        margin-bottom: 0px !important;
    }*/

    .k-grid table {
        table-layout: fixed;
    }

    .no-data {
        background-color: red;
    }
    /*#grid thead{
         font-size:11px;
    }*/
    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .k-grid-content {
        font-size: 10px;
    }

    .k-grid-footer {
        font-size: 10px;
    }

    .floatright {
        float: right;
        margin-top: 2px !important;
    }

    a.k-button.k-button-icontext.k-grid-excel {
        float: right;
    }

    .bootbox-form {
        padding: 3px !important;
    }

    .bootbox-input.bootbox-input-text.form-control {
        height: 27px !important;
    }
</style>

<style type="text/css">
    #spDetailLocationMap {
        width: 100%;
        height: 450px;
        background-color: grey;
    }

    #legend {
        font-family: Arial, sans-serif;
        background: #fff;
        border: 3px solid #000;
        display: inline-flex;
    }

        #legend h3 {
            margin-top: 0;
        }

        #legend img {
            vertical-align: middle;
        }
</style>
<script>
    var a = location.hash;
    var b = location.pathname;
    var url = (b + a);
    $(".active").removeClass();
    $("a[href='" + url + "']").parent().addClass("active");
    $("a[href='" + url + "']").parent().parent().slideDown("slow");
</script>
<div class="content">
    <!--MODAL-->
    <div id="mapModal" class="modal fade" role="dialog">
        <div class="modal-dialog" style="width:65%;height:80%">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Location Details</h4>
                </div>
                <div class="modal-body">
                    <div id="spDetailLocationMap"></div>
                    <div id="legend"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!--END MODAl-->
    <div class="page-bar">
        <ul class="page-breadcrumb"></ul>
        <div class="page-toolbar">
            <div class="btn-group pull-right">

                <div class="actions">
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/DateField.cshtml", false)
                    </div>
                    @Html.Partial("~/Views/Shared/Controls/ConsolidateFilter.cshtml", true)

                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                   {
                       ShowItemBrandFilter = true,
                   })
                    </div>
                    <a class="btn btn-circle btn-icon-only btn-default" id="RunQuery" href="#">
                        <i class="icon-control-play"></i>
                    </a>
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_ReportConfig.cshtml", "EOD")
                    </div>

                </div>
            </div>
        </div>
    </div>

    <!-- END PAGE HEADER-->
    <!-- BEGIN PAGE CONTENT-->
    <div class="row collapse in" id="demo">
        <div class="col-md-12">
            <div class="portlet light bordered">
                <div class="portlet-body form">
                    <div class="row">
                        <div id="grid"></div>
                        <script type="text/x-kendo-template" id="template">
                            <div class="details" style="width:100%"></div>
                        </script>
                        @Html.Partial("~/Views/Shared/Controls/_GridToolbar.cshtml")
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END PAGE CONTENT-->
</div>

<script src="@Scripts.Url("~/JS/reportFilter.js")"></script>

<script src="@Scripts.Url("~/JS/DateFilter.js")" type="text/javascript"></script>

<script>
    var map = {};
    var markerAtn = {};
    var markerEod = {};
    $(document).ready(function () {


    });
</script>

<script>

    //var reportConfig = GetReportSetting("EOD");
    var expandedDetailRowDistributor = "";

    function getDateFormat(date) {
        var test = new Date(date);
        if (test.getFullYear() == '1970')
            return '-';
        return kendo.format("{0:" + reportConfig.dateFormat + "}", new Date(date));
    }
    function getTimeFormat(date) {
        var test = new Date(date);
        if (test.getFullYear() == '1970')
            return '-';
        return kendo.format("{0:hh:mm tt}", moment(date)._d)
    }
    function ExportToExcel(e) {
        var SheetRow = [];//array to store the rows
        SheetRow.push({ //Header
            cells: [
                { value: "Customer Name", background: "#A9A7A6", },
                { value: "Customer Type", background: "#A9A7A6", },
                { value: "Assign Route", background: "#A9A7A6", },
                { value: "Assign To", background: "#A9A7A6", },
                { value: "Visit Type", background: "#A9A7A6", },
                { value: "Visited By", background: "#A9A7A6", },
                { value: "Date", background: "#A9A7A6", },
                { value: "Time", background: "#A9A7A6", },
                { value: "Distance(KM)", background: "#A9A7A6", },
                { value: "Remarks", background: "#A9A7A6", },
            ]
        });
        WriteData(e.data);

        //recursive function to write the grouped/ungrouped data
        function WriteData(array) {
            array.forEach(function (row, index) {
                if (typeof (row.items) != "undefined") { //if array contains nested items, write a row with group field and enter recursion
                    Mvalue = row.value;
                    MField = row.field;
                    if (MField == "Visit_Date") {
                        Mvalue = getDateFormat(Mvalue);
                        MField="Date"
                    }
                    else if (MField == "ASSIGN_DATE") {
                        Mvalue = getDateFormat(Mvalue);
                        MField = "Assign Date"
                    }
                    else if (row.field == "Visit_Time") {
                        Mvalue = getTimeFormat(Mvalue);
                        MField = "Visit Time"
                    }
                    SheetRow.push({
                        cells: [{
                            value: MField + " : " + Mvalue,
                            background: "#E1E1E1",
                            colSpan: 10,//to span the total number of columns
                            fontSize: 12,
                        }]
                    });
                    WriteData(row.items);
                }
                else {
                    var dist = differenceDownload(row.CUST_LAT, row.CUST_LONG, row.VISIT_LAT, row.VISIT_LONG, 'K', row.Visit_Type);
                    var distColor = dist < 0.3 ? "#008000" : "#ff0000";
                    SheetRow.push({ //Header
                        cells: [
                            { value: row.CUSTOMER_NAME },
                            { value: customerType(row.CUSTOMER_TYPE) },
                            { value: (row.Assigned_ROUTE !== null && row.Assigned_ROUTE != '-') ? row.Assigned_ROUTE_NAME + '(' + row.Assigned_ROUTE + ')' : '-' },
                            { value: row.Assigned_Employee },
                            { value: row.Visit_Type },
                            { value: row.VISIT_BY },
                            { value: getDateFormat(row.ASSIGN_DATE) },
                            { value: getTimeFormat(row.Visit_Time) },
                            { value: dist, color: distColor },
                            { value: row.REMARKS },
                        ]
                    });
                }
            });
        }
        //initializing a workbook with above prepared rows
        var Workbook = new kendo.ooxml.Workbook({
            sheets: [{
                columns: [
                    @for(int i=0;i<10; i++)
                    {
                        <text>{ autoWidth: true },</text>
                    }
                ],
                rows: SheetRow,
            }]
        });
        //finally saving the excel sheet
        kendo.saveAs({
            dataURI: Workbook.toDataURL(),
            fileName: "Visit Summary Report.xlsx"
        });
    }

    $(".applydp").on("click", function (evt) {
        evt.preventDefault();
        $("#RunQuery").trigger("click");
        $(this).closest("#applydp").modal('hide');
    });

    $("#loadAdvancedFilters").on("click", function (evt) {
        evt.preventDefault();
        $("#RunQuery").trigger("click");
    });

    $("#RunQuery").click(function (evt) {
        evt.preventDefault();
        var urltest = window.location.protocol + "//" + window.location.host + "/api/Report/GetAttendanceSummaryGroupWise";
        KendoGridRefresh(urltest);
    });



    function BindGrid(readurl) {
        var branches = ReportFilter.getBranchs();
        reportConfig = GetReportSetting("AttendanceSummary");
        var grid = $("#grid").kendoGrid({
            dataSource: new kendo.data.DataSource({
                type: "json",
                transport: {
                    read: {
                        url: readurl, // <-- Get data from here.
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },

                error: function (e) {
                    displayPopupNotification("Sorry error occured while processing data", "error");
                },
                model: {
                    fields: {
                        SUBMIT_DATE: { type: "date" },
                    }
                },
                pageSize: reportConfig.defaultPageSize,
            }),
            toolbar: kendo.template($("#toolbar-template").html()),
            excel: {
                fileName: "Visit Summary Report",
                allPages: true,
            },
            excelExport: function (e) {

                ExportToExcel(e);
                e.preventDefault();
            },
            pdf: {
                fileName: "Received Schedule",
                allPages: true,
                avoidLinks: true,
                pageSize: "auto",
                margin: {
                    top: "2m",
                    right: "1m",
                    left: "1m",
                    buttom: "1m",
                },

                landscape: true,
                repeatHeaders: true,
                scale: 0.8,
            },
            height: 550,
            sortable: true,
            reorderable: true,
            groupable: true,
            resizable: true,
            filterable: {
                extra: false,
                operators: {
                    number: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "is greater than or equal to	",
                        gt: "is greater than",
                        lte: "is less than or equal",
                        lt: "is less than",
                    },
                    string: {

                        eq: "Is equal to",
                        neq: "Is not equal to",
                        startswith: "Starts with	",
                        contains: "Contains",
                        doesnotcontain: "Does not contain",
                        endswith: "Ends with",
                    },
                    date: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "Is after or equal to",
                        gt: "Is after",
                        lte: "Is before or equal to",
                        lt: "Is before",
                    }
                }
            },
            columnMenu: true,
            columnMenuInit: function (e) {
                wordwrapmenu(e);
                checkboxItem = $(e.container).find('input[type="checkbox"]');
            },
            columnShow: function (e) {
                if ($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                    SaveReportSetting('EOD', 'grid');
            },
            columnHide: function (e) {
                if ($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                    SaveReportSetting('EOD', 'grid');
            },
            detailTemplate: kendo.template($("#template").html()),
            detailInit: detailInit,
            pageable: {
                refresh: true,
                pageSizes: reportConfig.itemPerPage,
                buttonCount: 5
            },
            dataBound: function (o) {
                var grid = o.sender;
                if (grid.dataSource.total() == 0) {
                    var colCount = grid.columns.length;
                    $(o.sender.wrapper)
                        .find('tbody')
                        .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                    displayPopupNotification("No Data Found Given Date Filter.", "info");
                }
                else {
                    var g = $("#grid").data("kendoGrid");
                    for (var i = 0; i < g.columns.length; i++) {
                        g.showColumn(i);
                    }
                    $("div.k-group-indicator").each(function (i, v) {
                        g.hideColumn($(v).data("field"));
                    });
                }

                UpdateReportUsingSetting("AttendanceSummary", "grid");
                $('div').removeClass('.k-header k-grid-toolbar');
            },
            columns: [
                           {
                    field: "GroupName",
                               title: "Code",
                               width: "170px"
                           },
                               {
                                   field: "TotalPresent",
                                   title: "Total Present",
                                   attributes:
                                   {
                                       style: "text-align:right;"
                                   },
                                   width: "90px"
                               },

                           {
                               field: "TotalAbsent",
                               title: "Total Absent",
                               attributes:
                               {
                                   style: "text-align:right;"
                               },
                               width: "90px"
                           },
                           {
                               field: "TotalLeave",
                               title: "Total Leave",
                               attributes:
                               {
                                   style: "text-align:right;"
                               },
                               width: "90px"
                           },
                               {

                                   field: "DayOff",
                                   title: "Day Off",
                                   attributes:
                                   {
                                       style: "text-align:right;"
                                   },
                                   width: "90px"
                               },

                          {
                              field: "Holiday",
                              title: "Holiday",
                              attributes:
                              {
                                  style: "text-align:right;"
                              },
                              width: "90px"
                          },
                          {

                              field: "WorkAtDayOff",
                              title: "Work At Day Off",
                              attributes:
                              {
                                  style: "text-align:right;"
                              },
                              width: "90px"
                          }, {

                              field: "WorkAtHoliday",
                              title: "Work At Holiday",
                              attributes:
                              {
                                  style: "text-align:right;"
                              },
                              width: "90px"
                          }
                , {

                    field: "TARGET",
                    title: "Target Total",
                    attributes:
                    {
                        style: "text-align:right;"
                    },
                    width: "90px"

                          }, {

                    field: "TOTAL_VISIT",
                    title: "Visited Total",
                    attributes:
                    {
                        style: "text-align:right;"
                    },
                    width: "90px"
                },
                {

                    field: "PRODUCTIVE",
                    title: "Productive",
                    width: "90px",
                     attributes:
                    {
                        style: "text-align:right;"
                    }
                },{

                    field: "Effective",
                    title: "Effective %",
                    width: "90px",
                    attributes:
                    {
                        style: "text-align:right;"
                    },
                    template: function (dataItem) {
                        return "<span>" + kendo.toString(dataItem.Effective, 'n2') + " %</span>";
                    },
                },  {

                    field: "Coverage",
                    title: "Coverage %",
                    width: "90px",
                    attributes:
                    {
                        style: "text-align:right;"
                    },
                    template: function (dataItem) {
                        return "<span>" + kendo.toString(dataItem.Coverage, 'n2') + " %</span>";
                    },
                          }
            ]

        });

    }


    function KendoGridRefresh(readUrl) {
        $('#grid').data("kendoGrid").destroy();
        $('#grid').val('');
        $('#grid').html('');
        BindGrid(readUrl)
    }

    function detailInit(e) {
        var detailRow = e.detailRow;
        var Rowdata = e.data;
        recordCount = 0;
        debugger;
       
        //  var companyCode = Rowdata.COMPANY_CODE;
       // var companyCode = ReportFilter.getCompanyFilter().join("','");


        detailRow.find(".details").kendoGrid({
            dataSource: new kendo.data.DataSource({
                type: "json",
                batch: true,
                transport: {
                    read: {
                        url: window.location.protocol + "//" + window.location.host + "/" + "api/Report/GetAttendanceSummaryEmployeeWise?GroupWise=" + Rowdata.GroupName,
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },
                error: function (e) {
                    displayPopupNotification("Sorry error occured while processing data", "error");
                },
                //serverFiltering: false,
                //serverGrouping: false,
                //serverAggregates: false,
                //serverPaging: false,
        
                pageSize: 100,
                pageable: true,
            }),
            sortable: true,
            pageable: false,
            sortable: true,
            reorderable: true,
            resizable: true,
            scrollable: {
                virtual: true
            },
            columns: [
                {
                    field: "FULL_NAME",
                    title: "Name",
                    width: "170px"
                },
                {
                    field: "TotalPresent",
                    title: "Total Present",
                    width: "90px"
                },

                {
                    field: "TotalAbsent",
                    title: "Total Absent",
                    width: "90px"
                },
                {
                    field: "TotalLeave",
                    title: "Total Leave",
                    width: "90px"
                },
                {

                    field: "DayOff",
                    title: "Day Off",
                    width: "90px"
                },

                {
                    field: "Holiday",
                    title: "Holiday",
                    width: "90px"
                },
                {

                    field: "WorkAtDayOff",
                    title: "Work At Day Off",
                    width: "90px"
                }, {

                    field: "WorkAtHoliday",
                    title: "Work At Holiday",
                    width: "90px"
                }, {

                    field: "TARGET",
                    title: "Target Total",
                    width: "90px"
                }, {

                    field: "TOTAL_VISIT",
                    title: "Visited Total",
                    width: "90px"
                }, {

                    field: "PRODUCTIVE",
                    title: "Productive calls",
                    width: "90px"
                }, {

                    field: "Coverage",
                    title: "Coverage%",
                    width: "90px"
                }
            ]

        });
      

    };

    $(document).ready(function () {
        var urltest = window.location.protocol + "//" + window.location.host + "/api/Report/GetAttendanceSummaryGroupWise"
        //  BindGrid(urltest);
        DateFilter.init(function () {
            consolidate.init(function () {
                BindGrid(urltest);
                google.maps.event.trigger(map, "resize"); //trigger resize event and hide the map model
                $("#mapModal").modal('hide');             //the map is loaded and works fine
            });
        });
    });
</script>
<script src="@Scripts.Url("~/Areas/NeoErp.Distribution/js/MenuNavigation.js")"></script>