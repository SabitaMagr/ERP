
@using NeoErp.Core.Models;
@using NeoErp.Core;
@using NeoErp.Core.Infrastructure;
<style>
    div.k-grid-header th.k-header, tr.k-filter-row > th {
        text-align: center;
    }

    .k-footer-template div {
        border-bottom: none;
    }

    /*.page-bar {
        margin-bottom: 0px !important;
    }*/

    .k-grid table {
        table-layout: fixed;
    }

    .no-data {
        background-color: red;
    }
    /*#grid thead{
         font-size:11px;
    }*/
    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .k-grid table thead th {
        font-size: 11px;
    }

    .k-grid table td {
        font-size: 10px;
    }
    /*.k-grid-content {
        font-size: 10px;
    }

    .k-grid-footer {
        font-size: 10px;
    }*/
    .floatright {
        float: right;
        margin-top: 2px !important;
    }

    /*a.k-button.k-button-icontext.k-grid-excel {
        float: right;
    }*/

    .bootbox-form {
        padding: 3px !important;
    }

    .bootbox-input.bootbox-input-text.form-control {
        height: 27px !important;
    }
    /*.k-grid-header {
        font-size: 11px;
    }
    .k-grouping-header {
        font-size: 12px;
    }*/
    .k-state-active, .k-state-active:hover, .k-active-filter, .k-tabstrip .k-state-active {
        border-color: #7c736e !important;
    }
</style>

<script>
    var a = location.hash;
    var b = location.pathname;
    var url = (b + a);
    $(".active").removeClass();
    $("a[href='" + url + "']").parent().addClass("active");
    $("a[href='" + url + "']").parent().parent().slideDown("slow");
</script>
<div class="content">
    <div class="page-bar">
        <ul class="page-breadcrumb"></ul>
        <div class="page-toolbar">
            <div class="btn-group pull-right">

                <div class="actions">

                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/DateField.cshtml", false)
                    </div>
                    @Html.Partial("~/Views/Shared/Controls/ConsolidateFilter.cshtml", true)

                    @*<div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_AdvancedFilter.cshtml", new AdvancedFilterSettingsModel()
                        {
                            ShowItemBrandFilter= true,
                        })
                    </div>*@
                    <a class="btn btn-circle btn-icon-only btn-default" id="RunQuery" href="#">
                        <i class="icon-control-play"></i>
                    </a>
                    <div class="btn-group">
                        @Html.Partial("~/Views/Shared/Controls/_ReportConfig.cshtml", "EmployeeWisePerformance")
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class="row collapse in" id="demo">
        <div class="col-md-12">
            <div class="portlet light bordered">
                <div class="portlet-body form">
                    <div class="row">
                        <div id="grid"></div>
                        <script type="text/x-kendo-template" id="template">
                            <div class="tabstrip">
                                <ul>
                                    <li class="k-state-active">PJP-Productive</li>
                                    <li>PJP-Non-Productive</li>
                                    <li>Brand Wise</li>
                                </ul>
                                <div>
                                    <div class="PJP-Productive"></div>
                                </div>
                                <div>
                                    <div class="PJP-Non-Productive"></div>
                                </div>
                                <div>
                                    <div class="BrandWise"></div>
                                </div>
                            </div>

                        </script>
                        @Html.Partial("~/Views/Shared/Controls/_GridToolbar.cshtml")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="@Scripts.Url("~/JS/reportFilter.js")"></script>
<script src="@Scripts.Url("~/JS/DateFilter.js")" type="text/javascript"></script>

<script>

    getDateFormat = function (date) {
        var test = new Date(date);
        if (test.getFullYear() == '1970')
            return '-';
        return kendo.format("{0:" + reportConfig.dateFormat + "}", new Date(date));
    }
    $(".applydp").on("click", function (evt) {
        evt.preventDefault();
        $("#RunQuery").trigger("click");
        $(this).closest("#applydp").modal('hide');
    });

    $("#loadAdvancedFilters").on("click", function (evt) {
        evt.preventDefault();
        $("#RunQuery").trigger("click");
    });

    $("#RunQuery").click(function (evt) {
        evt.preventDefault();
        KendoGridRefresh();
    });
    function BindGrid() {
        reportConfig = GetReportSetting("EmployeeWisePerformance");
        var grid = $("#grid").kendoGrid({
            dataSource: new kendo.data.DataSource({
                type: "json",
                transport: {
                    read: {
                        url: window.location.protocol + "//" + window.location.host + "/api/Report/GetALLEmployeeReport",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    }
                },

                error: function (e) {
                    displayPopupNotification("Sorry error occured while processing data", "error");
                },
                model: {
                    fields: {
                        TARGET: { type: "number" },
                        VISITED: { type: "number" },
                        NOT_VISITED: { type: "number" },
                        PJP_PRODUCTIVE: { type: "number" },
                        PJP_NON_PRODUCTIVE: { type: "number" },
                        NPJP_PRODUCTIVE: { type: "number" },
                        PERCENT_EFFECTIVE_CALLS: { type: "number" },
                        TOTAL_QUENTITY: { type: "number" },
                        TOTAL_AMOUNT: { type: "number" },
                    }
                },
                pageSize: reportConfig.defaultPageSize,
            }),
            toolbar: kendo.template($("#toolbar-template").html()),
            excel: {
                fileName: "Employee Wise Performance",
                allPages: true,
            },
            height: 550,
            sortable: true,
            reorderable: true,
            groupable: true,
            reorderable: false,
            resizable: true,
            filterable: {
                extra: false,
                operators: {
                    number: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "is greater than or equal to	",
                        gt: "is greater than",
                        lte: "is less than or equal",
                        lt: "is less than",
                    },
                    string: {

                        eq: "Is equal to",
                        neq: "Is not equal to",
                        startswith: "Starts with	",
                        contains: "Contains",
                        doesnotcontain: "Does not contain",
                        endswith: "Ends with",
                    },
                    date: {
                        eq: "Is equal to",
                        neq: "Is not equal to",
                        gte: "Is after or equal to",
                        gt: "Is after",
                        lte: "Is before or equal to",
                        lt: "Is before",
                    }
                }
            },
            columnMenu: true,
            columnMenuInit: function (e) {
                wordwrapmenu(e);
                checkboxItem = $(e.container).find('input[type="checkbox"]');
            },
            columnShow: function (e) {
                if ($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                    SaveReportSetting('EmployeeWisePerformance', 'grid');
            },
            columnHide: function (e) {
                if ($(".k-widget.k-reset.k-header.k-menu.k-menu-vertical").is(":visible") && checkboxItem != "")
                    SaveReportSetting('EmployeeWisePerformance', 'grid');
            },
            detailTemplate: kendo.template($("#template").html()),
            detailInit: detailInit,
            pageable: {
                refresh: true,
                pageSizes: reportConfig.itemPerPage,
                buttonCount: 5
            },
            dataBound: function (o) {
                var grid = o.sender;
                if (grid.dataSource.total() == 0) {
                    var colCount = grid.columns.length;
                    $(o.sender.wrapper)
                        .find('tbody')
                        .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                    displayPopupNotification("No Data Found Given Date Filter.", "info");
                }
                else {
                    var g = $("#grid").data("kendoGrid");
                    for (var i = 0; i < g.columns.length; i++) {
                        g.showColumn(i);
                    }
                    $("div.k-group-indicator").each(function (i, v) {
                        g.hideColumn($(v).data("field"));
                    });
                }

                UpdateReportUsingSetting("EmployeeWisePerformance", "grid");
                $('div').removeClass('.k-header k-grid-toolbar');
            },
            columns: [
                {
                    field: "GROUP_EDESC",
                    title: "Group",
                },
                {
                    field: "EMPLOYEE_EDESC",
                    title: "Employee",
                    width: "15%"
                },
                {
                    field: "TARGET",
                    title: "Target",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    format: '{0:n0}',
                },
                {
                    field: "VISITED",
                    title: "Visited",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    format: '{0:n0}',
                },
                {
                    field: "NOT_VISITED",
                    title: "Not Visited",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    headerAttributes: {
                        style: "white-space: normal"
                    },
                    format: '{0:n0}',
                },
                {
                    field: "PJP_PRODUCTIVE",
                    title: "PJP",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    format: '{0:n0}',
                },
                {
                    field: "PJP_NON_PRODUCTIVE",
                    title: "Non PJP",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    format: '{0:n0}',
                },
                {
                    field: "NPJP_PRODUCTIVE",
                    title: "NPJP",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    format: '{0:n0}',
                },
                {
                    field: "PERCENT_EFFECTIVE_CALLS",
                    title: "Eff.Calls",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    template: function (dataItem) {
                        return "<span>" + kendo.toString(dataItem.PERCENT_EFFECTIVE_CALLS, 'n2') + " %</span>";
                    }
                },
                {
                    field: "PJP_TOTAL_QUENTITY",
                    title: "Quantity",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    template: function (dataItem) {
                        return "<span>" + kendo.toString(dataItem.PJP_TOTAL_QUANTITY + dataItem.NPJP_TOTAL_QUANTITY, 'n0') + "</span>";
                    }
                },
                {
                    field: "PJP_TOTAL_AMOUNT",
                    title: "Amount",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    template: function (dataItem) {
                        return "<span>" + kendo.toString(dataItem.PJP_TOTAL_AMOUNT + dataItem.NPJP_TOTAL_AMOUNT, 'n2') + "</span>";

                    },
                    format: '{0:n}',
                },

            ],

        });

    };


    function KendoGridRefresh(readUrl) {
        $('#grid').data("kendoGrid").destroy();
        $('#grid').val('');
        $('#grid').html('');
        BindGrid(readUrl)
    }

    function detailInit(e) {
        var detailRow = e.detailRow;
        var Rowdata = e.data;

        detailRow.find(".tabstrip").kendoTabStrip({
            animation: {
                open: { effects: "fadeIn" }
            },
        });
        var dataSource = new kendo.data.DataSource({
            type: "json",
            batch: true,
            transport: {
                read: {
                    url: window.location.protocol + "//" + window.location.host + "/" + "api/Report/GetEmployeeProductive?SP_CODE=" + Rowdata.SP_CODE,
                    dataType: "json", // <-- The default was "jsonp".
                    type: "POST",
                    contentType: "application/json; charset=utf-8"
                },
                parameterMap: function (options, type) {
                    var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                    delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                    delete paramMap.$format; // <-- remove format parameter.
                    return paramMap;
                },
            },
            error: function (e) {
                displayPopupNotification("Sorry error occured while processing data", "error");
            },
            schema: {
                model: {
                    id: "SP_CODE",
                }
            },
            sort: { field: "ENTITY_NAME", dir: "asc" },
            pageSize: 100,
            pageable: true,
        });
        dataSource.fetch(function () {
            detailRow.find(".PJP-Productive").kendoGrid({
                dataSource: new kendo.data.DataSource({
                    data: _.filter(this.data(), function (x) { return x.JOURNEY_PLAN == 'PJP' }),
                    group: { field: "ASSIGN_DATE", dir: "desc" }
                }),
                groupable: true,
                sortable: true,
                pageable: false,
                sortable: true,
                reorderable: true,
                resizable: true,
                reorderable: false,
                // height:300,
                scrollable: {
                    virtual: true
                },
                columns: [
                    {
                        field: "ENTITY_NAME",
                        title: "Name",
                    },
                    {
                        field: "ASSIGN_DATE",
                        title: "Date",
                        template: "#= getDateFormat(ASSIGN_DATE) #",
                        groupHeaderTemplate: "#= getDateFormat(value) #",
                    },
                    {
                        field: "ADDRESS",
                        title: "Address",
                    },
                    {
                        field: "ENTITY_TYPE",
                        title: "Type",
                        template: function (dataItem) {
                            if (dataItem.ENTITY_TYPE == "D") {
                                return "<span >" + "Distributor" + "</span>";
                            }
                            else if (dataItem.ENTITY_TYPE == "R") {
                                return "<span >" + "Reseller" + "</span>";
                            }
                            else {
                                return "<span >" + dataItem.ENTITY_TYPE + "</span>";
                            }
                        }
                    },
                    {

                        field: "IS_VISITED",
                        title: "Status",
                        template: function (dataItem) {
                            if (dataItem.IS_VISITED == "X") {
                                return "<span style='color:#ff9900'>" + "Not Visited" + "</span>";
                            }
                            else if (dataItem.IS_VISITED == "Z") {
                                return "<span style='color:#8E388E'>" + "Get Order From Visited" + "</span>";
                            }

                            else {
                                return "<span style='color:#00e64d'>" + "Visited" + "</span>";
                            }

                        }
                    },
                    {
                        field: "REMARKS",
                        title: "Remarks",
                    },

                ],
                dataBound: function (o) {
                    var grid = o.sender;
                    if (grid.dataSource.data().length <= 0) {
                        var colCount = grid.columns.length + 1;
                        $(o.sender.wrapper)
                            .find('tbody')
                            .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                        // displayPopupNotification("No Data Found Given Date Filter.", "info");
                    }

                },

            });
            detailRow.find(".PJP-Non-Productive").kendoGrid({
                dataSource: new kendo.data.DataSource({
                    data: _.filter(this.data(), function (x) { return x.JOURNEY_PLAN == 'NPJP' }),
                    group: { field: "ASSIGN_DATE", dir: "desc" }
                }),
                sortable: true,
                groupable: true,
                pageable: false,
                sortable: true,
                reorderable: true,
                resizable: true,
                reorderable: false,
                // height: 300,
                scrollable: {
                    virtual: true
                },
                columns: [
                    {
                        field: "ENTITY_NAME",
                        title: "Name",
                    },
                    {
                        field: "ASSIGN_DATE",
                        title: "Date",
                        template: "#= getDateFormat(ASSIGN_DATE) #",
                        groupHeaderTemplate: "#= getDateFormat(value) #",
                    },
                    {
                        field: "ADDRESS",
                        title: "Address",
                    },
                    {
                        field: "ENTITY_TYPE",
                        title: "Type",
                        template: function (dataItem) {
                            if (dataItem.ENTITY_TYPE == "D") {
                                return "<span >" + "Distributor" + "</span>";
                            }
                            else if (dataItem.ENTITY_TYPE == "R") {
                                return "<span >" + "Reseller" + "</span>";
                            }
                            else {
                                return "<span >" + dataItem.ENTITY_TYPE + "</span>";
                            }
                        }
                    },
                    {

                        field: "IS_VISITED",
                        title: "Status",
                        template: function (dataItem) {
                            if (dataItem.IS_VISITED == "X") {
                                return "<span style='color:#ff9900'>" + "Not Visited" + "</span>";
                            }
                            else if (dataItem.IS_VISITED == "Z") {
                                return "<span style='color:#8E388E'>" + "Get Order From Visited" + "</span>";
                            }

                            else {
                                return "<span style='color:#00e64d'>" + "Visited" + "</span>";
                            }

                        }
                    },
                    {
                        field: "REMARKS",
                        title: "Remarks",
                    },

                ],
                dataBound: function (o) {
                    var grid = o.sender;
                    if (grid.dataSource.data().length <= 0) {
                        var colCount = grid.columns.length + 1;
                        $(o.sender.wrapper)
                            .find('tbody')
                            .append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                    }
                },

            });
        });

        //brandwise tab

        detailRow.find(".BrandWise").kendoGrid({
            dataSource: {
                type: "json",
                batch: true,
                transport: {
                    read: {
                        url: window.location.protocol + "//" + window.location.host + "/" + "api/Report/GetEmployeeBrandSales?SP_CODE=" + Rowdata.SP_CODE,
                        dataType: "json", // <-- The default was "jsonp".
                        type: "POST",
                        contentType: "application/json; charset=utf-8"
                    },
                    parameterMap: function (options, type) {
                        var paramMap = JSON.stringify($.extend(options, ReportFilter.filterAdditionalData()));
                        delete paramMap.$inlinecount; // <-- remove inlinecount parameter.
                        delete paramMap.$format; // <-- remove format parameter.
                        return paramMap;
                    },
                },
                schema: {
                    model: {
                        fields: {
                            BRAND_NAME: { type: "string" },
                            TOTAL_QUANTITY: { type: "number" },
                            TOTAL_AMOUNT: { type: "number" },
                            MU_CODE: { type: "string" },
                        }
                    }
                },
                aggregate: [{ field: "TOTAL_QUANTITY", aggregate: "sum" },
                { field: "TOTAL_AMOUNT", aggregate: "sum" },],
                error: function (e) {
                    displayPopupNotification("Sorry error occured while processing data", "error");
                },
                sort: { field: "BRAND_NAME", dir: "asc" },
                pageSize: 100,
                pageable: true,
            },
            sortable: true,
            groupable: true,
            pageable: false,
            sortable: true,
            reorderable: true,
            resizable: true,
            reorderable: false,
            // height: 300,
            scrollable: {
                virtual: true
            },
            columns: [
                {
                    field: "BRAND_NAME",
                    title: "Brand",
                    footerTemplate: "Total"
                },
                {
                    field: "TOTAL_QUANTITY",
                    title: "Total Quantity",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    format: '{0:n0}',
                    aggregates: ["sum"],
                    footerTemplate: "<div style='text-align:right;'>#=sum#</div>"
                },
                {
                    field: "TOTAL_AMOUNT",
                    title: "Total Amount",
                    attributes:
                        {
                            style: "text-align:right;"
                        },
                    format: '{0:n0}',
                    aggregates: ["sum"],
                    footerTemplate: "<div style='text-align:right;'>#=sum#</div>"
                },
                {
                    field: "MU_CODE",
                    title: "Unit",
                },
            ],
            dataBound: function (o) {
                var grid = o.sender;
                if (grid.dataSource.data().length <= 0) {
                    var colCount = grid.columns.length + 1;
                    var table = $(o.sender.wrapper).find('tbody')[0];
                    $(table).append('<tr class="kendo-data-row" style="font-size:12px;"><td colspan="' + colCount + '" class="alert alert-danger">Sorry, no data :(</td></tr>');
                }
            },
        });

    };

    $(document).ready(function () {
        DateFilter.init(function () {
            consolidate.init(function () {
                BindGrid();
            });
        });
    });
</script>