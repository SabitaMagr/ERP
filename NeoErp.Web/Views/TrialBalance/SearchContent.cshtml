<div id="search" class="form-control-static" style="border-top: 1px solid #E7E7E7; border-bottom: 1px solid #E7E7E7; padding: 0px; ">
    <div class="form-horizontal">        
        <div>
            <div class="filterDateOption">
                <label>Date Filter</label>
                <select class="dateFilterSelect" id="ddlDateFilter" name="DateStep">
                    <option value="CT" selected="selected">Custom</option>
                    <option value="TD">Today</option>
                    <option value="TM">This Month</option>
                    <option value="LM">Last Month</option>
                    <option value="TQ">This Quater</option>
                    <option value="LQ">Last Quarter</option>
                    <option value="TH">This Half Year</option>
                    <option value="LH">Last Half Year</option>
                    <option value="TY">This Year</option>
                    <option value="LY">Last Year</option>
                </select>
            </div>
            <div class="frmCol">
                <label>From Date</label>
                <input type="text" id="fromInputDate" class="frmDataInput" placeholder="From Date"/>
                <input type="text" name="FromDate" id="FromDate" class="readOnlyInput" readonly="readonly" placeholder="From Date" style="width: 30%;" />
            </div>
            <div class="ToCol">
                <label>To Date</label>
                <input type="text" class="frmDataInput" id="toInputDate" placeholder="To Date">
                <input type="text" name="ToDate" class="readOnlyInput" readonly="readonly" id="ToDate" placeholder="To Date" style="width: 30%;">
            </div>
            <div class="frmCol" id="ddlLedger">
                <label>Account Head</label>
                <select id="combobox" name="ledger">
                    <option></option>
                </select>
            </div>
            <button class="btn btn-primary" id="btnCommonSearch"><span class="fa fa-play"></span></button>
        </div>
        <div class="form-group" id="trialexpand">
            <div class=" col-sm2" style="font-size: 12px;">
                Show Opening <input type="checkbox" id="chkShowOpening" value="Show Opening" checked="" />
            </div>
            <div class="col-sm2" style="font-size: 12px;">
                Show Transaction <input type="checkbox" id="chkShowTransaction" value="Show Transaction" checked="" />
            </div>
            <div id="radiobutton">
                <div class="col-sm2" style="font-size: 12px;">
                    <input type="radio" name="Expand" value="rdbCollapseAll" checked>Collapse All
                </div>
                <div class="col-sm2" style="font-size: 12px;">
                    <input type="radio" name="Expand" value="rdbExpandAll">Expand All
                </div>
                <div class="col-sm2" style="font-size: 12px;">
                    <input type="radio" name="Expand" value="rdbLedger">Show Ledger Only
                </div>
            </div>
        </div>
    </div>
</div>
<div id="UrlAppend" style="display:none;">00</div>
<div id="LevelAppend" style="display:none;">0</div>
<div id="export" class="collapse form-control-static" style="border-top: 1px solid #E7E7E7; border-bottom: 1px solid #E7E7E7; padding: 0px; z-index: 1;">
    <ul>
        @*AA*@
        <li><a href="../TrialBalance/ExportToExcel" id="xls" class="fa fa-file-excel-o" onclick="return ExportToExcel(this.id);"></a><br /><i>Excel</i></li>
       
        <li><a href="../TrialBalance/ExportToExcel" id="ms-word" onclick="return ExportToExcel(this.id);" class="fa fa-file-word-o" ></a><br /><i>Word</i></li>
    </ul>
</div>
<div id="table" class="collapse form-control-static" style="border-top: 1px solid #E7E7E7; border-bottom: 1px solid #E7E7E7; padding: 0px; z-index: 1;">
    <ul>
        <li><a href="/TrialBalance/Index" class="icon icon-square44"></a><br /><i>Home</i></li>
        <li><a href="/TrialBalance/Consolidated" class="icon icon-hierarchy4"></a><br /><i>Tree</i></li>
    </ul>
</div>
<div id="chart" class="collapse form-control-static" style="border-top: 1px solid #E7E7E7; border-bottom: 1px solid #E7E7E7; padding: 0px; z-index: 1;">
    <ul>
        <li><a href="/TrialBalance/Graph/Bar" class="icon icon-chart15"></a><br /><i>Bar Graph</i></li>
        <li><a href="" class="icon icon-chart"></a><br /><i>Pie Chart</i></li>
        <li><a href="" class="icon icon-data60"></a><br /><i>Line Graph</i></li>
    </ul>
</div>
<script>
    $(document).ready(function () {
        $('#fromInputDate').nepaliDatePicker({
            ndpEnglishInput: 'FromDate'
        });
        $('#toInputDate').nepaliDatePicker({
            ndpEnglishInput: 'ToDate'
        });
        var current_date = getNepaliDate();
        $('#fromInputDate').val(current_date);
        $('#toInputDate').val(current_date);
        $("#FromDate").datepicker({ dateFormat: 'yy-mm-dd' });
        $("#ToDate").datepicker({ dateFormat: 'yy-mm-dd' });
        $('#FromDate').val(BS2AD($("#fromInputDate").val()));
        $('#ToDate').val(BS2AD($("#toInputDate").val()));

        //----for disable---

        //if ($('#ddlDateFilter').val() == "CT") {
        //    $('#fromInputDate').prop('disabled', false);
        //    $('#FromDate').prop('disabled', false);
        //    $('#toInputDate').prop('disabled', false);
        //    $('#ToDate').prop('disabled', false);
        //}
        //$('#ddlDateFilter').change(function () {
        //    if ($('#ddlDateFilter').val() == "CT") {
        //        $('#fromInputDate').prop('disabled', false);
        //        $('#FromDate').prop('disabled', false);
        //        $('#toInputDate').prop('disabled', false);
        //        $('#ToDate').prop('disabled', false);
        //    }
        //    else {
        //        $('#fromInputDate').prop('disabled', true);
        //        $('#FromDate').prop('disabled', true);
        //        $('#toInputDate').prop('disabled', true);
        //        $('#ToDate').prop('disabled', true);
        //    }
        //});
    });
</script>
<script>
    var Ledger = {
        init: function () {

            Ledger.BindDropdown();
        },

        BindDropdown: function () {
            $.ajax({
                cache: false,
                type: "Post",
                url: "@Url.Action("GetLedgerList", "TrialBalance")",
                success: function (data) {
                    $("#combobox").html('');
                    $.each(data, function (key, value) {
                        $("#combobox").append($('<option></option>').val(value.ACC_CODE).html(value.ACC_EDESC));
                    })
                }
            });
        },
    }
    $(function () {
        Ledger.init();
    })
</script>
<script type="text/javascript">
$(function () {
    $("#ddlDateFilter").change(function () {
        var current_date = getNepaliDate();
        var current_date = current_date.split("-");
        var cYear = current_date[0];
        var cMonth = current_date[1];
        var cDay = current_date[2];      
        
        if ($('option:selected', this).val() == "TD") {
            var FromDate = cYear + "-" + cMonth + "-" + cDay;
            var ToDate = cYear + "-" + cMonth + "-" + cDay;
            $("#fromInputDate").val(FromDate);
            $("#toInputDate").val(ToDate);
        }
        else if($('option:selected', this).val() == "TY")
        {
            var FromDate = cYear + "-" + "04" + "-" + "01";
            var ToDate = cYear + "-" + cMonth + "-" + cDay;
            $("#fromInputDate").val(FromDate);
            $("#toInputDate").val(ToDate);
        }
        else if ($('option:selected', this).val() == "LY") {   
            var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
            var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2"); 
            $("#fromInputDate").val(FromDate);
            $("#toInputDate").val(ToDate);
        }
        else if ($('option:selected', this).val() == "TM") {
            var FromDate = cYear + "-" + cMonth + "-" + "01";
            var ToDate = cYear + "-" + cMonth + "-" + cDay;
            $("#fromInputDate").val(FromDate);
            $("#toInputDate").val(ToDate);
        }
        else if ($('option:selected', this).val() == "LM") {
            if (cMonth == 1)
            {
                cYear = cYear - 1;
                cMonth = "12";
            }
            else {
                cMonth = cMonth - 1;
            }
            var newToDate = numberOfBsDays(cYear, (cMonth-1));
            if (cMonth > 1 && (cMonth) < 10)
                cMonth = "0" + cMonth;
            var FromDate = cYear + "-" + cMonth + "-" + "01";
            var ToDate = cYear + "-" + cMonth + "-" + newToDate;
            $("#fromInputDate").val(FromDate);
            $("#toInputDate").val(ToDate);
        }
        else if ($('option:selected', this).val() == "TQ") {
            if (cMonth > 3 && cMonth < 7) {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else if (cMonth > 6 && cMonth < 10) {
                var FromDate = cYear + "-" + "07" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else if (cMonth > 9 && cMonth <= 12) {
                var FromDate = cYear + "-" + "10" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else if (cMonth >= 1 && cMonth < 4) {
                var FromDate = cYear + "-" + "01" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
        }
        else if ($('option:selected', this).val() == "LQ") {
            if (cMonth > 3 && cMonth < 7) {
                var FromDate = cYear + "-" + "01" + "-" + "01";
                var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else if (cMonth > 6 && cMonth < 10) {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + "06" + "-" + numberOfBsDays(cYear, "5");
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else if (cMonth > 9 && cMonth <= 12) {
                var FromDate = cYear + "-" + "07" + "-" + "01";
                var ToDate = (cYear + 1) + "-" + "09" + "-" + numberOfBsDays((cYear + 1), "8");
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else if (cMonth >= 1 && cMonth < 4) {
                var FromDate = (cYear-1) + "-" + "10" + "-" + "01";
                var ToDate = (cYear - 1) + "-" + "12" + "-" + numberOfBsDays((cYear - 1), "11");
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
        }
        else if ($('option:selected', this).val() == "TH") {
            if (cMonth > 3 && cMonth < 10) {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else {
                var FromDate = cYear + "-" + "10" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
        }
        else if ($('option:selected', this).val() == "LH") {
            if (cMonth > 3 && cMonth < 10) {
                var FromDate = (cYear-1) + "-" + "10" + "-" + "01";
                var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else if (cMonth >=10) {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
            else {
                var FromDate = (cYear-1) + "-" + "04" + "-" + "01";
                var ToDate = (cYear - 1) + "-" + "09" + "-" + numberOfBsDays((cYear - 1), "8");
                $("#fromInputDate").val(FromDate);
                $("#toInputDate").val(ToDate);
            }
        }
        $('#FromDate').val(BS2AD($("#fromInputDate").val()));
        $('#ToDate').val(BS2AD($("#toInputDate").val()));
    });
});
</script>
<script>
    //AA
    function ExportToExcel(Type) {
        debugger;
        id = document.getElementById("UrlAppend").innerHTML;
        level = document.getElementById("LevelAppend").innerHTML;
        location.href = window.location.href.split('/')[0] + window.location.href.split('/')[1] + 'ExportToExcel' + '?id=' + id + "&level=" +level + "&Type=" + Type;
        return false;
    }
</script>
<script>
    (function ($) {
        $.widget("custom.combobox", {
            _create: function () {
                this.wrapper = $("<span>")
                  .addClass("custom-combobox")
                  .insertAfter(this.element);

                this.element.hide();
                this._createAutocomplete();
                this._createShowAllButton();
            },

            _createAutocomplete: function () {
                var selected = this.element.children(":selected"),
                  value = selected.val() ? selected.text() : "";

                this.input = $("<input placeholder='Select'>")
                  .appendTo(this.wrapper)
                  .val(value)
                  .attr("title", "")
                  .addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left")

                  .autocomplete({
                      delay: 0,
                      minLength: 0,
                      source: $.proxy(this, "_source")
                  })
                  .tooltip({
                      tooltipClass: "ui-state-highlight"
                  });

                this._on(this.input, {
                    autocompleteselect: function (event, ui) {
                        ui.item.option.selected = true;
                        this._trigger("select", event, {
                            item: ui.item.option
                        });
                    },

                    autocompletechange: "_removeIfInvalid"
                });
            },

            _createShowAllButton: function () {
                var input = this.input,
                  wasOpen = false;
                $("<a>")
                  .attr("tabIndex", -1)
                  .attr("title", "Show All Items")
                  .tooltip()
                  .appendTo(this.wrapper)

                  .removeClass("ui-corner-all")
                  .addClass("ui-button custom-combobox-toggle  ui-icon ui-icon-triangle-1-s ui-corner-right btn-dropdown-custom")
                     .button({
                         icons: {
                             primary: "ui-button-icon-primary ui-icon ui-icon-triangle-1-s"
                         },
                         text: false
                     })
                  .mousedown(function () {
                      wasOpen = input.autocomplete("widget").is(":visible");
                  })
                  .click(function () {
                      input.focus();

                      // Close if already visible
                      if (wasOpen) {
                          return;
                      }

                      // Pass empty string as value to search for, displaying all results
                      input.autocomplete("search", "");
                  });
            },

            _source: function (request, response) {
                var matcher = new RegExp($.ui.autocomplete.escapeRegex(request.term), "i");
                response(this.element.children("option").map(function () {
                    var text = $(this).text();
                    if (this.value && (!request.term || matcher.test(text)))
                        return {
                            label: text,
                            value: text,
                            option: this
                        };
                }));
            },

            _removeIfInvalid: function (event, ui) {

                // Selected an item, nothing to do
                if (ui.item) {
                    return;
                }

                // Search for a match (case-insensitive)
                var value = this.input.val(),
                  valueLowerCase = value.toLowerCase(),
                  valid = false;
                this.element.children("option").each(function () {
                    if ($(this).text().toLowerCase() === valueLowerCase) {
                        this.selected = valid = true;
                        return false;
                    }
                });

                // Found a match, nothing to do
                if (valid) {
                    return;
                }

                // Remove invalid value
                this.input
                  .val("")
                  .attr("title", value + " didn't match any item")
                  .tooltip("open");
                this.element.val("");
                this._delay(function () {
                    this.input.tooltip("close").attr("title", "");
                }, 2500);
                this.input.autocomplete("instance").term = "";
            },
            refresh: function () {
                selected = this.element.children(":selected");
                this.input.val(selected.text());
            },
            _destroy: function () {
                this.wrapper.remove();
                this.element.show();
            }
        });
    })(jQuery);

    $(function () {
        $("#combobox").combobox();
    });
</script>