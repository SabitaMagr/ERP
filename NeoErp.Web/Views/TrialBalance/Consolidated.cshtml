@{
    ViewBag.Title = "Consolidated";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/Content/font-awesome-4.1.0/css/font-awesome.css" rel="stylesheet" />
<style type="text/css">
    #cover {
        position: fixed;
        top: 0;
        left: 0;
        background: rgba(0,0,0,0.6);
        z-index: 5;
        width: 100%;
        height: 100%;
        display: none;
    }   
    .cancel {
        display: block;
        position: absolute;
        top: 5px;
        right: 12px;
        font-size: 15px;
        text-decoration: none;
        text-align: center;
        cursor: pointer;
        border: 1px solid #e1e1e1;
        height: 24px;
        width: 24px;
    }

    .Maximize {
        display: block;
        position: absolute;
        top: 5px;
        right: 40px;
        font-size: 15px;
        text-decoration: none;
        text-align: center;
        cursor: pointer;
        border: 1px solid #e1e1e1;
        height: 24px;
        width: 24px;
    }

    .Maximize1 {
        display: block;
        position: absolute;
        top: 5px;
        right: 40px;
        font-size: 15px;
        text-decoration: none;
        text-align: center;
        cursor: pointer;
        height: 24px;
        width: 24px;
    }

    .cancel:hover, .Maximize:hover {
        background-color: #333;
        color: #f7f7f7;
    }

    .search {
        background: url("../Images/sp_Search.png") no-repeat;
    }

    #MyContextMenu a {
        height: 18px;
        display: inline-block;
        color: #FFF;
        text-decoration: none;
        cursor: pointer;
        width: 138px;
        font-family: verdana;
        font-size: 11px;
        border-bottom: 1px ridge white;
    }

        #MyContextMenu a:hover {
            color: #333333;
        }

    #MyContextMenus a {
        height: 18px;
        display: inline-block;
        color: #FFF;
        text-decoration: none;
        cursor: pointer;
        width: 138px;
        font-family: verdana;
        font-size: 11px;
        border-bottom: 1px ridge white;
    }

        #MyContextMenus a:hover {
            color: #333333;
        }
</style>

<div class="row">
    <div class="col-lg-12" style="background-color: #f5f5f5; height: 38px;">
        <div style="float: left">
            <ol class="breadcrumb">
                <li class="active">
                    <i class="fa fa-home"></i>
                    <a href="@Url.Action("Index", "Home")">Home </a><i class="fa fa-angle-double-right"></i>
                    <a href="@Url.Action("Consolidated", "TrialBalance")">Trail Balance </a><i class="fa fa-angle-double-right"></i>
                </li>
            </ol>
        </div>
        <div class="btn-group" role="group" style="float: right; padding-top: 6px;">
            @Html.Partial("~/Views/TrialBalance/Search.cshtml")
        </div>
        <div style="clear: both"></div>
    </div>
</div>
<div class="row">
    <div class="col-md-12" style="text-align: right;">
    <label style="font-size: 12px;font-weight:100"">figure in:</label><label id="asdf" style="font-size: 12px; font-weight:100"></label>
</div>
    <div class="col-lg-12">
        @Html.Partial("~/Views/TrialBalance/SearchContent.cshtml")
        <div id="divBalanceSheetReport" class="row"></div>
    </div>
    <div id="DetailScreen" style="position: fixed; left: 10%;">
        <div id="popup_bar">
            <div id="hello" class="Maximize1" style="left: 8px; width: 52px">
                <img src="../Images/print.png" width="19" height="21" onclick="PrintStatement()">
                <img src="../Images/export.png" width="18" height="17" onclick="ExportStatement()">
            </div>
            <div onclick="Maximize()" class="Maximize"><span class="fa fa-expand"></span></div>
            <div onclick="ToggleData()" class="cancel">
                <span class="fa fa-times"></span>
            </div>
        </div>
        <div>
            <table style="width: 663px; margin-top: 0px; margin-left: 107px;">
                <tr>
                    <td>
                        <div class="filterDateOption">
                            <label>Date Filter</label>
                            <select class="dateFilterSelect" id="ddlDateFilterVoucher" name="DateStep" style="width: 50%;">
                                <option value="CT" selected="selected">Custom</option>
                                <option value="TD">Today</option>
                                <option value="TM">This Month</option>
                                <option value="LM">Last Month</option>
                                <option value="TQ">This Quater</option>
                                <option value="LQ">Last Quarter</option>
                                <option value="TH">This Half Year</option>
                                <option value="LH">Last Half Year</option>
                                <option value="TY">This Year</option>
                                <option value="LY">Last Year</option>
                            </select>
                        </div>
                    </td>
                    <td>
                        <div class="frmCol">
                            <label>From Date</label>
                            <input type="text" id="fromInputDateVoucher" class="frmDataInput" placeholder="From Date" style="width: 30%;" />
                            <input type="text" name="FromDateVoucher" id="FromDateVoucher" class="readOnlyInput" readonly="readonly" placeholder="From Date" style="width: 30%;" />
                        </div>
                    </td>
                    <td>
                        <div class="ToCol">
                            <label>To Date</label>
                            <input type="text" class="frmDataInput" id="toInputDateVoucher" placeholder="To Date" style="width: 30%;">
                            <input type="text" name="ToDateVoucher" class="readOnlyInput" readonly="readonly" id="ToDateVoucher" placeholder="To Date" style="width: 30%;">
                        </div>
                    </td>
                    <td>
                        <button class="btn btn-primary" id="btnCommonSearchVoucher" style="background-color: #f7f7f7; border-color: #e1e1e1; color: #808080; height: 30px; line-height: 1px;"><span class="fa fa-play"></span></button>
                    </td>
                </tr>
            </table>
        </div>
        <div id="divJQGridDetails" class="page-content" style="display: block; width: 869px; margin-top: 0px !important; position: fixed; margin-left: 11px;">
            <table id="JQGridDetails" style="width: 100%;"></table>
            <div id="JQGridDetails_pager"></div>
        </div>
    </div>
    <div id="cover">
    </div>
    <div id="VoucherScreen" style="position: absolute;">
        <div class="Maximize1" style="left: 8px; width: 52px">
            <img src="../Images/print.png" width="19" height="21" onclick="PrintVoucher()">
            @*<img src="../Images/export.png" width="18" height="17">*@
        </div>
        <div onclick="document.getElementById('VoucherScreen').style.display = 'none';" class="cancel">
            <span class="fa fa-times"></span>
        </div>
        <div id="divJQGridVoucher" class="page-content" style="display: block; width: 100%; margin-top: 40px; padding:10px;position:relative;float:left;">
            <div class="neoHeadTitle">
                <span class="neotitleName">Neoteric Nepal Pvt. Ltd.</span>
                <span class="neoAddress">Jawalakhel, Lalitput</span>
                <span class="neoContact">Ph: 01-542547845, 54795247</span>
                <div id="dvVoucherDate"></div>
                <div id="dvVoucherNo"></div>
            </div>
            <table class="table">              
                <tr>
                    <td colspan="3">
                        <table id="JQGridVoucher" class="table-bordered" style="width: 100%"></table>
                        <div id="JQGridVoucher_pager" style="display: none"></div>
                    </td>
                </tr>
                <tr>
                    <td colspan="3">
                        <div id="dvNiration" style="margin-top: 12px;"></div>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div id="dvCreatedBy" style="text-align:left;margin-top: 12px;"></div>
                    </td>
                    <td>
                        <div id="dvPostedBy" style="text-align:right; margin-top: 12px;"></div>
                    </td>
                </tr>
            </table>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">    
     <form class="form-horizontal" onsubmit="return false;" method="post">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width:800px;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div id="PopupHeader">
                        <h4 class="modal-title" id="myModalLabel">Preference Setup</h4>
                    </div>
                </div>
                    <div class="modal-body">
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="col-md-12 filterizeDate">
                                    <label style="font-size: 12px; font-weight: normal">Date Filter</label>
                                    <select class="dateFilterSelect" id="ddlDateFilterP" name="DateStep">
                                        <option value="CT" selected="selected">Custom</option>
                                        <option value="TD" selected="selected">Today</option>
                                        <option value="TM">This Month</option>
                                        <option value="LM">Last Month</option>
                                        <option value="TQ">This Quater</option>
                                        <option value="LQ">Last Quarter</option>
                                        <option value="TH">This Half Year</option>
                                        <option value="LH">Last Half Year</option>
                                        <option value="TY">This Year</option>
                                        <option value="LY">Last Year</option>
                                    </select>

                                    <label style="font-size: 12px; font-weight: normal">From Date</label>
                                    <input type="text" id="fromInputDateP" class="frmDataInput" placeholder="From Date" />
                                    <input type="text" name="FromDateP" id="FromDateP" class="readOnlyInput" readonly="readonly" placeholder="From Date" style="width: 12%;" />

                                    <label style="font-size: 12px; font-weight: normal">To Date</label>
                                    <input type="text" class="frmDataInput" id="toInputDateP" placeholder="To Date">
                                    <input type="text" name="ToDateP" class="readOnlyInput" readonly="readonly" id="ToDateP" placeholder="To Date" style="width: 12%;">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="pref-slide">
                                        <p>
                                            <input type="text" name="figureAmount" id="figure1" value='@ViewData["figureAmount"]' readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                        </p>
                                        <div id="slider1">
                                            <label for="figure" style="font-size: 12px; font-weight: normal">Figure in</label>
                                        </div>
                                    </div>
                                    <div class="pref-slide">
                                        <p>
                                            <input type="text" id="round1" name="roundupAmount" value='@ViewData["roundupAmount"]' readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                        </p>
                                        <div id="roundSlider1">
                                            <label for="round" style="font-size: 12px; font-weight: normal">Round up</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="btnOk" class="btn btn-primary" data-dismiss="modal">OK</button>
                        <button type="button" id="btnLoad" class="btn btn-primary" onclick="return false;" data-toggle="modal" data-target="#MyPrefernces">Load</button>
                        <button type="submit" id="btnSave" onclick="return btnSaveClick();" class="btn btn-primary" data-toggle="modal" data-target="#mysave">Save</button>
                    </div>                
            </div>
        </div>
        <div class="modal fade" id="mysave" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                        <div class="modal-content modal-inner-popup">
                            <div class="modal-header">
                                <button type="button" class="close DiaableInput" onclick=" $('#mysave').modal('toggle'); " aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                Save As
                            </div>
                            <div class="modal-body">
                                <span id="MsgPrefName" style="font-size: 10px; color: indianred;"></span>
                                <table id="ShowWhenSave"></table>
                            </div>
                            <div class="modal-footer">
                                <div class="pref-input-div">
                                    <label>Preference Name:</label>
                                    <input id="PreferenceName" type="text" name="PreferenceName" disabled required /><input type="checkbox" name="SetDefault" id="SetDefault" style="width:22px;height:16px;"><label>Show in Menu</label>
                                </div>
                                <button type="submit" id="btnSavepref" class="btn btn-primary" data-dismiss="modal"><span class="fa fa-floppy-o" aria-hidden="true"></span></button>
                                <button type="button" class="btn btn-danger DiaableInput" onclick=" $('#mysave').modal('toggle'); "><span class="glyphicon glyphicon-remove"></span></button>
                            </div>
                        </div>
                    </div>
        <div class="modal fade" id="MyPrefernces" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                        <div class="modal-content modal-inner-popup">
                            <div class="modal-header">
                                <button type="button" class="close" onclick=" $('#MyPrefernces').modal('toggle'); " aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                Load
                            </div>
                            <div class="modal-body">
                                <div id="LoadPreferncesWidth">
                                    <table id="LoadPrefernces"></table>
                                    @* <button onclick="return deleteSelectedRow();" title="Remove" class="btn btn-danger">Remove</button>*@

                                </div>
                            </div>
                            <div class="modal-footer">
                                <div class="pref-input-div">
                                    <span id="ShowHideThisSpan" style="font-size: 11px; color: indianred; display: none">No rows are selected</span>
                                </div>
                                <button onclick="return getSelectedRow();" style="float: right;" class="btn btn-success">Load</button>
                            </div>
                        </div>
                    </div>
      </form>
</div>
<script src="~/Scripts/plugin.js"></script>
<script src="~/Scripts/jquery.contextmenu.js"></script>
<div id="MyContextMenu" style="cursor: pointer; background-color: grey; padding: 5px 7px 5px 7px;">
    <input type="hidden" id="hdAccountHead" value="0" />
    <input type="hidden" id="hdAccountDesc" value="0" />
    <a onclick="ShowStatement()">Show Statement</a>
    <br />
    <a onclick="ShowLedgerStatement()">Ledger Detail</a>
    <br />
    <a onclick="ShowDailySummary()">Ledger Daily Summary</a>
    <br />
    <a onclick="ShowMonthWise()">Month Wise Dr/Cr</a>
</div>

<div id="MyContextMenus" style="cursor: pointer; background-color: grey; padding: 5px 7px 5px 7px;">
    <a onclick="ShowSubLedger()">Sub Ledger Trial</a>
    <br />
    <a onclick="ShowStatement()">Show Statement</a>
</div>
<div class="window-load" id="Loading">
    <img src="~/Images/Loading.gif" />
</div>
<input type="hidden" id="hddledgeraccount" value="0" />
<input type="hidden" id="hddAccountDesc" value="0" />
<script>
    $(document).ready(function () {
        
            $('.fa-search').addClass('active').attr('aria-expanded', 'true');
            $('#search').addClass('in');
        
    })
</script>
<script type="text/javascript">
    var lastID = null;
    var figureAmount = '1';
    var a = 'Actual';
    var decimalPlacesAmount = '0.00';
    var defaultAmount = decimalPlacesAmount;
    decimalPlacesAmount = decimalPlacesAmount.split(".");
    if (decimalPlacesAmount == 0) {
        decimalPlacesAmount = 0;
    }
    else {
        decimalPlacesAmount = decimalPlacesAmount[1].length;
    }
    $(document).ready(function () {
        $('#MyContextMenu').hide();
        $('#MyContextMenus').hide();
        $('#ddlLedger').hide();
        $('#chkShowOpening').on("click", function () {
            if ($('#chkShowOpening').is(":checked")) {
                $('tr.HeaderAccount td:nth-child(2)').toggle();
                $('tr.SubHeaderAccount td:nth-child(2)').toggle();
                $('tr.SubHeaderAccount td:nth-child(3)').toggle();
                $('tr.GroupAccount td:nth-child(2)').toggle();
                $('tr.GroupAccounts td:nth-child(2)').toggle();
                $('tr.SubGroupAccount td:nth-child(2)').toggle();
                $('tr.LedgerAccount td:nth-child(2)').toggle();
                $('tr.LedgerDetailsAccount td:nth-child(2)').toggle();
                $('tr.GroupAccount td:nth-child(3)').toggle();
                $('tr.GroupAccounts td:nth-child(3)').toggle();
                $('tr.SubGroupAccount td:nth-child(3)').toggle();
                $('tr.LedgerAccount td:nth-child(3)').toggle();
                $('tr.LedgerDetailsAccount td:nth-child(3)').toggle();
            }
            else {
                $('tr.HeaderAccount td:nth-child(2)').hide();
                $('tr.SubHeaderAccount td:nth-child(2)').hide();
                $('tr.SubHeaderAccount td:nth-child(3)').hide();
                $('tr.GroupAccount td:nth-child(2)').hide();
                $('tr.GroupAccounts td:nth-child(2)').hide();
                $('tr.SubGroupAccount td:nth-child(2)').hide();
                $('tr.LedgerAccount td:nth-child(2)').hide();
                $('tr.LedgerDetailsAccount td:nth-child(2)').hide();
                $('tr.GroupAccount td:nth-child(3)').hide();
                $('tr.GroupAccounts td:nth-child(3)').hide();
                $('tr.SubGroupAccount td:nth-child(3)').hide();
                $('tr.LedgerAccount td:nth-child(3)').hide();
                $('tr.LedgerDetailsAccount td:nth-child(3)').hide();
            }
        });
        $('#chkShowTransaction').on("click", function () {
            if ($('#chkShowTransaction').is(":checked")) {
                $('tr.HeaderAccount td:nth-child(3)').toggle();
                $('tr.SubHeaderAccount td:nth-child(4)').toggle();
                $('tr.SubHeaderAccount td:nth-child(5)').toggle();
                $('tr.GroupAccount td:nth-child(4)').toggle();
                $('tr.GroupAccounts td:nth-child(4)').toggle();
                $('tr.SubGroupAccount td:nth-child(4)').toggle();
                $('tr.LedgerAccount td:nth-child(4)').toggle();
                $('tr.LedgerDetailsAccount td:nth-child(4)').toggle();
                $('tr.GroupAccount td:nth-child(5)').toggle();
                $('tr.GroupAccounts td:nth-child(5)').toggle();
                $('tr.SubGroupAccount td:nth-child(5)').toggle();
                $('tr.LedgerAccount td:nth-child(5)').toggle();
                $('tr.LedgerDetailsAccount td:nth-child(5)').toggle();
            }
            else {
                $('tr.HeaderAccount td:nth-child(3)').hide();
                $('tr.SubHeaderAccount td:nth-child(4)').hide();
                $('tr.SubHeaderAccount td:nth-child(5)').hide();
                $('tr.GroupAccount td:nth-child(4)').hide();
                $('tr.GroupAccounts td:nth-child(4)').hide();
                $('tr.SubGroupAccount td:nth-child(4)').hide();
                $('tr.LedgerAccount td:nth-child(4)').hide();
                $('tr.LedgerDetailsAccount td:nth-child(4)').hide();
                $('tr.GroupAccount td:nth-child(5)').hide();
                $('tr.GroupAccounts td:nth-child(5)').hide();
                $('tr.SubGroupAccount td:nth-child(5)').hide();
                $('tr.LedgerAccount td:nth-child(5)').hide();
                $('tr.LedgerDetailsAccount td:nth-child(5)').hide();
            }
        });



        pathArray = location.href.split('=');
       
        protocol = pathArray[0];
        if (protocol != pathArray) {
            param = {
                prefCode: window.location.search.substr(1).split('=')[1],
            };
            $.ajax({
                type: 'POST',
                async: false,
                url: "../TrialBalance/getfigdata",
                data: JSON.stringify(param),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    figureAmount = response[0].figureAmount;
                    decimalPlacesAmount = response[0].roundupAmount;
                    fromDate = response[0].fromDate;
                    toDate = response[0].toDate;
                    //$("#round1") = decimalPlacesAmount;
                    //$("#figure1") = figureAmount;
                    $("#divBalanceSheetReport").empty().append(response);
                }
            });
            function reloaddata() {
                $('#Loading').show();
                $('#MyContextMenu').hide();
                $('#MyContextMenus').hide();


                var param = {
                    FromDate: fromDate,
                    ToDate: toDate,
                    figureAmount: figureAmount,
                    roundupAmount: decimalPlacesAmount,
                };
                $.ajax({
                    type: 'POST',
                    async: false,
                    url: "../TrialBalance/TrialBalanceTreeGridData/",
                    data: JSON.stringify(param),
                    contentType: "application/json; charset=utf-8",
                    success: function (response) {
                        conssole.log("on reload function");
                        //if (param.figureAmount == crore)
                        //{
                        //    figureAmount = 10000000
                        //}
                        switch (param.figureAmount) {
                            case "lakh": figureAmount = 100000;
                                break;
                            case "thousand": figureAmount = 1000;
                                break;
                            case "crore": figureAmount = 10000000;
                                break;
                            case "Actual": figureAmount = 1;
                                break;
                        }
                        switch (param.roundupAmount) {
                            case "0.0": decimalPlacesAmount = 1;
                                break;
                            case "0.00": decimalPlacesAmount = 2;
                                break;
                            case "0.000": decimalPlacesAmount = 3;
                                break;
                            case "0.0000": decimalPlacesAmount = 4;
                                break;
                        }
                        switch (decimalPlacesAmount) {
                            case "0.0": decimalPlacesAmount = 1;
                                break;
                            case "0.00": decimalPlacesAmount = 2;
                                break;
                            case "0.000": decimalPlacesAmount = 3;
                                break;
                            case "0.0000": decimalPlacesAmount = 4;
                                break;
                        }
                        switch (figureAmount) {
                            case "100000": a = "lakh";
                                break;
                            case "1000": a = "thousand";
                                break;
                            case "10000000": a = "crore";
                                break;
                            case "1": a = "Actual";
                                break;
                        }
                        $('#asdf').text(a);
                        $("#divBalanceSheetReport").empty().append(response);
                        // Here Total Starts
                        var Count = $('#divBalanceSheetReport tr').length + 1;
                        var i = 0;
                        var GroupNo = 0;
                        var SubGroupNo = 0;
                        var Ledger = 0;
                        var DrTotal = 0;
                        var CrTotal = 0;
                        var DrClosingG = 0;
                        var CrClosingG = 0;
                        var DrClosingS = 0;
                        var CrClosingS = 0;
                        var DrClosing = 0;
                        var CrClosing = 0;
                        var BalanceG = 0;
                        var BalanceS = 0;
                        var BalanceL = 0;
                        var DrTotalO = 0;
                        var CrTotalO = 0;
                        var DrClosingGO = 0;
                        var CrClosingGO = 0;
                        var DrClosingSO = 0;
                        var CrClosingSO = 0;
                        var DrClosingO = 0;
                        var CrClosingO = 0;
                        var BalanceGO = 0;
                        var BalanceSO = 0;
                        var BalanceLO = 0;
                        var DrTotalT = 0;
                        var CrTotalT = 0;
                        var DrClosingGT = 0;
                        var CrClosingGT = 0;
                        var DrClosingST = 0;
                        var CrClosingST = 0;
                        var DrClosingT = 0;
                        var CrClosingT = 0;
                        var BalanceGT = 0;
                        var BalanceST = 0;
                        var BalanceLT = 0;
                        while (i < Count) {
                            i = i + 1;
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "GroupAccount" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "GroupAccounts") {
                                if (i > 2) {
                                    BalanceG = Number(DrClosingG) - Number(CrClosingG);
                                    if (BalanceG < 0) { DrClosingG = 0; CrClosingG = Number(BalanceG) * -1; }
                                    else { DrClosingG = Number(BalanceG); CrClosingG = 0; }
                                    BalanceS = Number(DrClosingS) - Number(CrClosingS);
                                    if (BalanceS < 0) { DrClosingS = 0; CrClosingS = Number(BalanceS) * -1; }
                                    else { DrClosingS = Number(BalanceS); CrClosingS = 0; }

                                    $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingG / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingG / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingS = 0; CrClosingS = 0;
                                    DrTotal = DrTotal + DrClosingG;
                                    CrTotal = CrTotal + CrClosingG;
                                    DrClosingG = 0; CrClosingG = 0;

                                    //BalanceGO = Number(DrClosingGO) - Number(CrClosingGO);
                                    //if (BalanceGO < 0) { DrClosingGO = 0; CrClosingGO = Number(BalanceGO) * -1; }
                                    //else { DrClosingGO = Number(BalanceGO); CrClosingGO = 0; }
                                    //BalanceSO = Number(DrClosingSO) - Number(CrClosingSO);
                                    //if (BalanceSO < 0) { DrClosingSO = 0; CrClosingSO = Number(BalanceSO) * -1; }
                                    //else { DrClosingSO = Number(BalanceSO); CrClosingSO = 0; }
                                    $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingGO / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingGO / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingSO = 0; CrClosingSO = 0;
                                    DrTotalO = DrTotalO + DrClosingGO;
                                    CrTotalO = CrTotalO + CrClosingGO;
                                    DrClosingGO = 0; CrClosingGO = 0;

                                    //BalanceGT = Number(DrClosingGT) - Number(CrClosingGT);
                                    //if (BalanceGT < 0) { DrClosingGT = 0; CrClosingGT = Number(BalanceGT) * -1; }
                                    //else { DrClosingGT = Number(BalanceGT); CrClosingGT = 0; }
                                    //BalanceST = Number(DrClosingST) - Number(CrClosingST);
                                    //if (BalanceST < 0) { DrClosingST = 0; CrClosingST = Number(BalanceST) * -1; }
                                    //else { DrClosingST = Number(BalanceST); CrClosingST = 0; }
                                    $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingGT / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingGT / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingST = 0; CrClosingST = 0;
                                    DrTotalT = DrTotalT + DrClosingGT;
                                    CrTotalT = CrTotalT + CrClosingGT;
                                    DrClosingGT = 0; CrClosingGT = 0;
                                }
                                GroupNo = i;
                                i = i + 1;
                                if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "SubGroupAccount") {
                                    SubGroupNo = i;
                                    i = i + 1;
                                    if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                                        Ledger = i;
                                        i = i + 1;
                                        if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                            while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                                DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                                CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                                DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                                CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                                DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                                CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                i = i + 1;
                                            }
                                        }
                                        BalanceL = Number(DrClosing) - Number(CrClosing);
                                        if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                                        else { DrClosing = Number(BalanceL); CrClosing = 0; }
                                        $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                        DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                        CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                        DrClosing = 0; CrClosing = 0;

                                        //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                                        //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                                        //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                                        $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                        DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                        CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                        DrClosingO = 0; CrClosingO = 0;

                                        //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                                        //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                                        //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                                        $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                        DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                        CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                        DrClosingT = 0; CrClosingT = 0;

                                        i = i - 1;
                                    }
                                    else {
                                        if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                            while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                                DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                                CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                                DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                                CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                                DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                                CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                                i = i + 1;
                                            }
                                        }
                                        DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                        CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                        DrClosing = 0; CrClosing = 0;

                                        DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                        CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                        DrClosingO = 0; CrClosingO = 0;

                                        DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                        CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                        DrClosingT = 0; CrClosingT = 0;
                                        i = i - 1;
                                    }
                                }
                            }
                            else if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "SubGroupAccount") {
                                BalanceS = Number(DrClosingS) - Number(CrClosingS);
                                if (BalanceS < 0) { DrClosingS = 0; CrClosingS = Number(BalanceS) * -1; }
                                else { DrClosingS = Number(BalanceS); CrClosingS = 0; }
                                $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingS = 0; CrClosingS = 0;

                                //BalanceSO = Number(DrClosingSO) - Number(CrClosingSO);
                                //if (BalanceSO < 0) { DrClosingSO = 0; CrClosingSO = Number(BalanceSO) * -1; }
                                //else { DrClosingSO = Number(BalanceSO); CrClosingSO = 0; }
                                $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingSO = 0; CrClosingSO = 0;

                                //BalanceST = Number(DrClosingST) - Number(CrClosingST);
                                //if (BalanceST < 0) { DrClosingST = 0; CrClosingST = Number(BalanceST) * -1; }
                                //else { DrClosingST = Number(BalanceST); CrClosingST = 0; }
                                $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingST = 0; CrClosingST = 0;
                                SubGroupNo = i;
                                i = i + 1;
                                if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                                    Ledger = i;
                                    i = i + 1;
                                    if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                        while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                            DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                            CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                            DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                            CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                            DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                            CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            i = i + 1;
                                        }
                                    }
                                    BalanceL = Number(DrClosing) - Number(CrClosing);
                                    if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                                    else { DrClosing = Number(BalanceL); CrClosing = 0; }
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                    CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                    DrClosing = 0; CrClosing = 0;

                                    //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                                    //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                                    //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                    CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                    DrClosingO = 0; CrClosingO = 0;

                                    //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                                    //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                                    //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                    CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                    DrClosingT = 0; CrClosingT = 0;
                                    i = i - 1;
                                }
                                else {
                                    if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                        while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                            DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                            CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                            DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                            CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                            DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                            CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            i = i + 1;
                                        }
                                    }
                                    DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                    CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                    DrClosing = 0; CrClosing = 0;

                                    DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                    CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                    DrClosingO = 0; CrClosingO = 0;

                                    DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                    CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                    DrClosingT = 0; CrClosingT = 0;
                                    i = i - 1;
                                }
                            }
                            else {
                                if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                                    Ledger = i;
                                    i = i + 1;
                                    if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                        while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                            DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                            CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                            DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                            CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                            DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                            CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                            i = i + 1;
                                        }
                                    }
                                    BalanceL = Number(DrClosing) - Number(CrClosing);
                                    if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                                    else { DrClosing = Number(BalanceL); CrClosing = 0; }
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                    CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                    DrClosing = 0; CrClosing = 0;

                                    //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                                    //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                                    //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                    CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                    DrClosingO = 0; CrClosingO = 0;

                                    //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                                    //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                                    //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                    DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                    CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                    DrClosingT = 0; CrClosingT = 0;
                                    i = i - 1;
                                }
                            }
                        }
                        $('tr.GroupAccounts').find('td:eq(1)').text(addCommas(Number(DrTotalO / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr.GroupAccounts').find('td:eq(2)').text(addCommas(Number(CrTotalO / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr.GroupAccounts').find('td:eq(3)').text(addCommas(Number(DrTotalT / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr.GroupAccounts').find('td:eq(4)').text(addCommas(Number(CrTotalT / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr.GroupAccounts').find('td:eq(5)').text(addCommas(Number(DrTotal / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr.GroupAccounts').find('td:eq(6)').text(addCommas(Number(CrTotal / figureAmount).toFixed(decimalPlacesAmount)));
                        //Ends Here
                    }
                });
                function addCommas(nStr) {
                    nStr += '';
                    x = nStr.split('.');
                    x1 = x[0];
                    x2 = x.length > 1 ? '.' + x[1] : '';
                    var rgx = /(\d+)(\d{3})/;
                    while (rgx.test(x1)) {
                        x1 = x1.replace(rgx, '$1' + ',' + '$2');
                    }
                    return x1 + x2;
                }
                $("input[value=rdbExpandAll]:radio").change(function () {
                    $('tr.GroupAccount').show();
                    $('tr.GroupAccounts').show();
                    $('tr.SubGroupAccount').show();
                    $('tr.LedgerAccount').show();
                    $('tr.LedgerDetailsAccount').show();
                    $('tr.GroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
                    $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
                    $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
                    $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '60px')
                });
                $("input[value=rdbCollapseAll]:radio").change(function () {
                    $('tr.GroupAccount').show();
                    $('tr.GroupAccounts').show();
                    $('tr.SubGroupAccount').hide();
                    $('tr.LedgerAccount').hide();
                    $('tr.LedgerDetailsAccount').hide();
                    $('tr.GroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
                    $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
                    $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
                    $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '60px')
                });
                $("input[value=rdbLedger]:radio").change(function () {
                    $('tr.GroupAccount').hide();
                    $('tr.SubGroupAccount').hide();
                    $('tr.LedgerAccount').hide();
                    $('tr.LedgerDetailsAccount').show();
                    $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '5px')
                });
                $('.GroupAccount').click(function () {
                    if ($(this).find('a').attr('class') == 'fa fa-plus') {
                        $(this).find('a').removeClass('fa fa-plus').addClass('fa fa-minus');
                        $(this).nextUntil('tr.GroupAccount').toggle();
                        $('tr.GroupAccount').show();
                        $('tr.GroupAccounts').show();
                        $(this).nextUntil('tr.SubGroupAccount').show();
                        $('tr.LedgerAccount').hide();
                        $('tr.LedgerDetailsAccount').hide();
                        $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
                    } else {
                        $(this).find('a').removeClass('fa fa-minus').addClass('fa fa-plus');
                        $(this).nextUntil('tr.GroupAccount').toggle();
                        $('tr.GroupAccount').show();
                        $('tr.GroupAccounts').show();
                        $(this).nextUntil('tr.SubGroupAccount').hide();
                        $('tr.LedgerAccount').hide();
                        $('tr.LedgerDetailsAccount').hide();
                        $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
                    }
                });
                $('.SubGroupAccount').click(function () {
                    var i = 100;
                    var cssclass = 'LedgerAccount';
                    var lastTr = $(this);
                    while (i != 0) {
                        if (lastTr.next('tr').attr('class') != 'LedgerDetailsAccount ledger' && lastTr.next('tr').attr('class') != 'LedgerDetailsAccount sledger') {
                            if (lastTr.next('tr').attr('class') != cssclass) {
                                cssclass = lastTr.next('tr').attr('class');
                                i = 1;
                            }
                        }
                        lastTr = lastTr.next('tr');
                        i = i - 1;
                    }
                    if ($(this).next('tr').attr('class') == "LedgerDetailsAccount ledger" || $(this).next('tr').attr('class') == "LedgerDetailsAccount sledger" || $(this).next('tr').attr('class') == "GroupAccounts") {
                        if (cssclass == 'GroupAccount') {
                            $(this).nextUntil('tr.GroupAccount').toggle();
                        }
                        if (cssclass == 'GroupAccounts') {
                            $(this).nextUntil('tr.GroupAccounts').toggle();
                        }
                        else if (cssclass == 'SubGroupAccount') {
                            $(this).nextUntil('tr.SubGroupAccount').toggle();
                        }
                        else if (cssclass == 'LedgerAccount') {
                            $(this).nextUntil('tr.LedgerAccount').toggle();
                        }
                        else if (cssclass == 'LedgerDetailsAccount ledger' || cssclass == 'LedgerDetailsAccount sledger') {
                            $(this).nextUntil('tr.LedgerDetailsAccount').toggle();
                        }
                    }
                    else if ($(this).find('a').attr('class') == 'fa fa-plus' || $(this).find('a').attr('class') == 'fa-plus fa') {
                        $(this).find('a').removeClass('fa-plus fa').removeClass('fa fa-plus').addClass('fa fa-minus');
                        if (cssclass == 'SubGroupAccount') {
                            $(this).nextUntil('tr.SubGroupAccount').toggle();
                        }
                        else if (cssclass == 'GroupAccount') {
                            $(this).nextUntil('tr.GroupAccount').toggle();
                        }
                        else {
                            //$(this).nextUntil('tr.GroupAccount').toggle();
                        }
                        $('tr.LedgerDetailsAccount').hide();
                        $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
                    } else {
                        $(this).find('a').removeClass('fa-minus fa').removeClass('fa fa-minus').addClass('fa fa-plus');

                        if (cssclass == 'SubGroupAccount') {
                            $(this).nextUntil('tr.SubGroupAccount').toggle();
                        }
                        else if (cssclass == 'GroupAccount') {
                            $(this).nextUntil('tr.GroupAccount').toggle();
                        }
                        else {
                            //$(this).nextUntil('tr.GroupAccount').toggle();
                        }
                        $('tr.LedgerDetailsAccount').hide();
                        $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
                    }
                });
                $('.LedgerAccount').click(function () {
                    var i = 100;
                    var cssclass = 'LedgerDetailsAccount ledger';
                    var lastTr = $(this);
                    while (i != 0) {
                        if (lastTr.next('tr').attr('class') != 'LedgerDetailsAccount ledger' && lastTr.next('tr').attr('class') != 'LedgerDetailsAccount sledger') {
                            if (lastTr.next('tr').attr('class') != cssclass) {
                                cssclass = lastTr.next('tr').attr('class');
                                i = 1;
                            }
                        }
                        lastTr = lastTr.next('tr');
                        i = i - 1;
                    }
                    if ($(this).find('a').attr('class') == 'fa fa-plus' || $(this).find('a').attr('class') == 'fa-plus fa') {
                        $(this).find('a').removeClass('fa-plus fa').removeClass('fa fa-plus').addClass('fa fa-minus');
                        if (cssclass == 'LedgerAccount') {
                            $(this).nextUntil('tr.LedgerAccount').toggle();
                        }
                        else if (cssclass == 'SubGroupAccount') {
                            $(this).nextUntil('tr.SubGroupAccount').toggle();
                        }
                        else if (cssclass == 'GroupAccount') {
                            $(this).nextUntil('tr.GroupAccount').toggle();
                        }
                        else {
                            //$(this).nextUntil('tr.GroupAccount').toggle();
                        }
                    } else {
                        $(this).find('a').removeClass('fa-minus fa').removeClass('fa fa-minus').addClass('fa fa-plus');

                        if (cssclass == 'LedgerAccount') {
                            $(this).nextUntil('tr.LedgerAccount').toggle();
                        }
                        else if (cssclass == 'SubGroupAccount') {
                            $(this).nextUntil('tr.SubGroupAccount').toggle();
                        }
                        else if (cssclass == 'GroupAccount') {
                            $(this).nextUntil('tr.GroupAccount').toggle();
                        }
                        else {
                            //$(this).nextUntil('tr.GroupAccount').toggle();
                        }
                    }
                });
                $('.LedgerDetailsAccount').dblclick(function () {
                    document.getElementById('DetailScreen').style.display = 'block';
                    $("#divJQGridDetails").show();
                    Id = $(this).find('span').attr("id");
                    AccountDesc = $(this).find('span').text();
                    $('#hddledgeraccount').val(Id);
                    $('#hddAccountDesc').val(AccountDesc);
                    jQuery("#JQGridDetails").setGridParam({
                        url: "../TrialBalance/OnTrialBalanceDateWiseRequested?Id=" + Id.replace("&", "__") + "&From=" + $('#FromDate').val() + "&To=" + $('#ToDate').val(),
                        page: 1
                    });
                    //jQuery("#JQGridDetails").setCaption("<b>Statement of " + AccountDesc + "</b>");
                    $("#JQGridDetails").jqGrid("setCaption", "<b>Statement of " + AccountDesc + "</b>");
                    jQuery("#JQGridDetails").trigger('reloadGrid');
                    //$.ajax({
                    //    url: "../TrialBalance/OnTrialBalanceDateWiseRequested",
                    //    method: "POST",
                    //    data: {Id:Id.replace("&", "__"), From:$('#FromDate').val(), To:$('#ToDate').val()},
                    //    success: function (response) {
                    //        alert(response);
                    //        jQuery("#JQGridDetails")
                    //            .setCaption("<b>Statement of " + AccountDesc + "</b>")
                    //            .trigger('reloadGrid');

                    //    }
                    //});
                    //jQuery("#JQGridDetails")
                    //    .setGridParam({ url: "../TrialBalance/OnTrialBalanceDateWiseRequested?Id=" + Id.replace("&", "__") + "&From=" + $('#FromDate').val() + "&To=" + $('#ToDate').val(), page: 1 })
                    //    .setCaption("<b>Statement of " + AccountDesc + "</b>")
                    //    .trigger('reloadGrid');
                    $('#fromInputDateVoucher').val($('#fromInputDate').val());
                    $('#toInputDateVoucher').val($('#toInputDate').val());
                    $('#FromDateVoucher').val($('#FromDate').val());
                    $('#ToDateVoucher').val($('#ToDate').val());
                    $('#ddlDateFilterVoucher').val($('option:selected', '#ddlDateFilter').val());
                    $("#divJQGridDetails").css('margin-top', '0px');
                });
                $('tr.SubGroupAccount').hide();
                $('tr.LedgerAccount').hide();
                $('tr.LedgerDetailsAccount').hide();
                $('#Loading').hide();
                $('#MyContextMenu').show();
                $('#MyContextMenus').show();
                AssignRightClick();
                $('#chkShowOpening').click();
                $('#chkShowTransaction').click();
                $('#chkShowOpening').removeAttr('checked');
                $('#chkShowTransaction').removeAttr('checked');
                $('input[value=rdbCollapseAll]:radio').prop('checked', true);
                $('input[value=rdbExpandAll]:radio').removeAttr('checked');
                $('input[value=rdbLedger]:radio').removeAttr('checked');

            }

            reloaddata();


        }
        else {
            $("#btnCommonSearch").click();
        }
        $(".nav li a").removeClass("active");
        $('#TrialBalance').addClass('active');
    });
    $("#btnSavepref").on("click", function (eve) {
        var param = {
            Id: $("#ddlDateFilterP").val(),
            From: $("#FromDateP").val(),
            To: $("#ToDateP").val(),
            figureAmount: $("#figure1").val(),
            roundupAmount: $("#round1").val(),
            PreferenceName: $("#PreferenceName").val(),
            SetDefault: $('#SetDefault').prop('checked'),
        };
        $.ajax({
            type: 'POST',
            async: false,
            url: "../TrialBalance/Consolidated/",
            data: JSON.stringify(param),
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                //$("#divBalanceSheetReport").empty().append(response);
            }
        });

    });

    $("#btnOk").on("click", function () {

        $('#Loading').show();
        $('#MyContextMenu').hide();
        $('#MyContextMenus').hide();

        var param = {
            FromDate: $("#FromDateP").val(),
            ToDate: $("#ToDateP").val(),
            figureAmount: $("#figure1").val(),
            roundupAmount: $("#round1").val(),
        };

        $.ajax({
            type: 'POST',
            async: false,
            url: "../TrialBalance/TrialBalanceTreeGridData/",
            data: JSON.stringify(param),
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                //if (param.figureAmount == crore)
                //{
                //    figureAmount = 10000000
                //}
                switch (param.figureAmount) {
                    case "lakh": figureAmount = 100000;
                        break;
                    case "thousand": figureAmount = 1000;
                        break;
                    case "crore": figureAmount = 10000000;
                        break;
                    case "Actual": figureAmount = 1;
                        break;
                }
                switch (param.roundupAmount) {
                    case "0.0": decimalPlacesAmount = 1;
                        break;
                    case "0.00": decimalPlacesAmount = 2;
                        break;
                    case "0.000": decimalPlacesAmount = 3;
                        break;
                    case "0.0000": decimalPlacesAmount = 4;
                        break;
                }
                switch (decimalPlacesAmount) {
                    case "0.0": decimalPlacesAmount = 1;
                        break;
                    case "0.00": decimalPlacesAmount = 2;
                        break;
                    case "0.000": decimalPlacesAmount = 3;
                        break;
                    case "0.0000": decimalPlacesAmount = 4;
                        break;
                }
                switch (figureAmount) {
                    case 100000: a = "lakh";
                        break;
                    case 1000: a = "thousand";
                        break;
                    case 10000000: a = "crore";
                        break;
                    case 1: a = "Actual";
                        break;
                }
                $('#asdf').text(a);
                $("#divBalanceSheetReport").empty().append(response);
                // Here Total Starts
                var Count = $('#divBalanceSheetReport tr').length + 1;
                var i = 0; var GroupNo = 0; var SubGroupNo = 0; var Ledger = 0; var DrTotal = 0; var CrTotal = 0; var DrClosingG = 0; var CrClosingG = 0; var DrClosingS = 0; var CrClosingS = 0; var DrClosing = 0; var CrClosing = 0; var BalanceG = 0; var BalanceS = 0; var BalanceL = 0;
                var DrTotalO = 0; var CrTotalO = 0; var DrClosingGO = 0; var CrClosingGO = 0; var DrClosingSO = 0; var CrClosingSO = 0; var DrClosingO = 0; var CrClosingO = 0; var BalanceGO = 0; var BalanceSO = 0; var BalanceLO = 0;
                var DrTotalT = 0; var CrTotalT = 0; var DrClosingGT = 0; var CrClosingGT = 0; var DrClosingST = 0; var CrClosingST = 0; var DrClosingT = 0; var CrClosingT = 0; var BalanceGT = 0; var BalanceST = 0; var BalanceLT = 0;
                while (i < Count) {
                    i = i + 1;
                    if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "GroupAccount" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "GroupAccounts") {
                        if (i > 2) {
                            BalanceG = Number(DrClosingG) - Number(CrClosingG);
                            if (BalanceG < 0) { DrClosingG = 0; CrClosingG = Number(BalanceG) * -1; }
                            else { DrClosingG = Number(BalanceG); CrClosingG = 0; }
                            BalanceS = Number(DrClosingS) - Number(CrClosingS);
                            if (BalanceS < 0) { DrClosingS = 0; CrClosingS = Number(BalanceS) * -1; }
                            else { DrClosingS = Number(BalanceS); CrClosingS = 0; }

                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingG / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingG / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingS = 0; CrClosingS = 0;
                            DrTotal = DrTotal + DrClosingG;
                            CrTotal = CrTotal + CrClosingG;
                            DrClosingG = 0; CrClosingG = 0;

                            //BalanceGO = Number(DrClosingGO) - Number(CrClosingGO);
                            //if (BalanceGO < 0) { DrClosingGO = 0; CrClosingGO = Number(BalanceGO) * -1; }
                            //else { DrClosingGO = Number(BalanceGO); CrClosingGO = 0; }
                            //BalanceSO = Number(DrClosingSO) - Number(CrClosingSO);
                            //if (BalanceSO < 0) { DrClosingSO = 0; CrClosingSO = Number(BalanceSO) * -1; }
                            //else { DrClosingSO = Number(BalanceSO); CrClosingSO = 0; }
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingGO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingGO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingSO = 0; CrClosingSO = 0;
                            DrTotalO = DrTotalO + DrClosingGO;
                            CrTotalO = CrTotalO + CrClosingGO;
                            DrClosingGO = 0; CrClosingGO = 0;

                            //BalanceGT = Number(DrClosingGT) - Number(CrClosingGT);
                            //if (BalanceGT < 0) { DrClosingGT = 0; CrClosingGT = Number(BalanceGT) * -1; }
                            //else { DrClosingGT = Number(BalanceGT); CrClosingGT = 0; }
                            //BalanceST = Number(DrClosingST) - Number(CrClosingST);
                            //if (BalanceST < 0) { DrClosingST = 0; CrClosingST = Number(BalanceST) * -1; }
                            //else { DrClosingST = Number(BalanceST); CrClosingST = 0; }
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingGT / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingGT / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingST = 0; CrClosingST = 0;
                            DrTotalT = DrTotalT + DrClosingGT;
                            CrTotalT = CrTotalT + CrClosingGT;
                            DrClosingGT = 0; CrClosingGT = 0;
                        }
                        GroupNo = i;
                        i = i + 1;
                        if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "SubGroupAccount") {
                            SubGroupNo = i;
                            i = i + 1;
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                                Ledger = i;
                                i = i + 1;
                                if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                        DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                        CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                        DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                        CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                        DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                        CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        i = i + 1;
                                    }
                                }
                                BalanceL = Number(DrClosing) - Number(CrClosing);
                                if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                                else { DrClosing = Number(BalanceL); CrClosing = 0; }
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                DrClosing = 0; CrClosing = 0;

                                //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                                //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                                //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                DrClosingO = 0; CrClosingO = 0;

                                //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                                //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                                //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                DrClosingT = 0; CrClosingT = 0;

                                i = i - 1;
                            }
                            else {
                                if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                        DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                        CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                        DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                        CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                        DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                        CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        i = i + 1;
                                    }
                                }
                                DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                DrClosing = 0; CrClosing = 0;

                                DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                DrClosingO = 0; CrClosingO = 0;

                                DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                DrClosingT = 0; CrClosingT = 0;
                                i = i - 1;
                            }
                        }
                    }
                    else if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "SubGroupAccount") {
                        BalanceS = Number(DrClosingS) - Number(CrClosingS);
                        if (BalanceS < 0) { DrClosingS = 0; CrClosingS = Number(BalanceS) * -1; }
                        else { DrClosingS = Number(BalanceS); CrClosingS = 0; }
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                        DrClosingS = 0; CrClosingS = 0;

                        //BalanceSO = Number(DrClosingSO) - Number(CrClosingSO);
                        //if (BalanceSO < 0) { DrClosingSO = 0; CrClosingSO = Number(BalanceSO) * -1; }
                        //else { DrClosingSO = Number(BalanceSO); CrClosingSO = 0; }
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                        DrClosingSO = 0; CrClosingSO = 0;

                        //BalanceST = Number(DrClosingST) - Number(CrClosingST);
                        //if (BalanceST < 0) { DrClosingST = 0; CrClosingST = Number(BalanceST) * -1; }
                        //else { DrClosingST = Number(BalanceST); CrClosingST = 0; }
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                        DrClosingST = 0; CrClosingST = 0;
                        SubGroupNo = i;
                        i = i + 1;
                        if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                            Ledger = i;
                            i = i + 1;
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                    CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                    DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                    CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                    DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                    CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    i = i + 1;
                                }
                            }
                            BalanceL = Number(DrClosing) - Number(CrClosing);
                            if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                            else { DrClosing = Number(BalanceL); CrClosing = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                            CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                            DrClosing = 0; CrClosing = 0;

                            //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                            //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                            //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                            CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                            DrClosingO = 0; CrClosingO = 0;

                            //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                            //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                            //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                            CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                            DrClosingT = 0; CrClosingT = 0;
                            i = i - 1;
                        }
                        else {
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                    CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                    DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                    CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                    DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                    CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    i = i + 1;
                                }
                            }
                            DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                            CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                            DrClosing = 0; CrClosing = 0;

                            DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                            CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                            DrClosingO = 0; CrClosingO = 0;

                            DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                            CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                            DrClosingT = 0; CrClosingT = 0;
                            i = i - 1;
                        }
                    }
                    else {
                        if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                            Ledger = i;
                            i = i + 1;
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                    CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                    DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                    CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                    DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                    CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    i = i + 1;
                                }
                            }
                            BalanceL = Number(DrClosing) - Number(CrClosing);
                            if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                            else { DrClosing = Number(BalanceL); CrClosing = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                            CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                            DrClosing = 0; CrClosing = 0;

                            //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                            //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                            //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                            CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                            DrClosingO = 0; CrClosingO = 0;

                            //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                            //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                            //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                            CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                            DrClosingT = 0; CrClosingT = 0;
                            i = i - 1;
                        }
                    }
                }
                $('tr.GroupAccounts').find('td:eq(1)').text(addCommas(Number(DrTotalO / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(2)').text(addCommas(Number(CrTotalO / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(3)').text(addCommas(Number(DrTotalT / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(4)').text(addCommas(Number(CrTotalT / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(5)').text(addCommas(Number(DrTotal / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(6)').text(addCommas(Number(CrTotal / figureAmount).toFixed(decimalPlacesAmount)));
                //Ends Here
            }
        });
        function addCommas(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            }
            return x1 + x2;
        }
        $("input[value=rdbExpandAll]:radio").change(function () {
            $('tr.GroupAccount').show();
            $('tr.GroupAccounts').show();
            $('tr.SubGroupAccount').show();
            $('tr.LedgerAccount').show();
            $('tr.LedgerDetailsAccount').show();
            $('tr.GroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
            $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
            $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
            $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '60px')
        });
        $("input[value=rdbCollapseAll]:radio").change(function () {
            $('tr.GroupAccount').show();
            $('tr.GroupAccounts').show();
            $('tr.SubGroupAccount').hide();
            $('tr.LedgerAccount').hide();
            $('tr.LedgerDetailsAccount').hide();
            $('tr.GroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '60px')
        });
        $("input[value=rdbLedger]:radio").change(function () {
            $('tr.GroupAccount').hide();
            $('tr.SubGroupAccount').hide();
            $('tr.LedgerAccount').hide();
            $('tr.LedgerDetailsAccount').show();
            $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '5px')
        });
        $('.GroupAccount').click(function () {
            if ($(this).find('a').attr('class') == 'fa fa-plus') {
                $(this).find('a').removeClass('fa fa-plus').addClass('fa fa-minus');
                $(this).nextUntil('tr.GroupAccount').toggle();
                $('tr.GroupAccount').show();
                $('tr.GroupAccounts').show();
                $(this).nextUntil('tr.SubGroupAccount').show();
                $('tr.LedgerAccount').hide();
                $('tr.LedgerDetailsAccount').hide();
                $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            } else {
                $(this).find('a').removeClass('fa fa-minus').addClass('fa fa-plus');
                $(this).nextUntil('tr.GroupAccount').toggle();
                $('tr.GroupAccount').show();
                $('tr.GroupAccounts').show();
                $(this).nextUntil('tr.SubGroupAccount').hide();
                $('tr.LedgerAccount').hide();
                $('tr.LedgerDetailsAccount').hide();
                $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            }
        });
        $('.SubGroupAccount').click(function () {
            var i = 100;
            var cssclass = 'LedgerAccount';
            var lastTr = $(this);
            while (i != 0) {
                if (lastTr.next('tr').attr('class') != 'LedgerDetailsAccount ledger' && lastTr.next('tr').attr('class') != 'LedgerDetailsAccount sledger') {
                    if (lastTr.next('tr').attr('class') != cssclass) {
                        cssclass = lastTr.next('tr').attr('class');
                        i = 1;
                    }
                }
                lastTr = lastTr.next('tr');
                i = i - 1;
            }
            if ($(this).next('tr').attr('class') == "LedgerDetailsAccount ledger" || $(this).next('tr').attr('class') == "LedgerDetailsAccount sledger" || $(this).next('tr').attr('class') == "GroupAccounts") {
                if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                if (cssclass == 'GroupAccounts') {
                    $(this).nextUntil('tr.GroupAccounts').toggle();
                }
                else if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'LedgerAccount') {
                    $(this).nextUntil('tr.LedgerAccount').toggle();
                }
                else if (cssclass == 'LedgerDetailsAccount ledger' || cssclass == 'LedgerDetailsAccount sledger') {
                    $(this).nextUntil('tr.LedgerDetailsAccount').toggle();
                }
            }
            else if ($(this).find('a').attr('class') == 'fa fa-plus' || $(this).find('a').attr('class') == 'fa-plus fa') {
                $(this).find('a').removeClass('fa-plus fa').removeClass('fa fa-plus').addClass('fa fa-minus');
                if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                else {
                    //$(this).nextUntil('tr.GroupAccount').toggle();
                }
                $('tr.LedgerDetailsAccount').hide();
                $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            } else {
                $(this).find('a').removeClass('fa-minus fa').removeClass('fa fa-minus').addClass('fa fa-plus');

                if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                else {
                    //$(this).nextUntil('tr.GroupAccount').toggle();
                }
                $('tr.LedgerDetailsAccount').hide();
                $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            }
        });
        $('.LedgerAccount').click(function () {
            var i = 100;
            var cssclass = 'LedgerDetailsAccount ledger';
            var lastTr = $(this);
            while (i != 0) {
                if (lastTr.next('tr').attr('class') != 'LedgerDetailsAccount ledger' && lastTr.next('tr').attr('class') != 'LedgerDetailsAccount sledger') {
                    if (lastTr.next('tr').attr('class') != cssclass) {
                        cssclass = lastTr.next('tr').attr('class');
                        i = 1;
                    }
                }
                lastTr = lastTr.next('tr');
                i = i - 1;
            }
            if ($(this).find('a').attr('class') == 'fa fa-plus' || $(this).find('a').attr('class') == 'fa-plus fa') {
                $(this).find('a').removeClass('fa-plus fa').removeClass('fa fa-plus').addClass('fa fa-minus');
                if (cssclass == 'LedgerAccount') {
                    $(this).nextUntil('tr.LedgerAccount').toggle();
                }
                else if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                else {
                    //$(this).nextUntil('tr.GroupAccount').toggle();
                }
            } else {
                $(this).find('a').removeClass('fa-minus fa').removeClass('fa fa-minus').addClass('fa fa-plus');

                if (cssclass == 'LedgerAccount') {
                    $(this).nextUntil('tr.LedgerAccount').toggle();
                }
                else if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                else {
                    //$(this).nextUntil('tr.GroupAccount').toggle();
                }
            }
        });
        $('.LedgerDetailsAccount').dblclick(function () {
            document.getElementById('DetailScreen').style.display = 'block';
            $("#divJQGridDetails").show();
            Id = $(this).find('span').attr("id");
            AccountDesc = $(this).find('span').text();
            $('#hddledgeraccount').val(Id);
            $('#hddAccountDesc').val(AccountDesc);
            jQuery("#JQGridDetails").setGridParam({
                url: "../TrialBalance/OnTrialBalanceDateWiseRequested?Id=" + Id.replace("&", "__") + "&From=" + $('#FromDate').val() + "&To=" + $('#ToDate').val(),
                page: 1
            });
            //jQuery("#JQGridDetails").setCaption("<b>Statement of " + AccountDesc + "</b>");
            $("#JQGridDetails").jqGrid("setCaption", "<b>Statement of " + AccountDesc + "</b>");
            jQuery("#JQGridDetails").trigger('reloadGrid');
            //$.ajax({
            //    url: "../TrialBalance/OnTrialBalanceDateWiseRequested",
            //    method: "POST",
            //    data: {Id:Id.replace("&", "__"), From:$('#FromDate').val(), To:$('#ToDate').val()},
            //    success: function (response) {
            //        alert(response);
            //        jQuery("#JQGridDetails")
            //            .setCaption("<b>Statement of " + AccountDesc + "</b>")
            //            .trigger('reloadGrid');

            //    }
            //});
            //jQuery("#JQGridDetails")
            //    .setGridParam({ url: "../TrialBalance/OnTrialBalanceDateWiseRequested?Id=" + Id.replace("&", "__") + "&From=" + $('#FromDate').val() + "&To=" + $('#ToDate').val(), page: 1 })
            //    .setCaption("<b>Statement of " + AccountDesc + "</b>")
            //    .trigger('reloadGrid');
            $('#fromInputDateVoucher').val($('#fromInputDate').val());
            $('#toInputDateVoucher').val($('#toInputDate').val());
            $('#FromDateVoucher').val($('#FromDate').val());
            $('#ToDateVoucher').val($('#ToDate').val());
            $('#ddlDateFilterVoucher').val($('option:selected', '#ddlDateFilter').val());
            $("#divJQGridDetails").css('margin-top', '0px');
        });
        $('tr.SubGroupAccount').hide();
        $('tr.LedgerAccount').hide();
        $('tr.LedgerDetailsAccount').hide();
        $('#Loading').hide();
        $('#MyContextMenu').show();
        $('#MyContextMenus').show();
        AssignRightClick();
        $('#chkShowOpening').click();
        $('#chkShowTransaction').click();
        $('#chkShowOpening').removeAttr('checked');
        $('#chkShowTransaction').removeAttr('checked');
        $('input[value=rdbCollapseAll]:radio').prop('checked', true);
        $('input[value=rdbExpandAll]:radio').removeAttr('checked');
        $('input[value=rdbLedger]:radio').removeAttr('checked');
    });
    $("#btnCommonSearch").on("click", function () {
        $('#Loading').show();
        $('#MyContextMenu').hide();
        $('#MyContextMenus').hide();
        var param = {
            FromDate: $('#FromDate').val(), ToDate: $('#ToDate').val()
        };
        $.ajax({
            type: 'POST',
            async: false,
            url: "../TrialBalance/TrialBalanceTreeGridData/",
            data: JSON.stringify(param),
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                switch (figureAmount) {
                    case "100000": a = "lakh";
                        break;
                    case "1000": a = "thousand";
                        break;
                    case "10000000": a = "crore";
                        break;
                    case "1": a = "Actual";
                        break;
                }
                $('#asdf').text(a);
                $("#divBalanceSheetReport").empty().append(response);
                // Here Total Starts
                var Count = $('#divBalanceSheetReport tr').length + 1;
                var i = 0; var GroupNo = 0; var SubGroupNo = 0; var Ledger = 0; var DrTotal = 0; var CrTotal = 0; var DrClosingG = 0; var CrClosingG = 0; var DrClosingS = 0; var CrClosingS = 0; var DrClosing = 0; var CrClosing = 0; var BalanceG = 0; var BalanceS = 0; var BalanceL = 0;
                var DrTotalO = 0; var CrTotalO = 0; var DrClosingGO = 0; var CrClosingGO = 0; var DrClosingSO = 0; var CrClosingSO = 0; var DrClosingO = 0; var CrClosingO = 0; var BalanceGO = 0; var BalanceSO = 0; var BalanceLO = 0;
                var DrTotalT = 0; var CrTotalT = 0; var DrClosingGT = 0; var CrClosingGT = 0; var DrClosingST = 0; var CrClosingST = 0; var DrClosingT = 0; var CrClosingT = 0; var BalanceGT = 0; var BalanceST = 0; var BalanceLT = 0;
                while (i < Count) {
                    i = i + 1;
                    if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "GroupAccount" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "GroupAccounts") {
                        if (i > 2) {
                            BalanceG = Number(DrClosingG) - Number(CrClosingG);
                            if (BalanceG < 0) { DrClosingG = 0; CrClosingG = Number(BalanceG) * -1; }
                            else { DrClosingG = Number(BalanceG); CrClosingG = 0; }
                            BalanceS = Number(DrClosingS) - Number(CrClosingS);
                            if (BalanceS < 0) { DrClosingS = 0; CrClosingS = Number(BalanceS) * -1; }
                            else { DrClosingS = Number(BalanceS); CrClosingS = 0; }

                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingG / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingG / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingS = 0; CrClosingS = 0;
                            DrTotal = DrTotal + DrClosingG;
                            CrTotal = CrTotal + CrClosingG;
                            DrClosingG = 0; CrClosingG = 0;

                            //BalanceGO = Number(DrClosingGO) - Number(CrClosingGO);
                            //if (BalanceGO < 0) { DrClosingGO = 0; CrClosingGO = Number(BalanceGO) * -1; }
                            //else { DrClosingGO = Number(BalanceGO); CrClosingGO = 0; }
                            //BalanceSO = Number(DrClosingSO) - Number(CrClosingSO);
                            //if (BalanceSO < 0) { DrClosingSO = 0; CrClosingSO = Number(BalanceSO) * -1; }
                            //else { DrClosingSO = Number(BalanceSO); CrClosingSO = 0; }
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingGO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingGO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingSO = 0; CrClosingSO = 0;
                            DrTotalO = DrTotalO + DrClosingGO;
                            CrTotalO = CrTotalO + CrClosingGO;
                            DrClosingGO = 0; CrClosingGO = 0;

                            //BalanceGT = Number(DrClosingGT) - Number(CrClosingGT);
                            //if (BalanceGT < 0) { DrClosingGT = 0; CrClosingGT = Number(BalanceGT) * -1; }
                            //else { DrClosingGT = Number(BalanceGT); CrClosingGT = 0; }
                            //BalanceST = Number(DrClosingST) - Number(CrClosingST);
                            //if (BalanceST < 0) { DrClosingST = 0; CrClosingST = Number(BalanceST) * -1; }
                            //else { DrClosingST = Number(BalanceST); CrClosingST = 0; }
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingGT / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + GroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingGT / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingST = 0; CrClosingST = 0;
                            DrTotalT = DrTotalT + DrClosingGT;
                            CrTotalT = CrTotalT + CrClosingGT;
                            DrClosingGT = 0; CrClosingGT = 0;
                        }
                        GroupNo = i;
                        i = i + 1;
                        if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "SubGroupAccount") {
                            SubGroupNo = i;
                            i = i + 1;
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                                Ledger = i;
                                i = i + 1;
                                if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                        DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                        CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                        DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                        CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                        DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                        CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        i = i + 1;
                                    }
                                }
                                BalanceL = Number(DrClosing) - Number(CrClosing);
                                if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                                else { DrClosing = Number(BalanceL); CrClosing = 0; }
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                DrClosing = 0; CrClosing = 0;

                                //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                                //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                                //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                DrClosingO = 0; CrClosingO = 0;

                                //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                                //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                                //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                                DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                DrClosingT = 0; CrClosingT = 0;

                                i = i - 1;
                            }
                            else {
                                if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                        DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                        CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                        DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                        CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                        DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                        CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                        i = i + 1;
                                    }
                                }
                                DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                                CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                                DrClosing = 0; CrClosing = 0;

                                DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                                CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                                DrClosingO = 0; CrClosingO = 0;

                                DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                                CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                                DrClosingT = 0; CrClosingT = 0;
                                i = i - 1;
                            }
                        }
                    }
                    else if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "SubGroupAccount") {
                        BalanceS = Number(DrClosingS) - Number(CrClosingS);
                        if (BalanceS < 0) { DrClosingS = 0; CrClosingS = Number(BalanceS) * -1; }
                        else { DrClosingS = Number(BalanceS); CrClosingS = 0; }
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosingS / figureAmount).toFixed(decimalPlacesAmount)));
                        DrClosingS = 0; CrClosingS = 0;

                        //BalanceSO = Number(DrClosingSO) - Number(CrClosingSO);
                        //if (BalanceSO < 0) { DrClosingSO = 0; CrClosingSO = Number(BalanceSO) * -1; }
                        //else { DrClosingSO = Number(BalanceSO); CrClosingSO = 0; }
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingSO / figureAmount).toFixed(decimalPlacesAmount)));
                        DrClosingSO = 0; CrClosingSO = 0;

                        //BalanceST = Number(DrClosingST) - Number(CrClosingST);
                        //if (BalanceST < 0) { DrClosingST = 0; CrClosingST = Number(BalanceST) * -1; }
                        //else { DrClosingST = Number(BalanceST); CrClosingST = 0; }
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                        $('tr:eq(' + SubGroupNo + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingST / figureAmount).toFixed(decimalPlacesAmount)));
                        DrClosingST = 0; CrClosingST = 0;
                        SubGroupNo = i;
                        i = i + 1;
                        if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                            Ledger = i;
                            i = i + 1;
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                    CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                    DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                    CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                    DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                    CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    i = i + 1;
                                }
                            }
                            BalanceL = Number(DrClosing) - Number(CrClosing);
                            if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                            else { DrClosing = Number(BalanceL); CrClosing = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                            CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                            DrClosing = 0; CrClosing = 0;

                            //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                            //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                            //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                            CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                            DrClosingO = 0; CrClosingO = 0;

                            //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                            //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                            //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                            CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                            DrClosingT = 0; CrClosingT = 0;
                            i = i - 1;
                        }
                        else {
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                    CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                    DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                    CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                    DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                    CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    i = i + 1;
                                }
                            }
                            DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                            CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                            DrClosing = 0; CrClosing = 0;

                            DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                            CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                            DrClosingO = 0; CrClosingO = 0;

                            DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                            CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                            DrClosingT = 0; CrClosingT = 0;
                            i = i - 1;
                        }
                    }
                    else {
                        if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerAccount") {
                            Ledger = i;
                            i = i + 1;
                            if ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                while ($('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount ledger" || $('tr:eq(' + i + ')', "#divBalanceSheetReport table").attr('class') == "LedgerDetailsAccount sledger") {
                                    DrClosing = DrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, ''));
                                    CrClosing = CrClosing + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, ''));

                                    DrClosingO = DrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, ''));
                                    CrClosingO = CrClosingO + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, ''));

                                    DrClosingT = DrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, ''));
                                    CrClosingT = CrClosingT + parseFloat($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, ''));

                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(1)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(2)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(3)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(4)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(5)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    $('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(Number($('tr:eq(' + i + ')', "#divBalanceSheetReport table").find('td:eq(6)').text().replace(/,/g, '')) / figureAmount).toFixed(decimalPlacesAmount)));
                                    i = i + 1;
                                }
                            }
                            BalanceL = Number(DrClosing) - Number(CrClosing);
                            if (BalanceL < 0) { DrClosing = 0; CrClosing = Number(BalanceL) * -1; }
                            else { DrClosing = Number(BalanceL); CrClosing = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(5)').text(addCommas(Number(DrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(6)').text(addCommas(Number(CrClosing / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingG = DrClosingG + DrClosing; DrClosingS = DrClosingS + DrClosing;
                            CrClosingG = CrClosingG + CrClosing; CrClosingS = CrClosingS + CrClosing;
                            DrClosing = 0; CrClosing = 0;

                            //BalanceLO = Number(DrClosingO) - Number(CrClosingO);
                            //if (BalanceLO < 0) { DrClosingO = 0; CrClosingO = Number(BalanceLO) * -1; }
                            //else { DrClosingO = Number(BalanceLO); CrClosingO = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(1)').text(addCommas(Number(DrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(2)').text(addCommas(Number(CrClosingO / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingGO = DrClosingGO + DrClosingO; DrClosingSO = DrClosingSO + DrClosingO;
                            CrClosingGO = CrClosingGO + CrClosingO; CrClosingSO = CrClosingSO + CrClosingO;
                            DrClosingO = 0; CrClosingO = 0;

                            //BalanceLT = Number(DrClosingT) - Number(CrClosingT);
                            //if (BalanceLT < 0) { DrClosingT = 0; CrClosingT = Number(BalanceLT) * -1; }
                            //else { DrClosingT = Number(BalanceLT); CrClosingT = 0; }
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(3)').text(addCommas(Number(DrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                            $('tr:eq(' + Ledger + ')', "#divBalanceSheetReport table").find('td:eq(4)').text(addCommas(Number(CrClosingT / figureAmount).toFixed(decimalPlacesAmount)));
                            DrClosingGT = DrClosingGT + DrClosingT; DrClosingST = DrClosingST + DrClosingT;
                            CrClosingGT = CrClosingGT + CrClosingT; CrClosingST = CrClosingST + CrClosingT;
                            DrClosingT = 0; CrClosingT = 0;
                            i = i - 1;
                        }
                    }
                }
                $('tr.GroupAccounts').find('td:eq(1)').text(addCommas(Number(DrTotalO / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(2)').text(addCommas(Number(CrTotalO / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(3)').text(addCommas(Number(DrTotalT / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(4)').text(addCommas(Number(CrTotalT / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(5)').text(addCommas(Number(DrTotal / figureAmount).toFixed(decimalPlacesAmount)));
                $('tr.GroupAccounts').find('td:eq(6)').text(addCommas(Number(CrTotal / figureAmount).toFixed(decimalPlacesAmount)));
                //Ends Here
            }
        });
        function addCommas(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            }
            return x1 + x2;
        }
        $("input[value=rdbExpandAll]:radio").change(function () {
            $('tr.GroupAccount').show();
            $('tr.GroupAccounts').show();
            $('tr.SubGroupAccount').show();
            $('tr.LedgerAccount').show();
            $('tr.LedgerDetailsAccount').show();
            $('tr.GroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
            $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
            $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-minus');
            $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '60px')
        });
        $("input[value=rdbCollapseAll]:radio").change(function () {
            $('tr.GroupAccount').show();
            $('tr.GroupAccounts').show();
            $('tr.SubGroupAccount').hide();
            $('tr.LedgerAccount').hide();
            $('tr.LedgerDetailsAccount').hide();
            $('tr.GroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '60px')
        });
        $("input[value=rdbLedger]:radio").change(function () {
            $('tr.GroupAccount').hide();
            $('tr.SubGroupAccount').hide();
            $('tr.LedgerAccount').hide();
            $('tr.LedgerDetailsAccount').show();
            $('tr.LedgerDetailsAccount td:nth-child(1)').css('padding-left', '5px')
        });
        $('.GroupAccount').click(function () {
            if ($(this).find('a').attr('class') == 'fa fa-plus') {
                $(this).find('a').removeClass('fa fa-plus').addClass('fa fa-minus');
                $(this).nextUntil('tr.GroupAccount').toggle();
                $('tr.GroupAccount').show();
                $('tr.GroupAccounts').show();
                $(this).nextUntil('tr.SubGroupAccount').show();
                $('tr.LedgerAccount').hide();
                $('tr.LedgerDetailsAccount').hide();
                $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            } else {
                $(this).find('a').removeClass('fa fa-minus').addClass('fa fa-plus');
                $(this).nextUntil('tr.GroupAccount').toggle();
                $('tr.GroupAccount').show();
                $('tr.GroupAccounts').show();
                $(this).nextUntil('tr.SubGroupAccount').hide();
                $('tr.LedgerAccount').hide();
                $('tr.LedgerDetailsAccount').hide();
                $('tr.SubGroupAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            }
        });
        $('.SubGroupAccount').click(function () {
            var i = 100;
            var cssclass = 'LedgerAccount';
            var lastTr = $(this);
            while (i != 0) {
                if (lastTr.next('tr').attr('class') != 'LedgerDetailsAccount ledger' && lastTr.next('tr').attr('class') != 'LedgerDetailsAccount sledger') {
                    if (lastTr.next('tr').attr('class') != cssclass) {
                        cssclass = lastTr.next('tr').attr('class');
                        i = 1;
                    }
                }
                lastTr = lastTr.next('tr');
                i = i - 1;
            }
            if ($(this).next('tr').attr('class') == "LedgerDetailsAccount ledger" || $(this).next('tr').attr('class') == "LedgerDetailsAccount sledger" || $(this).next('tr').attr('class') == "GroupAccounts") {
                if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                if (cssclass == 'GroupAccounts') {
                    $(this).nextUntil('tr.GroupAccounts').toggle();
                }
                else if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'LedgerAccount') {
                    $(this).nextUntil('tr.LedgerAccount').toggle();
                }
                else if (cssclass == 'LedgerDetailsAccount ledger' || cssclass == 'LedgerDetailsAccount sledger') {
                    $(this).nextUntil('tr.LedgerDetailsAccount').toggle();
                }
            }
            else if ($(this).find('a').attr('class') == 'fa fa-plus' || $(this).find('a').attr('class') == 'fa-plus fa') {
                $(this).find('a').removeClass('fa-plus fa').removeClass('fa fa-plus').addClass('fa fa-minus');
                if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                else {
                    //$(this).nextUntil('tr.GroupAccount').toggle();
                }
                $('tr.LedgerDetailsAccount').hide();
                $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            } else {
                $(this).find('a').removeClass('fa-minus fa').removeClass('fa fa-minus').addClass('fa fa-plus');

                if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                else {
                    //$(this).nextUntil('tr.GroupAccount').toggle();
                }
                $('tr.LedgerDetailsAccount').hide();
                $('tr.LedgerAccount').find('a').removeClass('fa fa-minus').removeClass('fa fa-plus').addClass('fa fa-plus');
            }
        });
        $('.LedgerAccount').click(function () {
            var i = 100;
            var cssclass = 'LedgerDetailsAccount ledger';
            var lastTr = $(this);
            while (i != 0) {
                if (lastTr.next('tr').attr('class') != 'LedgerDetailsAccount ledger' && lastTr.next('tr').attr('class') != 'LedgerDetailsAccount sledger') {
                    if (lastTr.next('tr').attr('class') != cssclass) {
                        cssclass = lastTr.next('tr').attr('class');
                        i = 1;
                    }
                }
                lastTr = lastTr.next('tr');
                i = i - 1;
            }
            if ($(this).find('a').attr('class') == 'fa fa-plus' || $(this).find('a').attr('class') == 'fa-plus fa') {
                $(this).find('a').removeClass('fa-plus fa').removeClass('fa fa-plus').addClass('fa fa-minus');
                if (cssclass == 'LedgerAccount') {
                    $(this).nextUntil('tr.LedgerAccount').toggle();
                }
                else if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                else {
                    //$(this).nextUntil('tr.GroupAccount').toggle();
                }
            } else {
                $(this).find('a').removeClass('fa-minus fa').removeClass('fa fa-minus').addClass('fa fa-plus');

                if (cssclass == 'LedgerAccount') {
                    $(this).nextUntil('tr.LedgerAccount').toggle();
                }
                else if (cssclass == 'SubGroupAccount') {
                    $(this).nextUntil('tr.SubGroupAccount').toggle();
                }
                else if (cssclass == 'GroupAccount') {
                    $(this).nextUntil('tr.GroupAccount').toggle();
                }
                else {
                    //$(this).nextUntil('tr.GroupAccount').toggle();
                }
            }
        });
        $('.LedgerDetailsAccount').dblclick(function () {
            document.getElementById('DetailScreen').style.display = 'block';
            $("#divJQGridDetails").show();
            Id = $(this).find('span').attr("id");
            AccountDesc = $(this).find('span').text();
            $('#hddledgeraccount').val(Id);
            $('#hddAccountDesc').val(AccountDesc);
            jQuery("#JQGridDetails").setGridParam({
                url: "../TrialBalance/OnTrialBalanceDateWiseRequested?Id=" + Id.replace("&", "__") + "&From=" + $('#FromDate').val() + "&To=" + $('#ToDate').val(),
                page: 1
            });
            //jQuery("#JQGridDetails").setCaption("<b>Statement of " + AccountDesc + "</b>");
            $("#JQGridDetails").jqGrid("setCaption", "<b>Statement of " + AccountDesc + "</b>");
            jQuery("#JQGridDetails").trigger('reloadGrid');
            //$.ajax({
            //    url: "../TrialBalance/OnTrialBalanceDateWiseRequested",
            //    method: "POST",
            //    data: {Id:Id.replace("&", "__"), From:$('#FromDate').val(), To:$('#ToDate').val()},
            //    success: function (response) {
            //        alert(response);
            //        jQuery("#JQGridDetails")
            //            .setCaption("<b>Statement of " + AccountDesc + "</b>")
            //            .trigger('reloadGrid');

            //    }
            //});
            //jQuery("#JQGridDetails")
            //    .setGridParam({ url: "../TrialBalance/OnTrialBalanceDateWiseRequested?Id=" + Id.replace("&", "__") + "&From=" + $('#FromDate').val() + "&To=" + $('#ToDate').val(), page: 1 })
            //    .setCaption("<b>Statement of " + AccountDesc + "</b>")
            //    .trigger('reloadGrid');
            $('#fromInputDateVoucher').val($('#fromInputDate').val());
            $('#toInputDateVoucher').val($('#toInputDate').val());
            $('#FromDateVoucher').val($('#FromDate').val());
            $('#ToDateVoucher').val($('#ToDate').val());
            $('#ddlDateFilterVoucher').val($('option:selected', '#ddlDateFilter').val());
            $("#divJQGridDetails").css('margin-top', '0px');
        });
        $('tr.SubGroupAccount').hide();
        $('tr.LedgerAccount').hide();
        $('tr.LedgerDetailsAccount').hide();
        $('#Loading').hide();
        $('#MyContextMenu').show();
        $('#MyContextMenus').show();
        AssignRightClick();
        $('#chkShowOpening').click();
        $('#chkShowTransaction').click();
        $('#chkShowOpening').removeAttr('checked');
        $('#chkShowTransaction').removeAttr('checked');
        $('input[value=rdbCollapseAll]:radio').prop('checked', true);
        $('input[value=rdbExpandAll]:radio').removeAttr('checked');
        $('input[value=rdbLedger]:radio').removeAttr('checked');
    });
    $("#btnCommonSearchVoucher").on("click", function () {
        Id = $('#hddledgeraccount').val();
        AccountDesc = $('#hddAccountDesc').val();
        jQuery("#JQGridDetails")
            .setGridParam({ url: "../TrialBalance/OnTrialBalanceDateWiseRequested?Id=" + Id.replace("&", "__") + "&From=" + $('#FromDateVoucher').val() + "&To=" + $('#ToDateVoucher').val(), page: 1 })
            .setCaption("<b>Statement of " + AccountDesc + "</b>")
            .trigger('reloadGrid');
        $("#divJQGridDetails").css('margin-top', '0px');
    });
    var paramsJQGridDetails = {};
    paramsJQGridDetails.originalColumnWidths = [100, 150, 380, 110, 110];
    paramsJQGridDetails.initialized = false;
    $("#JQGridDetails").jqGrid({
        url: "../TrialBalance/OnTrialBalanceDateWiseRequested",
        mtype: "GET",
        datatype: "json",
        jsonReader: { id: "VoucherNO" },
        prmNames: { id: "VoucherNO", From: $('#FromDateVoucher').val(), To: $('#ToDateVoucher').val() },
        colNames: ["Sno.", "Voucher Date", "Voucher No.", "Particulars", "Debit", "Credit"],
        colModel: [
            { width: 100, search: true, sortable: false, name: "Count", hidden: true, cellattr: function () { return ' title="Double Click to view Voucher."'; } },
            { width: 100, search: true, sortable: false, name: "VoucherDate", cellattr: function () { return ' title="Double Click to view Voucher."'; } },
            { key: true, search: true, sortable: false, width: 150, name: "VoucherNO", cellattr: function () { return ' title="Double Click to view Voucher."'; } },
            { width: 380, search: true, sortable: false, name: "Particulars", align: "justify", cellattr: function () { return ' title="Double Click to view Voucher."'; } },
            { width: 110, name: "DR_AMOUNT", formatter: "number", sorttype: "number", align: "right", sortable: false, resizable: true, search: true, cellattr: function () { return ' title="Double Click to view Voucher."'; } },
            { width: 110, name: "CR_AMOUNT", formatter: "number", sorttype: "number", align: "right", sortable: false, resizable: true, search: true, cellattr: function () { return ' title="Double Click to view Voucher."'; } },
        ],
        caption: "Detail",
        pager: "#JQGridDetails_pager",
        ondblClickRow: function (rowId, iRow, iCol, e) {
            var rowData = jQuery("#JQGridDetails").getRowData(rowId);
            var VoucherDate = rowData['VoucherDate'];
            document.getElementById('VoucherScreen').style.display = 'block';
            $("#divJQGridVoucher").show();
            jQuery("#JQGridVoucher")
                .setGridParam({ url: "../TrialBalance/OnTrialBalanceDateWiseDetailsRequested?id=" + rowId.replace("&", "__"), page: 1 })
                .trigger('reloadGrid');
            var grid = $("#JQGridVoucher");
            var gview = grid.parents("div.ui-jqgrid-view");
            gview.children("div.ui-jqgrid-hdiv").hide();
            $("#dvVoucherNo").html('<b>Voucher No: </b>' + rowId);
            $("#dvVoucherDate").html('<b>Voucher Date: </b>' + VoucherDate);
        },
        gridComplete: function () {
            $("#gview_JQGridDetails .ui-jqgrid-bdiv").css("height", "");
            $("#gview_JQGridDetails .ui-jqgrid-bdiv").css("max-height", "372px");
            var JQGridDetailscount = jQuery("#JQGridDetails").jqGrid('getGridParam', 'records');
            if (JQGridDetailscount == 0) {
                jQuery("#divJQGridDetails").show();
            }
            else {
                jQuery("#divJQGridDetails").show();
            }
        },
        // Customizations
        scroll: false, // controls visibility of recordtext
        width: 868,
        shrinkToFit: false,
        rowList: [10, 20, 50, 100, 200, 500, 1000],
        rowNum: 50,
        height: "372px",
        //recordtext: "{2} Records", // overrides default set in grid.locale-en.js
        viewrecords: true,
        loadError: JQGridDemo.jqGrid_aspnet_loadErrorHandler,
    });
    //$("#JQGridDetails_pager_center").hide(); // Hides the central paging control
    jQuery('#JQGridDetails').bindKeys(); // binds the up/down arrow keys:
    jQuery("#JQGridDetails").jqGrid('filterToolbar', { searchOnEnter: false, defaultSearch: "cn" });
    var paramsJQGridVoucher = {};
    paramsJQGridVoucher.initialized = false;
    $("#JQGridVoucher").jqGrid({
        url: "../TrialBalance/OnTrialBalanceDateWiseDetailsRequested",
        mtype: "GET",
        datatype: "json",
        page: 1,
        jsonReader: { id: "VoucherNO" },
        prmNames: { id: "VoucherNO" },
        colNames: ["Voucher No.", "SNo.", "Account Head", "Niration", "Debit", "Credit", "CREATED_BY", "POSTED_BY"],
        colModel: [
            { key: true, width: 50, name: "VoucherNO", hidden: true },
            { width: 50, name: "SNo" },
            { width: 463, name: "Particulars", align: "justify", resizable: false },
            { width: 50, name: "Niration", hidden: true },
            { width: 100, name: "DRAMOUNT", align: "right", sortable: false, resizable: false, search: false },
            { width: 100, name: "CRAMOUNT", align: "right", sortable: false, resizable: false, search: false },
            { width: 50, name: "CREATED_BY", hidden: true },
            { width: 50, name: "POSTED_BY", hidden: true },
        ],
        pager: "#JQGridVoucher_pager",
        gridComplete: function () {
            $("#gview_JQGridVoucher .ui-jqgrid-bdiv").css("height", "");
            $("#gview_JQGridVoucher .ui-jqgrid-bdiv").css("max-height", "370px");
            var JQGridVouchercount = jQuery("#JQGridVoucher").jqGrid('getGridParam', 'records');
            if (JQGridVouchercount == 0) {
                jQuery("#divJQGridVoucher").show();
            }
            else {
                jQuery("#divJQGridVoucher").show();
            }
            var ids = jQuery("#JQGridVoucher").jqGrid('getDataIDs');
            for (var i = 1; i < 2; i++) {
                var rowId = ids[i];
                var rowData = jQuery("#JQGridVoucher").getRowData(rowId);
                var Niration = rowData['Niration'];
                var CreatedBy = rowData['CREATED_BY'];
                var PostedBy = rowData['POSTED_BY'];
                $("#dvNiration").html('<b>Narration: </b>' + Niration);
                $("#dvPostedBy").html('<b>Posted By: </b>' + CreatedBy);
                $("#dvCreatedBy").html('<b>CreatedBy: </b>' + PostedBy);
            }
        },
        // Customizations
        scroll: false, // controls visibility of recordtext
        width: 760,
        shrinkToFit: true,
        height: "370px",
        //recordtext: "{2} Records", // overrides default set in grid.locale-en.js
        viewrecords: true,
        loadError: JQGridDemo.jqGrid_aspnet_loadErrorHandler,
    });
    $("#JQGridVoucher_pager_center").hide(); // Hides the central paging control
    jQuery('#JQGridVoucher').bindKeys(); // binds the up/down arrow keys:

    $(document).ready(function () {
        $(".nav li a").removeClass("active");//this will remove the active class from previously active menu item
        $('#TrialBalance').addClass('active');
    });
</script>
<script>
    function Maximize() {
        var widthPage = $('#page-wrapper').outerWidth();
        var IndexPage = $('#DetailScreen').outerWidth();
        if (widthPage != IndexPage) {
            $('#DetailScreen').css({
                'width': widthPage + 'px',
                'margin-left': '0' + 'px',
                'margin-top': '0' + 'px',
                'border-radius': '0' + 'px',
                'border': '1' + 'px',
                'top': '86px',
                'left': '252px'
            });
            $('#divJQGridDetails').css({
                'width': '100' + '%',
                'margin-left': '0' + 'px',
                'margin-top': '35' + 'px',
                'padding-left': '15' + 'px',
                'padding-right': '15' + 'px'
            });

            $('#divBalanceSheetReport').css({ 'display': 'none' })
        } else {
            $('#DetailScreen').css({
                'width': '',
                'margin-left': '',
                'margin-top': '',
                'border-radius': '',
                'border': ''
            });
            $('#divJQGridDetails').css({
                'width': '100' + '%',
                'margin-left': '0' + 'px',
                'margin-top': '35' + 'px',
                'padding-left': '15' + 'px',
                'padding-right': '15' + 'px'
            });
            $('#divBalanceSheetReport').css({ 'display': 'block' })
        }
    }
</script>
<script>
    function ToggleData() {
        document.getElementById('DetailScreen').style.display = 'none';
        $('#divBalanceSheetReport').css({ 'display': 'block' })
        $('#DetailScreen').css({
            'width': '',
            'margin-left': '',
            'margin-top': '',
            'border-radius': '',
            'border': ''
        });
        $('#divJQGridDetails').css({
            'width': '100' + '%',
            'margin-left': '0' + 'px',
            'margin-top': '35' + 'px',
            'padding-left': '15' + 'px',
            'padding-right': '15' + 'px'
        });
    }
</script>
<script>
    function Test(id) {
    }
</script>
<script>
    (function () {

        var popupDetailScreen = document.getElementById("DetailScreen");
        var popupVoucherScreen = document.getElementById("VoucherScreen");

        //-- let the popup make draggable & movable.
        var offset = { x: 0, y: 0 };

        popupDetailScreen.addEventListener('mousedown', mouseDown, false);
        popupVoucherScreen.addEventListener('mousedown', mouseDown1, false);
        window.addEventListener('mouseup', mouseUp, false);

        function mouseUp() {
            window.removeEventListener('mousemove', popupDetailScreenMove, true);
            window.removeEventListener('mousemove', popupVoucherScreenMove, true);
        }
        function mouseDown(e) {
            offset.x = e.clientX - popupDetailScreen.offsetLeft;
            offset.y = e.clientY - popupDetailScreen.offsetTop;
            window.addEventListener('mousemove', popupDetailScreenMove, true);
        }
        function mouseDown1(e) {
            offset.x = e.clientX - popupVoucherScreen.offsetLeft;
            offset.y = e.clientY - popupVoucherScreen.offsetTop;
            window.addEventListener('mousemove', popupVoucherScreenMove, true);
        }

        function popupDetailScreenMove(e) {
            popupDetailScreen.style.position = 'fixed';
            var top = e.clientY - offset.y;
            var left = e.clientX - offset.x;
            popupDetailScreen.style.top = top + 'px';
            popupDetailScreen.style.left = left + 'px';
            popupDetailScreen.style.zIndex = '2000';
            popupVoucherScreen.style.zIndex = '1500';
        }
        function popupVoucherScreenMove(e) {
            popupVoucherScreen.style.position = 'fixed';
            var top = e.clientY - offset.y;
            var left = e.clientX - offset.x;
            popupVoucherScreen.style.top = top + 'px';
            popupVoucherScreen.style.left = left + 'px';
            popupDetailScreen.style.zIndex = '1500';
            popupVoucherScreen.style.zIndex = '2000';
        }

    }());
</script>
<script language="javascript">
    function PrintStatement() {
        $(".ui-search-toolbar").hide();
        $("#JQGridDetails_pager").hide();
        var title = "Statement";
        var printData = $('#divJQGridDetails').html();
        var newWindow = window.open('', '', 'width=800, height=500'),
        document = newWindow.document.open(),
        pageContent =
        '<!DOCTYPE html>\n' +
        '<html>\n' +
        '<head>\n' +
        '<meta charset="utf-8" />\n' +
        '<title>' + title + '</title>\n' +
        '<style type="text/css">\n' +
        'table th, table td {\n' +
        'border:1px solid #000;\n' +
        'padding;0.5em;\n' +
        '}\n' +
        '</style>\n' +
        '</head>\n' +
        '<body>\n' + printData + '\n</body>\n</html>';
        document.write(pageContent);
        document.close();
        newWindow.print();
        $(".ui-search-toolbar").show();
        $("#JQGridDetails_pager").show();
    }
    function PrintVoucher() {
        var title = "Voucher";
        var printData = $('#divJQGridVoucher').html();
        var newWindow = window.open('', '', 'width=800, height=500'),
        document = newWindow.document.open(),
        pageContent =
        '<!DOCTYPE html>\n' +
        '<html>\n' +
        '<head>\n' +
        '<meta charset="utf-8" />\n' +
        '<title>' + title + '</title>\n' +
        '</head>\n' +
        '<body>\n' + printData + '\n</body>\n</html>';
        document.write(pageContent);
        document.close();
        newWindow.print();
        //newWindow.close();
    }
    function ExportStatement() {
        $(".ui-search-toolbar").hide();
        $("#JQGridDetails_pager").hide();
        var title = "Statement";
        var printData = $('#JQGridDetails').html();
        var newWindow = window.open('', '', 'width=800, height=500'),
        document = newWindow.document.open(),
        pageContent =
        '<!DOCTYPE html>\n' +
        '<html>\n' +
        '<head>\n' +
        '<meta charset="utf-8" />\n' +
        '<title>' + title + '</title>\n' +
        '<style type="text/css">\n' +
        'table th, table td {\n' +
        'border:1px solid #000;\n' +
        'padding;0.5em;\n' +
        '}\n' +
        '</style>\n' +
        '</head>\n' +
        '<body>\n<b>Statement of ' + $('#hddAccountDesc').val() + '</b>\n<table><tr><td><b>Sno.</b><td><b>Voucher Date</b></td><td><b>Voucher No</b></td><td><b>Particulars</b></td><td><b>Debit</b></td><td><b>Credit</b></td></tr>' + printData + '</table>' + '\n</body>\n</html>';
        window.open('data:application/vnd.ms-excel,' + encodeURIComponent(pageContent));
        e.preventDefault();
        $(".ui-search-toolbar").show();
        $("#JQGridDetails_pager").show();
    }
</script>
<script>
    $(document).ready(function () {
        $('#fromInputDateVoucher').nepaliDatePicker({
            ndpEnglishInput: 'FromDateVoucher'
        });
        $('#toInputDateVoucher').nepaliDatePicker({
            ndpEnglishInput: 'ToDateVoucher'
        });
        var current_date = getNepaliDate();
        $('#fromInputDateVoucher').val(current_date);
        $('#toInputDateVoucher').val(current_date);
        $("#FromDateVoucher").datepicker({ dateFormat: 'yy-mm-dd' });
        $("#ToDateVoucher").datepicker({ dateFormat: 'yy-mm-dd' });
        $('#FromDateVoucher').val(BS2AD($("#fromInputDateVoucher").val()));
        $('#ToDateVoucher').val(BS2AD($("#toInputDateVoucher").val()));

        //if ($('#ddlDateFilterVoucher').val() == "CT") {
        //    //$('#fromInputDateVoucher').prop('disabled', false);
        //    $('#FromDateP').prop('disabled', false);
        //    $('#toInputDateVoucher').prop('disabled', false);
        //    $('#ToDateP').prop('disabled', false);
        //}
        //$('#ddlDateFilterVoucher').change(function () {
        //    if ($('#ddlDateFilterVoucher').val() == "CT") {
        //        $('#fromInputDateVoucher').prop('disabled', false);
        //        $('#FromDateVoucher').prop('disabled', false);
        //        $('#toInputDateVoucher').prop('disabled', false);
        //        $('#ToDateVoucher').prop('disabled', false);
        //    }
        //    else {
        //        $('#fromInputDateVoucher').prop('disabled', true);
        //        $('#FromDateVoucher').prop('disabled', true);
        //        $('#toInputDateVoucher').prop('disabled', true);
        //        $('#ToDateVoucher').prop('disabled', true);
        //    }
        //});
    });
</script>
<script>
    $(document).ready(function () {
        $('#fromInputDateP').nepaliDatePicker({
            ndpEnglishInput: 'FromDateP'
        });
        $('#toInputDateP').nepaliDatePicker({
            ndpEnglishInput: 'ToDateP'
        });
        var current_date = getNepaliDate();
        $('#fromInputDateP').val(current_date);
        $('#toInputDateP').val(current_date);
        $("#FromDateP").datepicker({ dateFormat: 'yy-mm-dd' });
        $("#ToDateP").datepicker({ dateFormat: 'yy-mm-dd' });
        $('#FromDateP').val(BS2AD($("#fromInputDateP").val()));
        $('#ToDateP').val(BS2AD($("#toInputDateP").val()));

        //if ($('#ddlDateFilterP').val() == "CT") {
        //    $('#fromInputDateP').prop('disabled', false);
        //    $('#FromDateP').prop('disabled', false);
        //    $('#toInputDateP').prop('disabled', false);
        //    $('#ToDateP').prop('disabled', false);
        //}
        //$('#ddlDateFilterP').change(function () {
        //    if ($('#ddlDateFilterP').val() == "CT") {
        //        $('#fromInputDateP').prop('disabled', false);
        //        $('#FromDateP').prop('disabled', false);
        //        $('#toInputDateP').prop('disabled', false);
        //        $('#ToDateP').prop('disabled', false);
        //    }
        //    else {
        //        $('#fromInputDateP').prop('disabled', true);
        //        $('#FromDateP').prop('disabled', true);
        //        $('#toInputDateP').prop('disabled', true);
        //        $('#ToDateP').prop('disabled', true);
        //    }
        //});
    });
</script>
<script type="text/javascript">
    $(function () {
        $("#ddlDateFilterP").change(function () {
            var current_date = getNepaliDate();
            var current_date = current_date.split("-");
            var cYear = current_date[0];
            var cMonth = current_date[1];
            var cDay = current_date[2];
            if ($('option:selected', this).val() == "TD") {
                var FromDate = cYear + "-" + cMonth + "-" + cDay;
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDateP").val(FromDate);
                $("#toInputDateP").val(ToDate);
            }
            else if ($('option:selected', this).val() == "TY") {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDateP").val(FromDate);
                $("#toInputDateP").val(ToDate);
            }
            else if ($('option:selected', this).val() == "LY") {
                var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                $("#fromInputDateP").val(FromDate);
                $("#toInputDateVoucher").val(ToDate);
            }
            else if ($('option:selected', this).val() == "TM") {
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDateP").val(FromDate);
                $("#toInputDateP").val(ToDate);
            }
            else if ($('option:selected', this).val() == "LM") {
                if (cMonth == 1) {
                    cYear = cYear - 1;
                    cMonth = "12";
                }
                else {
                    cMonth = cMonth - 1;
                }
                var newToDate = numberOfBsDays(cYear, (cMonth - 1));
                if (cMonth > 1 && (cMonth) < 10)
                    cMonth = "0" + cMonth;
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + newToDate;
                $("#fromInputDateP").val(FromDate);
                $("#toInputDateP").val(ToDate);
            }
            else if ($('option:selected', this).val() == "TQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
            }
            else if ($('option:selected', this).val() == "LQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "06" + "-" + numberOfBsDays(cYear, "5");
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = (cYear + 1) + "-" + "09" + "-" + numberOfBsDays((cYear + 1), "8");
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "12" + "-" + numberOfBsDays((cYear - 1), "11");
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
            }
            else if ($('option:selected', this).val() == "TH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
            }
            else if ($('option:selected', this).val() == "LH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else if (cMonth >= 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
                else {
                    var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "09" + "-" + numberOfBsDays((cYear - 1), "8");
                    $("#fromInputDateP").val(FromDate);
                    $("#toInputDateP").val(ToDate);
                }
            }
            $('#FromDateP').val(BS2AD($("#fromInputDateP").val()));
            $('#ToDateP').val(BS2AD($("#toInputDateP").val()));
        });
    });
</script>
<script type="text/javascript">
    $(function () {
        $("#ddlDateFilterVoucher").change(function () {
            var current_date = getNepaliDate();
            var current_date = current_date.split("-");
            var cYear = current_date[0];
            var cMonth = current_date[1];
            var cDay = current_date[2];
            if ($('option:selected', this).val() == "TD") {
                var FromDate = cYear + "-" + cMonth + "-" + cDay;
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDateVoucher").val(FromDate);
                $("#toInputDateVoucher").val(ToDate);
            }
            else if ($('option:selected', this).val() == "TY") {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDateVoucher").val(FromDate);
                $("#toInputDateVoucher").val(ToDate);
            }
            else if ($('option:selected', this).val() == "LY") {
                var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                $("#fromInputDateVoucher").val(FromDate);
                $("#toInputDateVoucher").val(ToDate);
            }
            else if ($('option:selected', this).val() == "TM") {
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#fromInputDateVoucher").val(FromDate);
                $("#toInputDateVoucher").val(ToDate);
            }
            else if ($('option:selected', this).val() == "LM") {
                if (cMonth == 1) {
                    cYear = cYear - 1;
                    cMonth = "12";
                }
                else {
                    cMonth = cMonth - 1;
                }
                var newToDate = numberOfBsDays(cYear, (cMonth - 1));
                if (cMonth > 1 && (cMonth) < 10)
                    cMonth = "0" + cMonth;
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + newToDate;
                $("#fromInputDateVoucher").val(FromDate);
                $("#toInputDateVoucher").val(ToDate);
            }
            else if ($('option:selected', this).val() == "TQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
            }
            else if ($('option:selected', this).val() == "LQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "06" + "-" + numberOfBsDays(cYear, "5");
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = (cYear + 1) + "-" + "09" + "-" + numberOfBsDays((cYear + 1), "8");
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "12" + "-" + numberOfBsDays((cYear - 1), "11");
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
            }
            else if ($('option:selected', this).val() == "TH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
            }
            else if ($('option:selected', this).val() == "LH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else if (cMonth >= 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
                else {
                    var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "09" + "-" + numberOfBsDays((cYear - 1), "8");
                    $("#fromInputDateVoucher").val(FromDate);
                    $("#toInputDateVoucher").val(ToDate);
                }
            }
            $('#FromDateVoucher').val(BS2AD($("#fromInputDateVoucher").val()));
            $('#ToDateVoucher').val(BS2AD($("#toInputDateVoucher").val()));
        });
    });
</script>
<script type="text/javascript">
    function AssignRightClick() {
        $('.LedgerDetailsAccount.ledger span').contextMenu('#MyContextMenu');
        $('.LedgerDetailsAccount.ledger span').mousedown(function (event) {
            switch (event.which) {
                case 1://alert('Left mouse button pressed');
                    break;
                case 2: //alert('Middle mouse button pressed');
                    break;
                case 3: //alert('Right mouse button pressed');
                    hdAccountHead.value = $(this).attr("id");
                    hdAccountDesc.value = $(this).text();
                    break;
                default:
                    alert('You have a strange mouse');
            }
        });
        $('.LedgerDetailsAccount.sledger span').contextMenu('#MyContextMenus');
        $('.LedgerDetailsAccount.sledger span').mousedown(function (event) {
            switch (event.which) {
                case 1://alert('Left mouse button pressed');
                    break;
                case 2: //alert('Middle mouse button pressed');
                    break;
                case 3: //alert('Right mouse button pressed');
                    hdAccountHead.value = $(this).attr("id");
                    hdAccountDesc.value = $(this).text();
                    break;
                default:
                    alert('You have a strange mouse');
            }
        });
    }
    function ShowSubLedger() {
        if (hdAccountHead.value != 0) {
            AssignRightClick();
            var win = window.open("SubLedgerSummary?Ah=" + $.trim(hdAccountHead.value) + "&F=" + $('#FromDate').val() + "&T=" + $('#ToDate').val(), '_blank');
            win.focus();
        }
    }
    function ShowDailySummary() {
        if (hdAccountHead.value != 0) {
            AssignRightClick();
            var win = window.open("DailySummaryReport?Ah=" + $.trim(hdAccountHead.value) + "&F=" + $('#FromDate').val() + "&T=" + $('#ToDate').val(), '_blank');
            win.focus();
        }
    }
    function ShowLedgerStatement() {
        if (hdAccountHead.value != 0) {
            AssignRightClick();
            var win = window.open("LedgerStatement?Ah=" + $.trim(hdAccountHead.value) + "&F=" + $('#FromDate').val() + "&T=" + $('#ToDate').val(), '_blank');
            win.focus();
        }
    }
    function ShowMonthWise() {
        if (hdAccountHead.value != 0) {
            AssignRightClick();
            var win = window.open("MonthwiseSummary?Ah=" + $.trim(hdAccountHead.value) + "&F=" + $('#FromDate').val() + "&T=" + $('#ToDate').val(), '_blank');
            win.focus();
        }
    }
    function ShowStatement() {
        if (hdAccountHead.value != 0) {
            AssignRightClick();
            document.getElementById('DetailScreen').style.display = 'block';
            $("#divJQGridDetails").show();
            Id = hdAccountHead.value;
            AccountDesc = hdAccountDesc.value;
            $('#hddledgeraccount').val(Id);
            $('#hddAccountDesc').val(AccountDesc);
            jQuery("#JQGridDetails").setGridParam({
                url: "../TrialBalance/OnTrialBalanceDateWiseRequested?Id=" + Id.replace("&", "__") + "&From=" + $('#FromDate').val() + "&To=" + $('#ToDate').val(),
                page: 1
            });
            $("#JQGridDetails").jqGrid("setCaption", "<b>Statement of " + AccountDesc + "</b>");
            jQuery("#JQGridDetails").trigger('reloadGrid');
            $('#fromInputDateVoucher').val($('#fromInputDate').val());
            $('#toInputDateVoucher').val($('#toInputDate').val());
            $('#FromDateVoucher').val($('#FromDate').val());
            $('#ToDateVoucher').val($('#ToDate').val());
            $('#ddlDateFilterVoucher').val($('option:selected', '#ddlDateFilter').val());
            $("#divJQGridDetails").css('margin-top', '0px');
        }
    }
</script>

<script>
    $("#btnLoad").click(function () {
        $(".HideMeOnLoad").remove();
        $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
        var $grid = $("#LoadPrefernces"),
        emptyMsgDiv = $("<div class='HideMeOnLoad'><span style='font-size:12px;padding:5px;'> No records found...</span></div>");
        $("#LoadPrefernces").jqGrid({
            url: '../TrialBalance/ConsolidatedAjax',
            mtype: "GET",
            datatype: "json",
            colModel: [
                 { label: 'PrefernceId', name: 'PREF_CODE', key: true, hidden: true, },
                { label: 'NAME', name: 'PREF_NAME',width:480},
                //{ label: 'Default', name: 'ISDEFAULT', index: 'Default', align: 'center', autowidth: true, sortable: false },
                { name: 'Action', index: 'act', align: 'center', sortable: false,width:100 }
            ],
            emptyrecords: "prefernces are not saved",
            viewrecords: true,
            shrinkToFit: false,
            width: 580,
            rowNum: 20,
            gridComplete: function () {
                var ts = this;
                if (ts.p.reccount === 0) {
                    $(this).hide();
                    emptyMsgDiv.show();
                } else {
                    $(this).show();
                    emptyMsgDiv.hide();
                }
                var ids = jQuery("#LoadPrefernces").jqGrid('getDataIDs');
                for (var i = 0; i < ids.length; i++) {
                    var cl = ids[i];
                    be = "<button class='btn-preference btn-pref-rem' onclick='deleteSelectedRow(" + cl + ")'><span class='fa fa-close'></span></button>";
                    jQuery("#LoadPrefernces").jqGrid('setRowData', ids[i], { Action: be });
                }
            }
        });
        emptyMsgDiv.insertAfter($grid.parent());
    });
    function getSelectedRow() {
        var rsteps = ["0", "0.0", "0.00", "0.000", "0.0000"];
        var fsteps = ["Actual", "thousand", "lakh", "crore", ];

        $("#ShowHideThisSpan").hide();
        var grid = $("#LoadPrefernces");
        var rowKey = grid.jqGrid('getGridParam', "selrow");
        if (rowKey) {
            $.ajax({
                url: "../TrialBalance/ConsolidatedAjaxComplete?rowKey=" + rowKey, success: function (result) {
                    var res = result.split(",");

                    var arrayLength = res.length;
                    var i = 0;
                    if (res[2] == "1") { var j = 0; }
                    if (res[2] == "1000") { var j = 1; }
                    if (res[2] == "100000") { var j = 2; }
                    if (res[2] == "10000000") { var j = 3; }
                    $("#slider1").slider({
                        value: j,
                        min: 0,
                        max: 3,
                        slide: function (event, ui) {
                            $("#figure1").val(fsteps[ui.value]);
                        }
                    });
                    $("#figure1").val(fsteps[j]);
                    //$("#figure1").val(fsteps[$("#slider1").slider("value")]);
                    if (res[3] == '0') { var k = 0; }
                    if (res[3] == '0.0') { var k = 1; }
                    if (res[3] == '0.00') { var k = 2; }
                    if (res[3] == '0.000') { var k = 3; }
                    if (res[3] == '0.0000') { var k = 4; }
                    $("#roundSlider1").slider({
                        value: k,
                        min: 0,
                        max: 4,
                        slide: function (event, ui) {
                            $("#round1").val(rsteps[ui.value]);
                        }
                    });
                    $("#round1").val(rsteps[k]);

                    //$("#FromDate").val(res[5]);
                    //$('#fromInputDate').val(AD2BS($("#FromDate").val()));
                    var test = res[4].toString();
                    $('#ddlDateFilterP').val(test);
                    //var fd = res[5].toString();
                    //$('#FromDateP').val(fd);
                    $("#FromDateP").val(res[5]);
                    $('#fromInputDateP').val(AD2BS($("#FromDateP").val()));
                    //var td = res[6].toString();
                    //$('#ToDateP').val(td);
                    $("#ToDateP").val(res[6]);
                    $('#toInputDate').val(AD2BS($("#ToDateP").val()));


                    var id = $(".adddiv button:last").attr("id");
                    for (var l = 0 ; l <= id ; l++) {
                        if (l == 0) {
                            document.getElementById(l.toString() + l.toString()).remove();
                            document.getElementById(l.toString() + l.toString() + l.toString() + l.toString()).remove();
                        } else {
                            document.getElementById(l.toString()).remove();
                            document.getElementById(l.toString() + l.toString()).remove();
                            document.getElementById(l.toString() + l.toString() + l.toString() + l.toString()).remove();
                        }
                    }
                    var SetId = 0;
                    $('.adddiv').append("<div class='newbox' id='" + SetId.toString() + SetId.toString() + SetId.toString() + "'><input type='text' id='" + SetId.toString() + SetId.toString() + SetId.toString() + SetId.toString() + "' value='" + 0 + "' readonly='true' style='width:30%;'><input type='text' id='" + SetId.toString() + SetId.toString() + "' name='Steps[" + SetId + "]'  style='width:30%;margin-left:4px;' value='" + res[5] + "' onblur='ModifyNextId(this.id);' /></div>");
                    SetId = 1;
                    for (var i = 6; i < arrayLength; i++) {
                        $('.adddiv').append("<div class='newbox' id='" + SetId.toString() + SetId.toString() + SetId.toString() + "'><input type='text' id='" + SetId.toString() + SetId.toString() + SetId.toString() + SetId.toString() + "' value='" + (parseInt(res[i - 1]) + 1) + "' readonly='true' style='width:30%;'><input type='text' id='" + SetId.toString() + SetId.toString() + "' name='Steps[" + SetId + "]'  style='width:30%;margin-left:4px;' value='" + res[i] + "' onblur='ModifyNextId(this.id);' /><button id=" + SetId.toString() + " onclick='return DeleteThis(this.id);' class='btn-preference btn-pref-rem'><span class='fa fa-close'></span></button></div>");
                        SetId = SetId + 1;
                    }
                    $('#MyPrefernces').modal('toggle');
                }
            });
        }
        else {
            $("#ShowHideThisSpan").show();
        }
        return false;
    }

    function deleteSelectedRow(rowKey) {
        $("#ShowHideThisSpan").hide();
        if (confirm('Are You Sure!')) {
            if (rowKey) {
                $.ajax({
                    url: "../TrialBalance/ConsolidatedAjaxRemoveRow?rowKey=" + rowKey, success: function () {
                        $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                    }

                });
                $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
            }
            else {
                $("#ShowHideThisSpan").show();
            }
        }
        return false;
    }

    function btnSaveClick() {
        $("#PreferenceName").prop('disabled', false);
        $("#ShowWhenSave").jqGrid({
            url: '../TrialBalance/ConsolidatedAjax',
            mtype: "GET",
            datatype: "json",
            colModel: [
                { label: 'PrefernceId', name: 'PREF_CODE', key: true, autowidth: true, hidden: true },
                { label: 'NAME', name: 'PREF_NAME', width:580 },
            ],
            emptyrecords: "prefernces are not saved",
            viewrecords: true,
            autowidth: true,
            shrinkToFit: false,
            width: 580,
            rowNum: 20,
        });

        return false;
    }
    $("#SetDefault").change(function () {
        if ($('#SetDefault').is(':checked')) {
            $("#SetDefaultMsg").html("Default");
        } else {
            $("#SetDefaultMsg").html("");
        }
    });
    $(".DiaableInput").click(function () {
        $("#PreferenceName").prop('disabled', true);
    });
</script>
<script>
    function validateArrY() {
        $("#MsgPrefName").html("");
        var id = document.getElementById("CheckDiv").innerHTML;
        var counter = 0;
        for (var i = 0; i <= parseInt(id) ; i++) {

            if (document.getElementById(i.toString() + i.toString()) != null) {
                var RealValue = document.getElementById(i.toString() + i.toString()).value;
                $('.ActualAddDiv').append("<div class='NewDivision'><input type='text' name='Steps[" + counter + "]' value='" + RealValue + "' readonly='true' style='width:30%;'></div>");

                if (document.getElementById(i.toString()) != null) {
                    document.getElementById(i.toString()).remove();
                }
                if (document.getElementById(i.toString() + i.toString()) != null) {
                    document.getElementById(i.toString() + i.toString()).remove();
                }
                if (document.getElementById(i.toString() + i.toString() + i.toString()) != null) {
                    document.getElementById(i.toString() + i.toString() + i.toString()).remove();
                }
                if (document.getElementById(i.toString() + i.toString() + i.toString() + i.toString()) != null) {
                    document.getElementById(i.toString() + i.toString() + i.toString() + i.toString()).remove();
                }
                counter = counter + 1;
            }
        }
        $.ajax({
            url: "../TrialBalance/GetPreferenceNameList", success: function (result) {
                var res = result.split(",");
                var arrayLength = res.length;
                var Name = $("#PreferenceName").val();
                for (var i = 0; i <= res.length - 1; i++) {
                    if (res[i] == Name) {
                        if (confirm('Update Existing')) {
                            $('#Loading').show();
                            $('#sambhoo').hide();
                            $('#myModal').modal('toggle');
                            return true;
                        } else {
                            $("#MsgPrefName").html("Please Change Your Prefernce Name");
                            return false;
                        }
                    }
                }

            }
        });
        //$('#Loading').show();
        //$('#sambhoo').hide();
        //$('#myModal').modal('toggle');
        return true;
    }
    $("#btnAdd").click(function () {
        var id = document.getElementById("CheckDiv").innerHTML;
        if (document.getElementById(id + id) != null) {
            var value = document.getElementById(id + id).value;
            var RealValue = parseInt(value) + 1;
        } else {
            for (var l = parseInt(id) - 1; l >= 0; l--) {
                if (document.getElementById(l.toString() + l.toString()) != null) {
                    var value = document.getElementById(l.toString() + l.toString()).value;
                    var RealValue = parseInt(value) + 1;
                    break;
                }
            }
        }

        var NewId = parseInt(id) + 1;
        document.getElementById("CheckDiv").innerHTML = NewId;
        $('.adddiv').append("<div class='newbox' id='" + NewId + NewId + NewId + "'><input type='text' id='" + NewId + NewId + NewId + NewId + "' value='" + RealValue + "' readonly='true' style='width:30%;'><input type='text' id='" + NewId + NewId + "' name='Steps[" + NewId + "]'  style='width:30%;margin-left:4px;' onblur='ModifyNextId(this.id);' /><button id=" + NewId + " onclick='return DeleteThis(this.id);'  class='btn-preference btn-pref-rem'><span class='fa fa-close'></span></button></div>");
        return false;
    });
    function DeleteThis(id) {
        document.getElementById(id).remove();
        document.getElementById(id + id).remove();
        if (document.getElementById(id + id + id) != null) {
            document.getElementById(id + id + id).remove();
        }
        if (document.getElementById(id + id + id + id) != null) {
            document.getElementById(id + id + id + id).remove();
        }
        var TotalId = parseInt(document.getElementById("CheckDiv").innerHTML);
        var NextVal = 0;
        for (var j = 0 ; j <= TotalId ; j++) {

            if (document.getElementById(j.toString() + j.toString()) != null) {
                NextVal = document.getElementById(j.toString() + j.toString()).value;
            }
            for (var k = j ; k <= TotalId; k++) {
                var NextId = parseInt(k) + 1;
                if (document.getElementById(NextId.toString() + NextId.toString() + NextId.toString() + NextId.toString()) != null) {
                    document.getElementById(NextId.toString() + NextId.toString() + NextId.toString() + NextId.toString()).value = parseInt(NextVal) + 1;
                    break;
                }
            }
        }
        return false;
    }
    function ModifyNextId(id) {
        var NextVal = parseInt($('#' + id).val()) + 1;
        $('#' + id).next('input').val(NextVal);
        $('#' + id).next('button').next('input').val(NextVal);
    }


</script>
<script>
    var rsteps = [
   "0",
   "0.0",
   "0.00",
   "0.000",
   "0.0000"
    ];
    var fsteps = [
    "Actual",
    "thousand",
    "lakh",
    "crore",
    ];
    $(function () {
        $("#slider1").slider({
            value: 0,
            min: 0,
            max: 3,
            slide: function (event, ui) {
                $("#figure1").val(fsteps[ui.value]);
            }
        });
        $("#figure1").val(fsteps[$("#slider1").slider("value")]);
        $("#roundSlider1").slider({
            value: 2,
            min: 0,
            max: 4,
            slide: function (event, ui) {
                $("#round1").val(rsteps[ui.value]);
            }
        });
        $("#round1").val(rsteps[$("#roundSlider1").slider("value")]);
    });
</script>