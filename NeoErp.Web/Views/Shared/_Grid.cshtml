@using GridMvc.Columns
@model GridMvc.IGrid
@if (Model == null) { return; }
@if (Model.RenderOptions.RenderRowsOnly)
{
    @RenderGridBody();
}
else
{ <div class="box no-margin">
        <div class="grid-mvc" data-lang="@Model.Language" data-gridname="@Model.RenderOptions.GridName" data-selectable="@Model.RenderOptions.Selectable.ToString().ToLower()" data-multiplefilters="@Model.RenderOptions.AllowMultipleFilters.ToString().ToLower()">
            <div class="grid-wrap box-body no-padding">
                <div class="scroll" >
                    <table class="table table-striped grid-table table-bordered">
                        @* Draw grid header *@
                        <thead>
                            @RenderGridHeader()
                        </thead>
                        <tbody>
                            @RenderGridBody()
                        </tbody>
                    </table>
                </div>
                @RenderGridFooter()
            </div>
        </div>
    </div>
}
@helper RenderGridBody()
{
if (!Model.ItemsToDisplay.Any())
{
        <tr class="grid-empty-text">
            <td colspan="@Model.Columns.Count()">
                @Model.EmptyGridText
            </td>
        </tr>
}
else
{
    foreach (object item in Model.ItemsToDisplay)
    {
            <tr class="grid-row @Model.GetRowCssClasses(item)">
                @foreach (IGridColumn column in Model.Columns)
                {
                    @column.CellRenderer.Render(column, column.GetCell(item))
                }
            </tr>

    }
}
}
@helper RenderGridHeader()
{
    <tr>
        @foreach (IGridColumn column in Model.Columns)
        {
            @column.HeaderRenderer.Render(column)
        }
    </tr>
}

@helper RenderGridFooter()
{
    <div class="grid-footer">
        <div class="left">
            @if (Model.EnablePaging && Model.Pager != null)
            {
                @Html.Partial(Model.Pager.TemplateName, Model.Pager)
            }

        </div>

        @if (Model.RenderOptions.ShowGridItemsCount && Model.ItemsCount > 0)
        {
            <div class="grid-itemscount">
                <span class="grid-itemscount-label pagination">@Model.RenderOptions.GridCountDisplayName:</span>
                <span class="grid-itemscount-caption pagination">@((Model.Pager.PageSize * Model.Pager.CurrentPage - Model.Pager.PageSize + 1) > 0 ? Model.Pager.PageSize * Model.Pager.CurrentPage - Model.Pager.PageSize + 1 : 0) - @(Model.Pager.PageSize * Model.Pager.CurrentPage < Model.ItemsCount ? Model.Pager.PageSize * Model.Pager.CurrentPage : Model.ItemsCount) </span>
                <span class="grid-itemscount-caption pagination">of</span>
                <span class="grid-itemscount-caption pagination">@Model.ItemsCount</span>
            </div>
        }


    </div>
}
