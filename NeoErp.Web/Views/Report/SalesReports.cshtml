@using System.Globalization;
@{   
    ViewBag.Title = "Overview";
    Layout = "~/Views/Common/Master.cshtml";
    ViewBag.DemoSettings = true;
}
<style>
    	

    .filterTree .ui-jqgrid, .filterTree .ui-jqgrid-view, .filterTree #pager, .filterTree .ui-jqgrid-bdiv, .filterTree .ui-jqgrid-hdiv, .filterTree .ui-jqgrid-btable {
        width: 100% !important;
    }
</style>
<link href="~/Content/JGrid/JQGridDemo.css" rel="stylesheet" media="screen">

@{ string xvalue, yvalue,DateStep,FromDate,ToDate,FromDateN,ToDateN;
   if (ViewData["FromDate"] != null && ViewData["ToDate"] != null && ViewData["FromDateN"] != null && ViewData["ToDateN"] != null && ViewData["DateStep"] != null && ViewData["Amount"] != null && ViewData["Quantity"] != null && ViewData["Xaxis"] != null && ViewData["XaxisSelected"] != null && ViewData["roundupQuantity"] != null && ViewData["roundupAmount"] != null && ViewData["Yaxis"] != null && ViewData["ModuleMenu"] != null)
   {
       xvalue = ViewData["Xaxis"].ToString();
       yvalue = Convert.ToString(ViewData["Yaxis"]);
       DateStep = ViewData["DateStep"].ToString();
       FromDate = ViewData["FromDate"].ToString();
       ToDate = ViewData["ToDate"].ToString();
       FromDateN = ViewData["FromDateN"].ToString();
       ToDateN = ViewData["ToDateN"].ToString();

<div class="window-load" id="Loading">
    <img src="~/Images/Loading.gif" />
</div>
<div class="row">
    <div class="col-md-12" style="background-color: #f5f5f5; height: 38px;">
        <div class="btn-group" role="group" style="float: right; padding-top: 6px;">
            @Html.Partial("~/Views/Report/Search.cshtml")
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <form class="form-horizontal" action="~/Report/SalesReports" method="post" onsubmit="return ValidateDate(); ">
            @Html.Partial("~/Views/Report/SearchContent.cshtml")
            <div id="divBalanceSheetReport" class="row"></div>
        </form>
    </div>
</div>

<div class="container-fluid wrapper">
    <div class="row">
        <div class="col-md-12">
            <div class="filterizeDate">
                     
                    <label>Date Filter:</label>
                    <select name="DateStep" id="ddlDateFilter" class="dateFilterSelect">
                             <option value="TM" @if (DateStep == "TM"){ <text> selected </text> }>This Month</option>
                            <option value="TQ" @if (DateStep == "TQ"){ <text> selected </text> }>This Quarter</option>
                            <option value="TD" @if (DateStep == "TD"){ <text> selected </text> }>Today</option>
                            <option value="LM" @if (DateStep == "LM"){ <text> selected </text> }>Last Month</option>
                            <option value="LQ" @if (DateStep == "LQ"){ <text> selected </text> }>Last Quarter</option>
                            <option value="TH" @if (DateStep == "TH"){ <text> selected </text> }>This Half Year</option>
                            <option value="LH" @if (DateStep == "LH"){ <text> selected </text> }>Last Half Year</option>
                            <option value="TY" @if (DateStep == "TY"){ <text> selected </text> }>This Year</option>
                            <option value="LY" @if (DateStep == "LY"){ <text> selected </text> }>Last Year</option>
                            <option value="CT" @if (DateStep == "CT"){ <text> selected </text> }>Custom</option>
                        </select>
                    <label>From Date:</label>
                    <input type="text" name='from_date' id="FromnepaliDate" class="frmDataInput ndp-nepali-calendar" value="@FromDateN">
                        <input type="text" name='from_date' id="FromenglishDate" class="frmDataInput ndp-nepali-calendar readOnlyInput" value="@FromDate">
                   <label>To Date:</label>
                    <input type="text" name='to_date' id="TonepaliDate" class="frmDataInput ndp-nepali-calendar" value="@ToDateN">
                        <input type="text" name='to_date' id="ToenglishDate" class="frmDataInput ndp-nepali-calendar readOnlyInput" value="@ToDate">
                    
                    <button type="submit" class="btn btn-default formSubmit" id=""><i class="fa fa-play"></i></button>
                <span class="ShowRadio" style="visibility:hidden;">
                <label class=""><input type="radio" id="CollapseAll" name="ExpanCollapse">Collapse All</label>
                <label class=""><input type="radio" id="ExpandAll" name="ExpanCollapse">Expand All</label>
             </span>
            </div>
           @* <div class="btn-group btn-group-xs pull-right absolute-btn" style="position: absolute;right: 15px; top: 2px;">
                <a href="~/Report/SalesReportsWeekly" style="text-decoration: none">
                    <button value="W" name="Weekly" type="button" class="btn btn-default">Weekly</button>
                </a>
                <a href="~/Report/SalesReports" style="text-decoration: none">
                    <button value="M" name="Monthly" type="button" class="btn btn-default">Monthly</button>
                </a>
                <a href="~/Report/SalesReportsQuarterly" style="text-decoration: none">
                    <button value="Q" name="Quarterly" type="button" class="btn btn-default">Quarterly</button>
                </a>
            </div>*@
            <div class="table-content" style="margin-top:5px;" id="salesreport">
                <table id="grid" class="table table-bordered" style:"padding-right:10px;">
                </table>
            <div id='pager'></div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">    
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width:800px;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div id="PopupHeader">
                        <h4 class="modal-title" id="myModalLabel">Preference Setup</h4>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-md-12 filterizeDate">
                                 <label>Date Filter:</label>
                    <select name="DateStep" id="ddlDateFilterP" class="dateFilterSelect">
                            <option value="TM" @if (DateStep == "TM"){ <text> selected </text> }>This Month</option>
                            <option value="TQ" @if (DateStep == "TQ"){ <text> selected </text> }>This Quarter</option>
                            <option value="TD" @if (DateStep == "TD"){ <text> selected </text> }>Today</option>
                            <option value="LM" @if (DateStep == "LM"){ <text> selected </text> }>Last Month</option>
                            <option value="LQ" @if (DateStep == "LQ"){ <text> selected </text> }>Last Quarter</option>
                            <option value="TH" @if (DateStep == "TH"){ <text> selected </text> }>This Half Year</option>
                            <option value="LH" @if (DateStep == "LH"){ <text> selected </text> }>Last Half Year</option>
                            <option value="TY" @if (DateStep == "TY"){ <text> selected </text> }>This Year</option>
                            <option value="LY" @if (DateStep == "LY"){ <text> selected </text> }>Last Year</option>
                            <option value="CT" @if (DateStep == "CT"){ <text> selected </text> }>Custom</option>

                        </select>
                    <label>From Date:</label>
                    <input type="text" name='from_date' id="FromnepaliDateP" class="frmDataInput ndp-nepali-calendar" value="@FromDateN">
                        <input type="text" name='from_date' id="FromenglishDateP" class="frmDataInput ndp-nepali-calendar readOnlyInput" value="@FromDate">
                   <label>To Date:</label>
                    <input type="text" name='to_date' id="TonepaliDateP" class="frmDataInput ndp-nepali-calendar" value="@ToDateN">
                        <input type="text" name='to_date' id="ToenglishDateP" class="frmDataInput ndp-nepali-calendar readOnlyInput" value="@ToDate">
                                <input type="hidden" name="ViewPrefName" id="ViewPrefName">
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="checkbox"style="float:left;width:100%">
                                    <label style="font-size: 12px">
                                        <input type="checkbox" id="Quantity" name="Quantity" checked>
                                        Show Quantity
                                    </label>
                                </div>
                                <div class="pref-slide">
                                    <p>
                                        <input type="text" id="figure" name="figureQuantity" readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                    </p>
                                    <div id="slider">
                                        <label for="figure" style="font-size: 12px; font-weight: normal">figure in</label>
                                    </div>
                                </div>
                                <div class="pref-slide">
                                    <p>
                                        <input type=" text" id="round" name="roundupQuantity" readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                    </p>
                                    <div id="roundSlider">
                                        <label for="round" style="font-size: 12px; font-weight: normal">round up</label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="checkbox" style="float:left;width:100%">
                                    <label style="font-size: 12px">
                                        <input type="checkbox" id="Amount" name="Amount" checked>
                                        Show Amount
                                    </label>
                                </div>
                                <div class="pref-slide">
                                    <p>
                                        <input type="text" name="figureAmount" id="figure1" readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                    </p>
                                    <div id="slider1">
                                        <label for="figure" style="font-size: 12px; font-weight: normal">figure in</label>
                                    </div>
                                </div>
                                <div class="pref-slide">
                                    <p>
                                        <input type="text" id="round1" name="roundupAmount" readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                    </p>
                                    <div id="roundSlider1">
                                        <label for="round" style="font-size: 12px; font-weight: normal">round up</label>
                                    </div>
                                </div>                                
                            </div>
                            <div class="form-group" style="margin-top:15px;float:left">
                                    <label style="font-size: 12px;margin-bottom: 0px;">Filter Amount:</label>
                                    <table style="width:100%;">
                                        <tr>
                                            <td><p style="font-size: 10px; border: 0; color: #009999; font-weight: bold;margin-bottom: 0px;">Min:</p></td>
                                            <td style="padding-left:10px;"><input type="number" min="0" class="form-control" style="padding:2px;margin-bottom:5px;" name="minAmt" id="minAmt" /></td>
                                        </tr>
                                        <tr>
                                            <td><p style="font-size: 10px; border: 0; color: #009999; font-weight: bold;margin-bottom: 0px;">Max:</p></td>
                                            <td style="padding-left:10px;"><input type="number" min="0" class="form-control" style="padding:2px;margin-bottom:5px;" name="maxAmt" id="maxAmt" /></td>
                                        </tr>
                                    </table>
                                </div>
                        </div>
                        <div class="col-md-6">
                            <p style="margin-bottom: 0px;font-size: small;">Rows:</p>
                            <select class="form-control" id="multiXaxis" name="xaxis" style="padding:2px;width:50%" required>
                                <option value='Product' @if (xvalue == "Product")
                                                        { <text> selected </text> }>Product</option>
                                <option value="ProductTree" @if (xvalue == "ProductTree")
                                                            { <text> selected </text> }>Product Tree</option>
                                <option value='Customer' @if (xvalue == "Customer")
                                                         { <text> selected </text> }>Customer</option>
                               @* <option value="Category" @if (xvalue == "Category")
                                                         { <text> selected </text> }>Category</option>*@
                                <option value="CustomerTree" @if (xvalue == "CustomerTree")
                                                             { <text> selected </text> }>Customer Tree</option>
                                @*<option value='Timeline' @if (xvalue == "Timeline")
                                          {<text>selected</text>}>Timeline</option>*@
                            </select>
                            <input type="hidden" name="multiple_value" id="multiple_value" />
                            <p style="margin-bottom: 0px;font-size: small;">Group:</p>
                            <select class="form-control" id="multiYaxis" name="yaxis" style="padding:2px;width:50%">
                                <option value="" @if (yvalue == "")
                                                 { <text> selected </text> }></option>
                                <option value='Product' @if (yvalue == "Product")
                                                        { <text> selected </text> }>Product</option>
                                <option value='Customer' @if (yvalue == "Customer")
                                                         { <text> selected </text> }>Customer</option>
                                @*<option value='Timeline'  @if (yvalue == "Timeline")
                                          {<text>selected</text>}>Timeline</option>*@
                            </select>
                            <p style="margin-bottom: 0px;font-size: small;">Filter:</p>
                            <select class="form-control" id="Filter" name="filter" style="padding:2px;width:50%;float:left;margin-right:5px">
                                <option value='C'>Customer</option>
                                <option value='P'>Product</option>
                            </select>
                            <!-- Button trigger modal -->
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#filterModal" id="filterbutton">
                                ...
                            </button>
                        </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" @*id="btnOk"*@ onclick=" $('#myModal').modal('toggle'); " class="btn btn-primary formSubmit">OK</button>
                            <button type="button" id="btnLoad" class="btn btn-primary" onclick="return false;" data-toggle="modal" data-target="#MyPrefernces">Load</button>
                            <button type="submit" id="btnSave" onclick="return btnSaveClick();" class="btn btn-primary" data-toggle="modal" data-target="#mysave">Save</button>
                        </div>    
                    </div>
                </div>
            </div>
        <div class="modal fade" id="mysave" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                <div class="modal-content modal-inner-popup">
                                    <div class="modal-header">
                                        <button type="button" class="close DiaableInput" onclick=" $('#mysave').modal('toggle'); " aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        Save As
                                    </div>
                                    <div class="modal-body">
                                        <span id="MsgPrefName" style="font-size: 10px; color: indianred;"></span>
                                        <table id="ShowWhenSave"></table>
                                    </div>
                                    <div class="modal-footer">
                                        <div class="pref-input-div">
                                            <label>Preference Name:</label>
                                            <input id="PreferenceName" type="text" name="PreferenceName" disabled required />
                                            <input type="checkbox"  name="SetDefault" id="SetDefault" style="width: 22px; height: 16px;display:none;"><span id="SetDefaultMsg" style="font-size: 11px; color: indianred;"></span>
                                        </div>
                                        <button type="submit" class="btn btn-primary"><span class="fa fa-floppy-o" aria-hidden="true"></span></button>
                                        <button type="button" class="btn btn-danger DiaableInput" onclick=" $('#mysave').modal('toggle'); "><span class="glyphicon glyphicon-remove"></span></button>
                                    </div>
                                </div>
                            </div>
        <div class="modal fade" id="MyPrefernces" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                                <div class="modal-content modal-inner-popup">
                                    <div class="modal-header">
                                        <button type="button" class="close" onclick=" $('#MyPrefernces').modal('toggle'); " aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        Load
                                    </div>
                                    <div class="modal-body">
                                        <div id="LoadPreferncesWidth">
                                            <table id="LoadPrefernces"></table>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <div class="pref-input-div">
                                            <span id="ShowHideThisSpan" style="font-size: 11px; color: indianred; display: none">No rows are selected</span>
                                        </div>
                                        <button onclick="return getSelectedRow();" style="float: right;" class="btn btn-success">Load</button>
                                    </div>
                                </div>
                            </div>
        <div class="modal fade" id="filterModal" tabindex="-1" role="dialog" aria-labelledby="filterModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content modal-inner-popup">
                                    <div class="modal-header">
                                        <button type="button" class="close" onclick="$('#filterModal').modal('toggle');" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title" id="filterModalLabel">Filter</h4>
                                    </div>
                                    <div class="modal-body">
                                        <div class="col-md-6 filterTree">
                                            <table id="tree"></table>
                                        </div>
                                        <div class="col-md-6">
                                            <table id="FilterTreeCustomerList"></table>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button id="Insert" style="float: right;display:none;" class="btn btn-success" onclick="return SumbitItemCustomer(this.id);">OK</button>
                                    </div>
                                </div>
                            </div>
                        </div>
</div>
    
<script src="~/Sales/Content/jquery.ba-throttle-debounce.min.js"></script>
<script src="~/Sales/Content/jquery.stickyheader.js"></script>
<link href="~/Sales/Content/nepali.datepicker.v2.min.css" rel="stylesheet" />
<script src="~/Sales/Content/nepali.datepicker.v2.min.js"></script>
<link href="~/Content/multi-select-master/css/multi-select.css" rel="stylesheet" />
<script src="~/Content/multi-select-master/multi-select-master/js/jquery.multi-select.js"></script>
<script>
    $(document).ready(function () {
        var pageHeight = $('div#search').outerHeight() + $('div.pull-right').outerHeight();
        $('.overflow-y').height($('.page-wrapper').height() - pageHeight);
        //$('#btnPreference').trigger('click');
    });

</script>
 
     <script>
         $(document).ready(function () {
             $('#FromnepaliDate').nepaliDatePicker({
                 ndpEnglishInput: 'FromenglishDate',
                 onChange: function () {
                     $('#ddlDateFilter').val("CT");
                     $('#ddlDateFilterP').val("CT");
                     $('#FromnepaliDateP').val($('#FromnepaliDate').val());
                     $('#FromenglishDateP').val($('#FromenglishDate').val());
                     $('#TonepaliDateP').val($('#TonepaliDate').val());
                     $('#ToenglishDateP').val($('#ToenglishDate').val());
                 }
             });
             $('#TonepaliDate').nepaliDatePicker({
                 ndpEnglishInput: 'ToenglishDate',
                 onChange: function () {
                     $('#ddlDateFilter').val("CT");
                     $('#ddlDateFilterP').val("CT");
                     $('#TonepaliDateP').val($('#TonepaliDate').val());
                     $('#ddlDateFilterP').val("CT");
                     $('#FromnepaliDateP').val($('#FromnepaliDate').val());
                     $('#FromenglishDateP').val($('#FromenglishDate').val());
                     $('#TonepaliDateP').val($('#TonepaliDate').val());
                     $('#ToenglishDateP').val($('#ToenglishDate').val());
                 }
             });
             //GET FIRST DATE NEPALI// 
             var d = new Date();
             var curr_date = d.getDate();
             var curr_month = d.getMonth() + 1;
             var curr_year = d.getFullYear();
             var today = curr_year + "-" + curr_month + "-" + curr_date;
             var nepaliDateToday = AD2BS(today);
             var splitDate = nepaliDateToday.split('-');
             var nepaliFirstDate = splitDate[0] + "-" + splitDate[1] + "-01";
             //$('#FromnepaliDate').val(nepaliFirstDate);
            // $('#FromenglishDate').val(BS2AD($('#FromnepaliDate').val()));
             //GET LAST DAY NEPALI//
             $.ajax({url: "../Report/LastDayNepali", success: function (result) {
                 var formatDate = result.split('/');
                 var nepaliLastDate = formatDate[2] + "-" + formatDate[1] + "-" + formatDate[0];
                // $('#TonepaliDate').val(nepaliLastDate);
                 //$('#ToenglishDate').val(BS2AD($('#TonepaliDate').val()));
             }});
         });
</script>
<script>
    $(function () {
        $("#ddlDateFilter").change(function () {
            var current_date = getNepaliDate();
            var current_date = current_date.split("-");
            var cYear = current_date[0];
            var cMonth = current_date[1];
            var cDay = current_date[2];
            if ($('option:selected', this).val() == "TD") {
                var FromDate = cYear + "-" + cMonth + "-" + cDay;
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "TY") {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "LY") {
                var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "TM") {
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "LM") {
                if (cMonth == 1) {
                    cYear = cYear - 1;
                    cMonth = "12";
                } else {
                    cMonth = cMonth - 1;
                }
                var newToDate = numberOfBsDays(cYear, (cMonth - 1));
                if (cMonth > 1 && (cMonth) < 10)
                    cMonth = "0" + cMonth;
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + newToDate;
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "TQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "LQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "06" + "-" + numberOfBsDays(cYear, "5");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "12" + "-" + numberOfBsDays((cYear - 1), "11");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "TH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "LH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth >= 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else {
                    var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "09" + "-" + numberOfBsDays((cYear - 1), "8");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                }
            }
            $('#FromenglishDate').val(BS2AD($('#FromnepaliDate').val()));
            $('#ToenglishDate').val(BS2AD($('#TonepaliDate').val()));
            $('#ddlDateFilterP').val($('#ddlDateFilter').val());
            $('#FromnepaliDateP').val($('#FromnepaliDate').val());
            $('#FromenglishDateP').val($('#FromenglishDate').val());
            $('#TonepaliDateP').val($('#TonepaliDate').val());
            $('#ToenglishDateP').val($('#ToenglishDate').val());
        });
    });

    $('#FromenglishDate').datepicker({dateFormat: 'yy-mm-dd', minDate: 0});
    $('#FromenglishDate').change(function () {
        $('#FromnepaliDate').val(AD2BS($('#FromenglishDate').val()));
        $('#ddlDateFilter').val("CT");
        $('#ddlDateFilterP').val("CT");
        $('#FromnepaliDateP').val($('#FromnepaliDate').val());
        $('#FromenglishDateP').val($('#FromenglishDate').val());
        $('#TonepaliDateP').val($('#TonepaliDate').val());
        $('#ToenglishDateP').val($('#ToenglishDate').val());
    });
    $('#ToenglishDate').datepicker({dateFormat: 'yy-mm-dd', minDate: 0});
    $('#ToenglishDate').change(function () {
        $('#TonepaliDate').val(AD2BS($('#ToenglishDate').val()));
        $('#ddlDateFilter').val("CT");
        $('#ddlDateFilterP').val("CT");
        $('#FromnepaliDateP').val($('#FromnepaliDate').val());
        $('#FromenglishDateP').val($('#FromenglishDate').val());
        $('#TonepaliDateP').val($('#TonepaliDate').val());
        $('#ToenglishDateP').val($('#ToenglishDate').val());
    });

    $('#FromnepaliDate').change(function () {
        $('#FromenglishDate').val(BS2AD($('#FromnepaliDate').val()));
        $('#ddlDateFilter').val("CT");
        $('#ddlDateFilterP').val("CT");
        $('#FromnepaliDateP').val($('#FromnepaliDate').val());
        $('#FromenglishDateP').val($('#FromenglishDate').val());
        $('#TonepaliDateP').val($('#TonepaliDate').val());
        $('#ToenglishDateP').val($('#ToenglishDate').val());
    });
    $('#TonepaliDate').change(function () {
        $('#ToenglishDate').val(BS2AD($('#TonepaliDate').val()));
        $('#ddlDateFilter').val("CT");
        $('#ddlDateFilterP').val("CT");
        $('#FromnepaliDateP').val($('#FromnepaliDate').val());
        $('#FromenglishDateP').val($('#FromenglishDate').val());
        $('#TonepaliDateP').val($('#TonepaliDate').val());
        $('#ToenglishDateP').val($('#ToenglishDate').val());
    });
</script>
    
                                                         //PREFERENCE DATE //
     <script>
         $(document).ready(function () {
             $('#FromnepaliDateP').nepaliDatePicker({
                 ndpEnglishInput: 'FromenglishDateP',
                 onChange: function () {
                     $('#ddlDateFilterP').val("CT");
                     $('#ddlDateFilter').val("CT");
                     $('#FromnepaliDate').val($('#FromnepaliDateP').val());
                     $('#FromenglishDate').val($('#FromenglishDateP').val());
                     $('#TonepaliDate').val($('#TonepaliDateP').val());
                     $('#ToenglishDate').val($('#ToenglishDateP').val());
                 }
             });
             $('#TonepaliDateP').nepaliDatePicker({
                 ndpEnglishInput: 'ToenglishDateP',
                 onChange: function () {
                     $('#ddlDateFilterP').val("CT");
                     $('#ddlDateFilter').val("CT");
                     $('#FromnepaliDate').val($('#FromnepaliDateP').val());
                     $('#FromenglishDate').val($('#FromenglishDateP').val());
                     $('#TonepaliDate').val($('#TonepaliDateP').val());
                     $('#ToenglishDate').val($('#ToenglishDateP').val());
                 }
             });
             //GET FIRST DATE NEPALI// 
             var d = new Date();
             var curr_date = d.getDate();
             var curr_month = d.getMonth() + 1;
             var curr_year = d.getFullYear();
             var today = curr_year + "-" + curr_month + "-" + curr_date;
             var nepaliDateToday = AD2BS(today);
             var splitDate = nepaliDateToday.split('-');
             var nepaliFirstDate = splitDate[0] + "-" + splitDate[1] + "-01";
             //$('#FromnepaliDateP').val(nepaliFirstDate);
             //$('#FromenglishDateP').val(BS2AD($('#FromnepaliDateP').val()));
             //GET LAST DAY NEPALI//
             $.ajax({url: "../Report/LastDayNepali", success: function (result) {
               //  var formatDate = result.split('/');
                 //var nepaliLastDate = formatDate[2] + "-" + formatDate[1] + "-" + formatDate[0];
                 //$('#TonepaliDateP').val(nepaliLastDate);
                 //$('#ToenglishDateP').val(BS2AD($('#TonepaliDateP').val()));
             }});
         });
</script>
<script>
    $(function () {
        $("#ddlDateFilterP").change(function () {
            var current_date = getNepaliDate();
            var current_date = current_date.split("-");
            var cYear = current_date[0];
            var cMonth = current_date[1];
            var cDay = current_date[2];
            if ($('option:selected', this).val() == "TD") {
                var FromDate = cYear + "-" + cMonth + "-" + cDay;
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "TY") {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "LY") {
                var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "TM") {
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "LM") {
                if (cMonth == 1) {
                    cYear = cYear - 1;
                    cMonth = "12";
                } else {
                    cMonth = cMonth - 1;
                }
                var newToDate = numberOfBsDays(cYear, (cMonth - 1));
                if (cMonth > 1 && (cMonth) < 10)
                    cMonth = "0" + cMonth;
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + newToDate;
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "TQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                    $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
                    $('#FromnepaliDate').val($('#FromnepaliDateP').val());
                    $('#FromenglishDate').val($('#FromenglishDateP').val());
                    $('#TonepaliDate').val($('#TonepaliDateP').val());
                    $('#ToenglishDate').val($('#ToenglishDateP').val());
                } else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "LQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "06" + "-" + numberOfBsDays(cYear, "5");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "12" + "-" + numberOfBsDays((cYear - 1), "11");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "TH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "LH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth >= 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else {
                    var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "09" + "-" + numberOfBsDays((cYear - 1), "8");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                }
            }
            $('#FromenglishDateP').val(BS2AD($('#FromnepaliDateP').val()));
            $('#ToenglishDateP').val(BS2AD($('#TonepaliDateP').val()));
            $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
            $('#FromnepaliDate').val($('#FromnepaliDateP').val());
            $('#FromenglishDate').val($('#FromenglishDateP').val());
            $('#TonepaliDate').val($('#TonepaliDateP').val());
            $('#ToenglishDate').val($('#ToenglishDateP').val());
        });
    });

    $('#FromenglishDateP').datepicker({dateFormat: 'yy-mm-dd', minDate: 0});
    $('#FromenglishDateP').change(function () {
        $('#FromnepaliDateP').val(AD2BS($('#FromenglishDateP').val()));
        $('#ddlDateFilterP').val("CT");
        $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
        $('#FromnepaliDate').val($('#FromnepaliDateP').val());
        $('#FromenglishDate').val($('#FromenglishDateP').val());
        $('#TonepaliDate').val($('#TonepaliDateP').val());
        $('#ToenglishDate').val($('#ToenglishDateP').val());
    });
    $('#ToenglishDateP').datepicker({dateFormat: 'yy-mm-dd', minDate: 0});
    $('#ToenglishDateP').change(function () {
        $('#TonepaliDateP').val(AD2BS($('#ToenglishDateP').val()));
        $('#ddlDateFilterP').val("CT");
        $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
        $('#FromnepaliDate').val($('#FromnepaliDateP').val());
        $('#FromenglishDate').val($('#FromenglishDateP').val());
        $('#TonepaliDate').val($('#TonepaliDateP').val());
        $('#ToenglishDate').val($('#ToenglishDateP').val());
    });

    $('#FromnepaliDateP').change(function () {
        $('#FromenglishDateP').val(BS2AD($('#FromnepaliDateP').val()));
        $('#ddlDateFilterP').val("CT");
        $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
        $('#FromnepaliDate').val($('#FromnepaliDateP').val());
        $('#FromenglishDate').val($('#FromenglishDateP').val());
        $('#TonepaliDate').val($('#TonepaliDateP').val());
        $('#ToenglishDate').val($('#ToenglishDateP').val());
    });
    $('#TonepaliDateP').change(function () {
        $('#ToenglishDateP').val(BS2AD($('#TonepaliDateP').val()));
        $('#ddlDateFilterP').val("CT");
        $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
        $('#FromnepaliDate').val($('#FromnepaliDateP').val());
        $('#FromenglishDate').val($('#FromenglishDateP').val());
        $('#TonepaliDate').val($('#TonepaliDateP').val());
        $('#ToenglishDate').val($('#ToenglishDateP').val());
    });
</script>
<script>
    var a = $("#multiXaxis option:selected").val();
    var b = $("#multiYaxis option:selected").val();
    if (b == "")
    {
        $("#multiple_value").val(a);
    }
    else
    {
        $("#multiple_value").val(a + "," + b);
    }
    $('#multiXaxis').on('change', function() {
        a = this.value; // or $(this).val()
        if (b == "")
        {
            $("#multiple_value").val(a);
        }
        else
        {
            $("#multiple_value").val(a + "," + b);
        }
    });
    $('#multiYaxis').on('change', function() {
        b = this.value; // or $(this).val()
        if (b == "")
        {
            $("#multiple_value").val(a);
        } else
        {
            $("#multiple_value").val(a + "," + b); }
    });
    function CommonBtnFunction(){
        $("#FilterTreeCustomerList").jqGrid('GridUnload');
        if ($('#Filter').val() == "C")
        {
            $("#InsertItemList").hide();
            $("#tree").jqGrid('GridUnload');
            $("#filterbutton").trigger("click");
            $('#Insert').attr('id', 'InsertItemList');
            $('#InsertItemList').attr('id', 'InsertEmployeeList');
            jQuery('#tree').jqGrid({
                "url":"../Report/sales_report",
                "datatype":"json",
                "colModel": [
                {
                    "name": "CUSTOMER_CODE",
                    "index": "CUSTOMER_CODE",
                    "sorttype": "int",
                    "key": true,
                    "hidden": true,
                }, {
                    "name": "PARRENT_CODE",
                    "index": "PARRENT_CODE",
                    "sorttype": "int",
                    "hidden": true
                },
                {
                    "name": "CUSTOMER_EDESC",
                    "index": "CUSTOMER_EDESC",
                    "sorttype": "string",
                    "label": "Customers",
                    "width": 200,
                    formatter: function (cellvalue, options, rowObject, key) {
                        return "<input type='checkbox' class='itmchk " + rowObject.PARRENT_CODE + "' id='" + rowObject.CUSTOMER_CODE + 'FTCB' + "' name='FilterCheckTree' value='" + rowObject.CUSTOMER_CODE + "' style='background:red;' onchange='CheckBoxValues(this.id," + rowObject.PARRENT_CODE + ",this.className);' >" +
                                $.jgrid.htmlEncode(cellvalue);
                    }

                }
                ],
                "width": "100%",
                "autowidth": true,
                "hoverrows": true,
                "viewrecords": false,
                "gridview": true,
                "height": 300,
                "autoencode": true,
                "sortname": "CUSTOMER_CODE",
                "scrollrows": true,
                "treeGrid": true,
                "ExpandColumn": "CUSTOMER_EDESC",
                "treedatatype": "json",
                "treeGridModel": "adjacency",
                "loadonce": true,
                "rowNum": 10000,
                "treeReader": {
                    "parent_id_field": "PARRENT_CODE",
                    "level_field": "LEVEL",
                    "leaf_field": "ISLEAF",
                    "expanded_field": "EXPANDED",
                    "loaded": "LOADED",
                    "icon_field": "icon"
                },
                "ExpandColClick": true,
                "treeIcons": { leaf: 'ui-icon-blank' },
                "jsonReader": { repeatitems: false, root: "data" },
                "pager": "#pager",
                beforeSelectRow: function (rowid, e) {
                    var $this = $(this),
                            isLeafName = $this.jqGrid("getGridParam", "treeReader").leaf_field,
                            localIdName = $this.jqGrid("getGridParam", "localReader").id,
                            localData,
                            state,
                            setChechedStateOfChildrenItems = function (children) {
                                $.each(children, function () {
                                    $("#" + this[localIdName] + " input.itmchk").prop("checked", state);
                                    if (!this[isLeafName]) {
                                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", this));
                                    }
                                });
                            };
                    if (e.target.nodeName === "INPUT" && $(e.target).hasClass("itmchk")) {
                        state = $(e.target).prop("checked");
                        localData = $this.jqGrid("getLocalRow", rowid);
                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", localData), state);
                    }
                    cellValue = $("#FilterTree").jqGrid('getCell', rowid, 'PRE_CUSTOMER_CODE');
                }

            });
        }if ($('#Filter').val() == "P")
        {
            $("#InsertEmployeeList").hide();
            $("#tree").jqGrid('GridUnload');
            $("#filterbutton").trigger("click");
            $('#Insert').attr('id', 'InsertItemList');
            $('#InsertEmployeeList').attr('id', 'InsertItemList');
            jQuery('#tree').jqGrid({
                "url":"../Report/ProductFilter",
                "datatype":"json",
                "colModel": [
                {
                    "name": "ITEM_CODE",
                    "index": "ITEM_CODE",
                    "sorttype": "int",
                    "key": true,
                    "hidden": true,
                }, {
                    "name": "PARRENT_CODE",
                    "index": "PARRENT_CODE",
                    "sorttype": "int",
                    "hidden": true
                },
                {
                    "name": "ITEM_EDESC",
                    "index": "ITEM_EDESC",
                    "sorttype": "string",
                    "label": "Item Categories",
                    "width": 200,
                    formatter: function (cellvalue, options, rowObject, key) {
                        return "<input type='checkbox' class='itmchk " + rowObject.PARRENT_CODE + "' id='" + rowObject.ITEM_CODE + 'ITCB' + "' name='FilterCheckTree' value='" + rowObject.ITEM_CODE + "' style='background:red;' onchange='CheckBoxValuesItems(this.id," + rowObject.PARRENT_CODE + ",this.className);' >" +
                                $.jgrid.htmlEncode(cellvalue);
                    }

                }
                ],
                "width": "100%",
                "autowidth": true,
                "hoverrows": true,
                "viewrecords": false,
                "gridview": true,
                "height": 300,
                "autoencode": true,
                "sortname": "ITEM_CODE",
                "scrollrows": true,
                "treeGrid": true,
                "ExpandColumn": "ITEM_EDESC",
                "treedatatype": "json",
                "treeGridModel": "adjacency",
                "loadonce": true,
                "rowNum": 10000,
                "treeReader": {
                    "parent_id_field": "PARRENT_CODE",
                    "level_field": "LEVEL",
                    "leaf_field": "ISLEAF",
                    "expanded_field": "EXPANDED",
                    "loaded": "LOADED",
                    "icon_field": "icon"
                },
                "ExpandColClick": true,
                "treeIcons": { leaf: 'ui-icon-blank' },
                "jsonReader": { repeatitems: false, root: "data" },
                "pager": "#pager",
                beforeSelectRow: function (rowid, e) {
                    var $this = $(this),
                            isLeafName = $this.jqGrid("getGridParam", "treeReader").leaf_field,
                            localIdName = $this.jqGrid("getGridParam", "localReader").id,
                            localData,
                            state,
                            setChechedStateOfChildrenItems = function (children) {
                                $.each(children, function () {
                                    $("#" + this[localIdName] + " input.itmchk").prop("checked", state);
                                    if (!this[isLeafName]) {
                                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", this));
                                    }
                                });
                            };
                    if (e.target.nodeName === "INPUT" && $(e.target).hasClass("itmchk")) {
                        state = $(e.target).prop("checked");
                        localData = $this.jqGrid("getLocalRow", rowid);
                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", localData), state);
                    }
                    cellValue = $("#FilterTree").jqGrid('getCell', rowid, 'PRE_CUSTOMER_CODE');
                }

            });
        }

    }



    $('#filterbutton').click(function(){

        $("#FilterTreeCustomerList").jqGrid('GridUnload');
        if ($('#Filter').val() == "C")
        {
            $("#InsertItemList").hide();
            $("#tree").jqGrid('GridUnload');
            //$("#filterbutton" ).trigger( "click" );
            $('#Insert').attr('id', 'InsertItemList');
            $('#InsertItemList').attr('id', 'InsertEmployeeList');
            jQuery('#tree').jqGrid({
                "url":"../Report/sales_report",
                "datatype":"json",
                "colModel": [
                {
                    "name": "CUSTOMER_CODE",
                    "index": "CUSTOMER_CODE",
                    "sorttype": "int",
                    "key": true,
                    "hidden": true,
                }, {
                    "name": "PARRENT_CODE",
                    "index": "PARRENT_CODE",
                    "sorttype": "int",
                    "hidden": true
                },
                {
                    "name": "CUSTOMER_EDESC",
                    "index": "CUSTOMER_EDESC",
                    "sorttype": "string",
                    "label": "Customers",
                    "width": 200,
                    formatter: function (cellvalue, options, rowObject, key) {
                        return "<input type='checkbox' class='itmchk " + rowObject.PARRENT_CODE + "' id='" + rowObject.CUSTOMER_CODE + 'FTCB' + "' name='FilterCheckTree' value='" + rowObject.CUSTOMER_CODE + "' style='background:red;' onchange='CheckBoxValues(this.id," + rowObject.PARRENT_CODE + ",this.className);' >" +
                                $.jgrid.htmlEncode(cellvalue);
                    }

                }
                ],
                "width": "100%",
                "autowidth": true,
                "hoverrows": true,
                "viewrecords": false,
                "gridview": true,
                "height": 300,
                "autoencode": true,
                "sortname": "CUSTOMER_CODE",
                "scrollrows": true,
                "treeGrid": true,
                "ExpandColumn": "CUSTOMER_EDESC",
                "treedatatype": "json",
                "treeGridModel": "adjacency",
                "loadonce": true,
                "rowNum": 10000,
                "treeReader": {
                    "parent_id_field": "PARRENT_CODE",
                    "level_field": "LEVEL",
                    "leaf_field": "ISLEAF",
                    "expanded_field": "EXPANDED",
                    "loaded": "LOADED",
                    "icon_field": "icon"
                },
                "ExpandColClick": true,
                "treeIcons": { leaf: 'ui-icon-blank' },
                "jsonReader": { repeatitems: false, root: "data" },
                "pager": "#pager",
                beforeSelectRow: function (rowid, e) {
                    var $this = $(this),
                            isLeafName = $this.jqGrid("getGridParam", "treeReader").leaf_field,
                            localIdName = $this.jqGrid("getGridParam", "localReader").id,
                            localData,
                            state,
                            setChechedStateOfChildrenItems = function (children) {
                                $.each(children, function () {
                                    $("#" + this[localIdName] + " input.itmchk").prop("checked", state);
                                    if (!this[isLeafName]) {
                                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", this));
                                    }
                                });
                            };
                    if (e.target.nodeName === "INPUT" && $(e.target).hasClass("itmchk")) {
                        state = $(e.target).prop("checked");
                        localData = $this.jqGrid("getLocalRow", rowid);
                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", localData), state);
                    }
                    cellValue = $("#FilterTree").jqGrid('getCell', rowid, 'PRE_CUSTOMER_CODE');
                }

            });
        }if ($('#Filter').val() == "P")
        {
            $("#InsertEmployeeList").hide();
            $("#tree").jqGrid('GridUnload');
            //$( "#filterbutton" ).trigger( "click" );
            $('#Insert').attr('id', 'InsertItemList');
            $('#InsertEmployeeList').attr('id', 'InsertItemList');
            jQuery('#tree').jqGrid({
                "url":"../Report/ProductFilter",
                "datatype":"json",
                "colModel": [
                {
                    "name": "ITEM_CODE",
                    "index": "ITEM_CODE",
                    "sorttype": "int",
                    "key": true,
                    "hidden": true,
                }, {
                    "name": "PARRENT_CODE",
                    "index": "PARRENT_CODE",
                    "sorttype": "int",
                    "hidden": true
                },
                {
                    "name": "ITEM_EDESC",
                    "index": "ITEM_EDESC",
                    "sorttype": "string",
                    "label": "Item Categories",
                    "width": 200,
                    formatter: function (cellvalue, options, rowObject, key) {
                        return "<input type='checkbox' class='itmchk " + rowObject.PARRENT_CODE + "' id='" + rowObject.ITEM_CODE + 'ITCB' + "' name='FilterCheckTree' value='" + rowObject.ITEM_CODE + "' style='background:red;' onchange='CheckBoxValuesItems(this.id," + rowObject.PARRENT_CODE + ",this.className);' >" +
                                $.jgrid.htmlEncode(cellvalue);
                    }

                }
                ],
                "width": "100%",
                "autowidth": true,
                "hoverrows": true,
                "viewrecords": false,
                "gridview": true,
                "height": 300,
                "autoencode": true,
                "sortname": "ITEM_CODE",
                "scrollrows": true,
                "treeGrid": true,
                "ExpandColumn": "ITEM_EDESC",
                "treedatatype": "json",
                "treeGridModel": "adjacency",
                "loadonce": true,
                "rowNum": 10000,
                "treeReader": {
                    "parent_id_field": "PARRENT_CODE",
                    "level_field": "LEVEL",
                    "leaf_field": "ISLEAF",
                    "expanded_field": "EXPANDED",
                    "loaded": "LOADED",
                    "icon_field": "icon"
                },
                "ExpandColClick": true,
                "treeIcons": { leaf: 'ui-icon-blank' },
                "jsonReader": { repeatitems: false, root: "data" },
                "pager": "#pager",
                beforeSelectRow: function (rowid, e) {
                    var $this = $(this),
                            isLeafName = $this.jqGrid("getGridParam", "treeReader").leaf_field,
                            localIdName = $this.jqGrid("getGridParam", "localReader").id,
                            localData,
                            state,
                            setChechedStateOfChildrenItems = function (children) {
                                $.each(children, function () {
                                    $("#" + this[localIdName] + " input.itmchk").prop("checked", state);
                                    if (!this[isLeafName]) {
                                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", this));
                                    }
                                });
                            };
                    if (e.target.nodeName === "INPUT" && $(e.target).hasClass("itmchk")) {
                        state = $(e.target).prop("checked");
                        localData = $this.jqGrid("getLocalRow", rowid);
                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", localData), state);
                    }
                    cellValue = $("#FilterTree").jqGrid('getCell', rowid, 'PRE_CUSTOMER_CODE');
                }

            });
        }

    });
    $('#Filter').on('change', function() {
        CommonBtnFunction();
    });</script>

<script>
    var steps = [
            "weekly",
            "monthly",
            "quartely"
    ];
    var rsteps = [
            "0",
            "0.0",
            "0.00",
            "0.000",
            "0.0000"
    ];
    var fsteps = [
            "Actual",
            "thousand",
            "lakh",
            "crore",
    ];
    $(function () {
        $("#slider1").slider({
            value: 0,
            min: 0,
            max: 3,
            slide: function (event, ui) {
                $("#figure1").val(fsteps[ui.value]);
            }
        });
        var decimalPlacesAmount = '@ViewData["roundupAmount"]';
        decimalPlacesAmount = decimalPlacesAmount.split(".");
        if (decimalPlacesAmount == 0) {
            decimalPlacesAmount = 0;
        }
        else
        {
            decimalPlacesAmount = decimalPlacesAmount[1].length;
        }
        var decimalPlacesQuantity = '@ViewData["roundupQuantity"]';
        decimalPlacesQuantity = decimalPlacesQuantity.split(".");
        if (decimalPlacesQuantity == 0) {
            decimalPlacesQuantity = 0;
        }
        else {
            decimalPlacesQuantity = decimalPlacesQuantity[1].length;
        }
        $("#figure1").val(fsteps[$("#slider1").slider("value")]);
        $("#roundSlider1").slider({
            value: decimalPlacesAmount,
            min: 0,
            max: 4,
            slide: function (event, ui) {
                $("#round1").val(rsteps[ui.value]);
            }
        });
        $("#round1").val(rsteps[$("#roundSlider1").slider("value")]);
        $("#Amount").click(function () {
            if (this.checked) {
                // set the slider as disable
                $("#slider1").slider("option", "disabled", false);
                $("#roundSlider1").slider("option", "disabled", false);
                var trial = true;
            }
            else {
                // set the slider as enable again when you click to uncheck
                $("#slider1").slider("option", "disabled", true);
                $("#roundSlider1").slider("option", "disabled", true);
                trial = false;
            }
        });
        $("#slider").slider({
            value: 0,
            min: 0,
            max: 2,
            slide: function (event, ui) {
                $("#figure").val(fsteps[ui.value]);
            }
        });
        $("#figure").val(fsteps[$("#slider").slider("value")]);
        $("#roundSlider").slider({
            value: decimalPlacesQuantity,
            min: 0,
            max: 4,
            slide: function (event, ui) {
                $("#round").val(rsteps[ui.value]);
            }
        });
        $("#round").val(rsteps[$("#roundSlider").slider("value")]);
        $("#Quantity").click(function () {
            if (this.checked) {
                // set the slider as disable
                $("#slider").slider("option", "disabled", false);
                $("#roundSlider").slider("option", "disabled", false);
            }
            else {
                // set the slider as enable again when you click to uncheck
                $("#slider").slider("option", "disabled", true);
                $("#roundSlider").slider("option", "disabled", true);
            }
        });
        $("#periodSlider").slider({
            range: "min",
            value: 1,
            min: 0,
            max: 2,
            slide: function (event, ui) {
                $("#period").val(steps[ui.value]);
            }
        });
        $("#period").val(steps[$("#periodSlider").slider("value")]);
        $('#Quantity').on("click", function () {
            $("#roundSlider1").show();
        });
    });</script>
<script type="text/javascript">
    var Preference = {
        BindEvents: function () {
            $("#btnPreference").on('click', function () { });
        },
    }
</script>


<script type="text/javascript">
    var trial = '@ViewData["Amount"]';
    var trial1 = '@ViewData["Quantity"]';
    var yaxis = '@ViewData["Yaxis"]';
    var decimalPlacesAmount = '@ViewData["roundupAmount"]';
    var defaultAmount = decimalPlacesAmount;
    decimalPlacesAmount = decimalPlacesAmount.split(".");
    if (decimalPlacesAmount == 0) {
        decimalPlacesAmount = 0;
    }
    else
    {
        decimalPlacesAmount = decimalPlacesAmount[1].length;
    }
    var decimalPlacesQuantity = '@ViewData["roundupQuantity"]';
    var defaultQuantity = decimalPlacesQuantity;
    decimalPlacesQuantity = decimalPlacesQuantity.split(".");
    if (decimalPlacesQuantity == 0) {
        decimalPlacesQuantity = 0;
    }
    else {
        decimalPlacesQuantity = decimalPlacesQuantity[1].length;
    }
    Amount = false;
    Quantity = false;
    $('#Quantity').prop('checked', true);
    $('#Amount').prop('checked', true);
    var month = new Array();
    month[01] = "Jan";
    month[02] = "Feb";
    month[03] = "Mar";
    month[04] = "Apr";
    month[05] = "May";
    month[06] = "Jun";
    month[07] = "Jul";
    month[08] = "Aug";
    month[09] = "Sep";
    month[1] = "Jan";
    month[2] = "Feb";
    month[3] = "Mar";
    month[4] = "Apr";
    month[5] = "May";
    month[6] = "Jun";
    month[7] = "Jul";
    month[8] = "Aug";
    month[9] = "Sep";
    month[10] = "Oct";
    month[11] = "Nov";
    month[12] = "Dec";
    if (trial == 'on')
    {
        var Amount = false;
        $('#Amount').prop('checked', true);
    }
    else {
        Amount = true;
        $('#Amount').prop('checked', false);
    }
    if (trial1 == 'on')
    {
        var Quantity = false;
        $('#Quantity').prop('checked', true);
    }
    else {
        Quantity = true;
        $('#Quantity').prop('checked', false);
    }
    var divwidth = $(document).width();
    var divheight = $(window).height();
    var fromDate = $('#FromenglishDateP').val();
    var toDate = $('#ToenglishDateP').val();
    var type= $('#multiXaxis').val();

    @if (ViewData["Type"] == "T")
            { @*<text>
    jQuery(document).ready(function ($) {

        $.ajax({
            datatype: "json",
            url: "getColModalsS", success: function (result) {
                var results = JSON.stringify(result);
                var result = JSON.parse(results);
                jQuery('#grid').jqGrid({
                    "url": "../Report/getTlineS",
                    "datatype": "json",
                    "colModel": result,
                    "width": "100%",
                    "autowidth": true,
                    "hoverrows": true,
                    "viewrecords": false,
                    "gridview": true,
                    "height": 450,
                    "autoencode": true,
                    "sortname": "CustomerCode",
                    "scrollrows": true,
                    "treeGrid": true,
                    "ExpandColumn": "CustomerName",
                    "treedatatype": "json",
                    "treeGridModel": "adjacency",
                    "loadonce": true,
                    "rowNum": 10000,
                    "treeReader": {
                        "parent_id_field": "ParentCode",
                        "level_field": "Level",
                        "leaf_field": "IsLeaf",
                        //"expanded_field": "EXPANDED",
                        //"loaded": "LOADED",
                        "icon_field": "icon"
                    },
                    "caption": "Sales Report",
                    "ExpandColClick": true,
                    "treeIcons": { leaf: 'ui-icon-blank' },
                    "jsonReader": { repeatitems: false, root: "data" },
                    "pager": "#pager",
                });
                var GroupHeader = '[';
                $.each($.parseJSON(results), function() {
                    var str = this.name;
                    if (str.toLowerCase().indexOf("quantity") >= 0){
                        var GroupName = this.name.slice(0, 8);
                        GroupHeader += '{ "startColumnName":"' + this.name + '","numberOfColumns":2,"titleText":"' + GroupName + '"},';
                    }
                });
                GroupHeader = GroupHeader.slice(0, - 1);
                GroupHeader += ']';
                var json = JSON.parse(GroupHeader);
                jQuery("#grid").jqGrid('setGroupHeaders', {
                    useColSpanStyle: true,
                    groupHeaders: json
                });
            }
        });
    });
            </text>*@


    //by avishekh
    

    <text>
    $('.ShowRadio').css('visibility','visible');

  

    //var append=[];
    
    $.ajax({
        url: "../Report/getColmodel?FromDate=" + fromDate+"&ToDate="+toDate+"&type="+type, success: function (result) {
            var myobj = JSON.parse(result);
            append1 = [
     {
         "name": "CUSTOMER_CODE",
         "index": "CUSTOMER_CODE",
         "sorttype": "int",
         "key": true,
         "hidden": true,
     }, {
         "name": "PARRENT_CODE",
         "index": "PARRENT_CODE",
         "sorttype": "int",
         "hidden": true
     },
     {
         "name": "CUSTOMER_EDESC",
         "index": "CUSTOMER_EDESC",
         "sorttype": "string",
         "label": "Customers",
         "width": 300,
     }
            ];

            append2 = [];
            $.each(myobj, function(key, obj){
                if(obj.name.indexOf('AMT')>-1)
                {
                    append2.push({startColumnName: obj.name, numberOfColumns: 2, titleText:gettitle(obj.name) });
                }
                append1.push(obj);
            });
            loadTreeGrid(append1,append2);
        }
    });
    function gettitle(a)
    {
        //alert(typeof(a));
        var title=a.substring(0,3)+"-"+a.substring(5,7);
        var txt = a.trim();
        txt = txt.substring(5,7);
        if(a.indexOf('AMT')>-1){title=a.substring(0,3)+"-"+txt;}
        return title;
    }
    function loadTreeGrid(a,b){ 
        
        $('#grid').jqGrid({
        "url": "../Report/TreeData/?FromDate="+fromDate+"&ToDate="+toDate+"&type="+type,
        "datatype": "json",
       "colModel": a,
        "width": "100%",
        "autowidth": true,
        //"hoverrows": true,
        "viewrecords": false,
        "gridview": true,
        "height": ($('#page-wrapper').height() - 38 - $('.filterizeDate').outerHeight() - $('.btn-group').outerHeight() - 31 - 44 - 21 - 26),
        //"autoencode": true,
        "sortname": "CUSTOMER_CODE",
        "scrollrows": true,
        "treeGrid": true,
        "ExpandColumn": "CUSTOMER_EDESC",
        "treedatatype": "json",
        "treeGridModel": "adjacency",
        "loadonce": false,
        "rowNum": 10000,
        "treeReader": {
            "parent_id_field": "PARRENT_CODE",
            "level_field": "LEVEL",
            "leaf_field": "ISLEAF",
            "expanded_field": "EXPANDED",
            "loaded": "LOADED",
            "icon_field": "icon"
        },
        "ExpandColClick": true,
        "treeIcons": { leaf: 'ui-icon-blank' },
        "jsonReader": { repeatitems: false, root: "data" },
        "pager": "#pager",
        //"loadComplete":function(){alert("LOAD COMPLETE");},
        });    
        //$("#grid").jqGrid('filterToolbar');
        jQuery("#grid").jqGrid('setGroupHeaders', {
            useColSpanStyle: false, 
            groupHeaders:b,
        });
        $(document).ready(function(){
            $('.sticky-thead').remove();
        });}
   
      </text>
  //end by avishekh ...


          }
            else
            { <text>
        jQuery(document).ready(function () {
            jQuery("#grid").jqGrid('jqPivot',
                    [@if (ViewData.Model != null)
                 {
                     var roundupAmount = Convert.ToString(ViewData["roundupAmount"]);
                     var roundupQuantity = Convert.ToString(ViewData["roundupQuantity"]);
                     var figureQuantity = Convert.ToDouble(ViewData["figureQuantity"]);
                     var figureAmount = Convert.ToDouble(ViewData["figureAmount"]);
                     foreach (var item in ViewData.Model)
                     { <text>
                {
                    name: "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Convert.ToString(item["ITEM_EDESC"])<div class='hidden'>@Convert.ToString(item["ITEM_CODE"])</div>",
                    customer:"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Convert.ToString(item["CUSTOMER_EDESC"])<div class='hidden'>@Convert.ToString(item["CUSTOMER_CODE"])</div>",
                    timeline:"<div class='hidden'>@Convert.ToString(item["YEAR"])@Convert.ToString(item["MONTH"])</div>@CultureInfo.CurrentCulture.DateTimeFormat.GetAbbreviatedMonthName(Convert.ToInt16(item["MONTH"]))-@{string shortYear = Convert.ToString(item["YEAR"]); shortYear = shortYear.Substring(2,2);<text>@shortYear</text>}",
                    year: "@Convert.ToString(item["YEAR"])",
                    Qty: @{double b = (Convert.ToDouble(item["QUANTITY"]) / figureQuantity);
                       string values = b.ToString(roundupAmount); }"@values",
                    Amt:@{
                       double a = 0;
                       if (item["PRICE"] is DBNull)
                       {
                           a = 0;
                       }
                       else
                       {
                           a = (Convert.ToDouble(item["PRICE"]) / figureAmount);
                       }
                       string roundupvalue = a.ToString(roundupAmount); }"@roundupvalue",
                },
                </text>}
                 }
                 else
                 { <text> { name: "", month: "", quantity: "", price: "" } </text>}
                    ],
    // pivot options
                        {
                            xDimension: [@{
                 switch (xvalue)
                 {
                     case "ProductTree": <text>
                            { dataName: 'grandparent', label: "parent", frozen: true },
                            { dataName: 'category', label: "Category", frozen: true },
                            { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true }
                        </text>
                         break;
                     case "Customer": <text >
                            { dataName: 'customer', label: "Customer", autoWidth: false, sortable: true },
                                </text>
                         break;
                     case "Category": <text>
                        { dataName: 'type', label: "Category", autoWidth: false, sortable: true },
                                </text>
                         break;
                     case "Product": <text>
                        { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true }
                        </text>
                         break;
                     case ",ProductTree":<text>
        { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Customer": <text>
    { dataName: 'customer', label: "Customer", autoWidth: false, sortable: true },
    </text>
                         break;
                     case ",Category": <text>
    { dataName: 'type', label: "Category", autoWidth: false, sortable: true },
    </text>
                         break;
                     case ",Product": <text>
    { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Product,Customer": <text>
    { dataName: 'name', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Customer,Product": <text>
    { dataName: 'customer', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'name', label: "Customer", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Timeline": <text>
    { dataName: 'timeline', label: "Month", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "ProductTree,Customer": <text>
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "ProductTree,Timeline": <text>
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Product,Timeline": <text>
    { dataName: 'name', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Customer,Timeline": <text>
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Customer", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Timeline,Customer": <text>
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'customer', label: "Month", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Timeline,Product": <text>
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'name', label: "Month", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Timeline,ProductTree": <text>
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Month", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "Category,Product": <text>
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'name', label: "Category", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Category,Product": <text>
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'name', label: "Category", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Product,Category": <text>
    { dataName: 'name', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Product,Category": <text>
    { dataName: 'name', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Category,ProductTree": <text>
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Category", autoWidth: false, sortable: true },
    </text>
                         break;
                     case ",Category,ProductTree": <text>
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Category", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "ProductTree,Category": <text>
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Category", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    </text>
                         break;
                     case ",ProductTree,Category": <text>
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Category", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "Customer,Category": <text>
    { dataName: 'customer', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Customer", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Customer,Category": <text>
    { dataName: 'customer', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Customer", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Category,Customer": <text>
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'customer', label: "Category", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Category,Customer": <text>
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'customer', label: "Category", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Category,Timeline": <text>
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Category", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Category,Timeline": <text>
    { dataName: 'type', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Category", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Timeline,Category": <text>
    { dataName: 'timeline', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Timeline", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Timeline,Category": <text>
    { dataName: 'timeline', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Timeline", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Product,Customer": <text>
    { dataName: 'name', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Customer,Product": <text>
    { dataName: 'customer', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'name', label: "Customer", autoWidth: false, sortable: true }
    </text>
                         break;
                     case "Timeline": <text>
    { dataName: 'timeline', label: "Month", autoWidth: false, sortable: true },
    </text>
                         break;
                     case ",ProductTree,Customer": <text>
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",ProductTree,Timeline": <text>
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Product,Timeline": <text>
    { dataName: 'name', label: "Item", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Customer,Timeline": <text>
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Customer", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Timeline,Customer": <text>
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'customer', label: "Month", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Timeline,Product": <text>
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'name', label: "Month", autoWidth: false, sortable: true }
    </text>
                         break;
                     case ",Timeline,ProductTree": <text>
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'grandparent', label: "parent", frozen: true },
    { dataName: 'category', label: "Category", frozen: true },
    { dataName: 'name', label: "Month", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "Timeline,CustomerTree": <text>
    { dataName: 'timeline', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'customergparent', label: "parent", frozen: true },
    { dataName: 'customerparent', label: "Category", frozen: true },
    { dataName: 'customer', label: "Month", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "Product,CustomerTree": <text>
    { dataName: 'name', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'customergparent', label: "parent", frozen: true },
    { dataName: 'customerparent', label: "Category", frozen: true },
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "Category,CustomerTree": <text>
    { dataName: 'type', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'customergparent', label: "parent", frozen: true },
    { dataName: 'customerparent', label: "Category", frozen: true },
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "CustomerTree,Timeline": <text>
    { dataName: 'customergparent', label: "parent", frozen: true },
    { dataName: 'customerparent', label: "Category", frozen: true },
    { dataName: 'customer', label: "Month", autoWidth: false, sortable: true },
    { dataName: 'timeline', label: "Customer", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "CustomerTree,Product": <text>
    { dataName: 'customergparent', label: "parent", frozen: true },
    { dataName: 'customerparent', label: "Category", frozen: true },
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'name', label: "Customer", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "CustomerTree,Category": <text>
    { dataName: 'customergparent', label: "parent", frozen: true },
    { dataName: 'customerparent', label: "Category", frozen: true },
    { dataName: 'customer', label: "Item Description", autoWidth: false, sortable: true },
    { dataName: 'type', label: "Customer", autoWidth: false, sortable: true },
    </text>
                         break;
                     case "CustomerTree": <text>
    { dataName: 'customergparent', label: "parent", frozen: true },
    { dataName: 'customerparent', label: "Category", frozen: true },
    { dataName: 'customer', label: "Customer", autoWidth: false, sortable: true },
    </text>
                         break;
                 }
                    }
    ],
    yDimension: [{ dataName: 'timeline', label: "Month" }],
        aggregates: [
        {
            member: "Qty", aggregator: "sum", label: "Qty.", summaryType: 'sum', width: 40, formatter: 'integer', align: 'right', hidden: Quantity,
            formatoptions: { decimalSeparator: ".", thousandsSeparator: ",", decimalPlaces: decimalPlacesQuantity, defaultValue: defaultQuantity },
        },
        {
            member: "Amt", aggregator: "sum", label: "Amt.", summaryType: 'sum', width: 100, align: 'right', search: false, hidden: Amount,
            formatoptions: { decimalSeparator: ".", thousandsSeparator: ",", decimalPlaces: decimalPlacesAmount, defaultValue: defaultAmount },
        },
        ],
        //footerTotals: "Total",
       // footerAggregator: "sum",
        //frozenStaticCols: true,
    totals: true,
    totalHeader: "Grand Total",
    totalText: "<span style='font-style: italic'>  {1}</span>",
    //autoWidth:true,
    },
// grid options
    {

//cmTemplate: { autoResizable: true },
    width:$('#salesreport').width(),
    height:($('#page-wrapper').height() - 38 - $('.filterizeDate').outerHeight() - $('.btn-group').outerHeight() - 31 - 44 - 21 - 26),
    rowList: [50, 100, 200, "10000:All"],
    autoresizeOnLoad: true,
    scroll: true,
    autoResizing: { compact: true },
    gridview: true,
        pager: "#pager",
    rowNum: 10000,
    caption: "Sales Report",
    groupingView: {
        "plusicon": "ui-icon-triangle-1-e",
                "minusicon": "ui-icon-triangle-1-s",
                "openicon": "ui-icon-arrowreturn-1-e",
        groupCollapse: true,
        showSummaryOnHide: false,
        groupColumnShow: [false, false, false],
        groupSummaryPos: ["header", "header"],
        groupSummary: [true, true]
    }

    });
    $("#grid").jqGrid('bindKeys');
    gridTrigger();
    });
    </text>}


</script>

    <script>
        function gridTrigger(){
            var a = $('#gbox_grid').width();

            $('#grid').width(a);
            $('.ui-jqgrid-htable').width(a)
        }

    </script>

<script>
    $("#btnLoad").click(function () {
        $(".HideMeOnLoad").remove();
        $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
        var $grid = $("#LoadPrefernces"),
        emptyMsgDiv = $("<div class='HideMeOnLoad'><span style='font-size:12px;padding:5px;'> No records found...</span></div>");
        $("#LoadPrefernces").jqGrid({
            url: '../Report/SalesReportAjax',
            mtype: "GET",
            datatype: "json",
            colModel: [
            { label: 'PrefernceId', name: 'PREF_CODE', key: true,  hidden: true },
            { label: 'NAME', name: 'PREF_NAME', width: 420 },
            { label: 'Default', name: 'ISDEFAULT', index: 'Default', align: 'center', width: 80, sortable: false },
            { name: 'Action', index: 'act', align: 'center', width: 80, sortable: false }
            ],
            emptyrecords: "prefernces are not saved",
            viewrecords: true,
            autowidth: true,
            shrinkToFit: false,
            width: 580,
            rowNum: 20,
            gridComplete: function () {
                var ts = this;
                if (ts.p.reccount === 0) {
                    $(this).hide();
                    emptyMsgDiv.show();
                } else {
                    $(this).show();
                    emptyMsgDiv.hide();
                }
                var ids = jQuery("#LoadPrefernces").jqGrid('getDataIDs');
                for (var i = 0; i < ids.length; i++) {
                    var cl = ids[i];
                    be = "<button class='btn-preference btn-pref-rem' onclick='return deleteSelectedRow(" + cl + ");'><span class='fa fa-close'></span></button>";
                    jQuery("#LoadPrefernces").jqGrid('setRowData', ids[i], { Action: be });
                }
            }
        });
    });
    function getSelectedRow() {
        var rsteps = ["0", "0.0", "0.00", "0.000", "0.0000"];
        var fsteps = ["Actual", "thousand", "lakh", "crore", ];
        $("#ShowHideThisSpan").hide();
        var grid = $("#LoadPrefernces");
        var rowKey = grid.jqGrid('getGridParam', "selrow");
        if (rowKey) {
            $.ajax({
                url: "../Report/CustomerDebtorAjaxComplete?rowKey=" + rowKey, success: function (result) {
                    var res = result.split(",");
                    var arrayLength = res.length;
                    var i = 0;
                    if (res[2] == "Actual") { var j = 0; }
                    if (res[2] == "thousand") { var j = 1; }
                    if (res[2] == "lakh") { var j = 2; }
                    if (res[2] == "crore") { var j = 3; }
                    $("#slider1").slider({
                        value: j,
                        min: 0,
                        max: 3,
                        slide: function (event, ui) {
                            $("#figure1").val(fsteps[ui.value]);
                        }
                    });
                    $("#figure1").val(fsteps[$("#slider1").slider("value")]);
                    if (res[3] == '0') { var k = 0; }
                    if (res[3] == '0.0') { var k = 1; }
                    if (res[3] == '0.00') { var k = 2; }
                    if (res[3] == '0.000') { var k = 3; }
                    if (res[3] == '0.0000') { var k = 4; }
                    $("#roundSlider1").slider({
                        value: k,
                        min: 0,
                        max: 4,
                        slide: function (event, ui) {
                            $("#round1").val(rsteps[ui.value]);
                        }
                    });
                    $("#round1").val(rsteps[j]);
                    var test = res[4].toString();
                    $('#multiYaxis').multiSelect('deselect_all');
                    var aa = res[4].toString().trim();
                    var bb = 'A';
                    if (aa == bb) {
                        $('#multiYaxis').multiSelect('select', 'A');
                    } else {
                        $('#multiYaxis').multiSelect('select', 'T');
                    }
                    $("#FromDate").val(res[5]);
                    $('#fromInputDate').val(AD2BS($("#FromDate").val()));
                    var id = $(".adddiv button:last").attr("id");
                    if ($(".adddiv button:last").attr("id") == null) {
                        document.getElementById("00").remove();
                        document.getElementById("0000").remove();
                    } else {
                        for (var l = 0; l <= id; l++) {
                            if (l == 0) {
                                document.getElementById(l.toString() + l.toString()).remove();
                                document.getElementById(l.toString() + l.toString() + l.toString() + l.toString()).remove();
                            } else {
                                document.getElementById(l.toString()).remove();
                                document.getElementById(l.toString() + l.toString()).remove();
                                document.getElementById(l.toString() + l.toString() + l.toString() + l.toString()).remove();
                            }
                        }
                    }
                    var SetId = 0;
                    $('.adddiv').append("<div class='newbox' id='" + SetId.toString() + SetId.toString() + SetId.toString() + "'><input type='text' id='" + SetId.toString() + SetId.toString() + SetId.toString() + SetId.toString() + "' value='" + 0 + "' readonly='true' style='width:30%;'><input type='text' id='" + SetId.toString() + SetId.toString() + "' name='Steps[" + SetId + "]'  style='width:30%;margin-left:0.5px;' value='" + res[6] + "' onblur='ModifyNextId(this.id);' /></div>");
                    SetId = 1;
                    for (var i = 7; i < arrayLength; i++) {
                        $('.adddiv').append("<div class='newbox' id='" + SetId.toString() + SetId.toString() + SetId.toString() + "'><input type='text' id='" + SetId.toString() + SetId.toString() + SetId.toString() + SetId.toString() + "' value='" + (parseInt(res[i - 1]) + 1) + "' readonly='true' style='width:30%;'><input type='text' id='" + SetId.toString() + SetId.toString() + "' name='Steps[" + SetId + "]'  style='width:30%;margin-left:0.5px;' value='" + res[i] + "' onblur='ModifyNextId(this.id);' /><button id=" + SetId.toString() + " onclick='return DeleteThis(this.id);' class='btn-preference btn-pref-rem'><span class='fa fa-close'></span></button></div>");
                        SetId = SetId + 1;
                    }
                    $('#MyPrefernces').modal('toggle');
                }
            });
        }
        else {
            $("#ShowHideThisSpan").show();
        }
        return false;
    }
    function deleteSelectedRow(rowKey) {
        $("#ShowHideThisSpan").hide();
        if (confirm('Are You Sure!')) {
            if (rowKey) {
                $.ajax({
                    url: "../Report/SalesReportAjaxRemoveRow?rowKey=" + rowKey, success: function () {
                        $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                    }
                });
                $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
            }
            else {
                $("#ShowHideThisSpan").show();
            }
        }
        return false;
    }

    function btnSaveClick() {
        $("#PreferenceName").prop('disabled', false);
        $("#ShowWhenSave").jqGrid({
            url: '../Report/SalesReportAjax',
            mtype: "GET",
            datatype: "json",
            colModel: [
            { label: 'PrefernceId', name: 'PREF_CODE', key: true, width: 25, hidden: true },
            { label: 'NAME', name: 'PREF_NAME', width: 580, index: 'NAME' },
            ],
            emptyrecords: "prefernces are not saved",
            viewrecords: true,
            width: 580,
            rowNum: 20,
            onSelectRow: function (ids) {
                var rowData = jQuery('#ShowWhenSave').jqGrid('getRowData', ids);
                var InputValue = rowData.PREF_NAME;
                $("#PreferenceName").val(InputValue);
            }
        });
        return false;
    }
    $(".DiaableInput").click(function () {
        $("#PreferenceName").prop('disabled', true);
    });
    $("#PreferenceName").blur(function () {
        $.ajax({
            url: "../Report/GetPreferenceNameList", success: function (result) {
                var res = result.split(",");
                var arrayLength = res.length;
                var Name = $("#PreferenceName").val();
                for (var i = 0; i <= res.length - 1; i++) {
                    if (res[i] == Name) {
                        $("#MsgPrefName").html("<b>" + Name + "</b>" + " already exists and will be updated.");
                    }
                }
            },
        });
    });
    $("#SetDefault").change(function () {
        if ($('#SetDefault').is(':checked')) {
            $("#SetDefaultMsg").html("Default");
        } else {
            $("#SetDefaultMsg").html("");
        }
    });
    $(".DiaableInput").click(function () {
        $("#PreferenceName").prop('disabled', true);
    });
    $('#fromInputDate').nepaliDatePicker({
        ndpEnglishInput: 'FromDateP',
    });
    $('#fromInputDate').val(AD2BS($("#FromDateP").val()));
    $('#toInputDateP').val($('#fromInputDate').val());
    $('#ToDateP').val($('#FromDateP').val());
    $('#FromDateP').datepicker({ dateFormat: 'yy-mm-dd', onSelect: function (dateText, inst) 
    { $('#fromInputDateP').val(AD2BS(dateText));
        $("#ToDateP").val(BS2AD($("#fromInputDateP").val())); 
        $("#toInputDateP").val($("#fromInputDateP").val()); } });
    $('#toInputDateP').nepaliDatePicker({
        ndpEnglishInput: 'ToDateP'
    });
    $('#ToDateP').datepicker({ dateFormat: 'yy-mm-dd', onSelect: function (dateText, inst) { $('#toInputDateP').val(AD2BS(dateText)); $("#FromDateP").val(BS2AD($("#toInputDateP").val())); $("#fromInputDate").val($("#toInputDateP").val()); } });
    $(document).mouseover(function () {
        $("#fromInputDate").val($('#toInputDateP').val());
        $("#FromDateP").val($("#FromDateP").val());
    });
    $(".modal-content").mouseover(function () {
        $("#toInputDateP").val($('#fromInputDate').val());
        $("#ToDateP").val($("#FromDateP").val());
    });</script>





<script type="text/javascript">

    function CheckBoxValues(id, pid, ClsNme) {
        MainClass = ClsNme.slice(7);
        if ($('#' + id).prop('checked') == false) {
            $('#' + pid + 'FTCB').prop('checked', false);
            if ($('#' + pid + 'FTCB').length != 0 && pid != null) {
                ParentClass = $('#' + pid + 'FTCB').attr('class').slice(7);
                if ($('.' + ParentClass + ':checked').length != $('.' + ParentClass).length) {
                    $("#" + ParentClass + 'FTCB').prop('checked', false);
                    if ($('#' + ParentClass + 'FTCB').length != 0 && ParentClass != null) {
                        GrandParentClass = $('#' + ParentClass + 'FTCB').attr('class').slice(7);
                        if ($('.' + GrandParentClass + ':checked').length != $('.' + GrandParentClass).length) {
                            $("#" + GrandParentClass + 'FTCB').prop('checked', false);
                            if ($('#' + GrandParentClass + 'FTCB').length != 0 && GrandParentClass != null) {
                                GreatGrandParentClass = $('#' + GrandParentClass + 'FTCB').attr('class').slice(7);
                                if ($('.' + GreatGrandParentClass + ':checked').length != $('.' + GreatGrandParentClass).length) {
                                    $("#" + GreatGrandParentClass + 'FTCB').prop('checked', false);
                                    if ($('#' + GreatGrandParentClass + 'FTCB').length != 0 && GreatGrandParentClass != null) {
                                        GreatGreatGrandParentClass = $('#' + GreatGrandParentClass + 'FTCB').attr('class').slice(7);
                                        if ($('.' + GreatGreatGrandParentClass + ':checked').length != $('.' + GreatGreatGrandParentClass).length) {
                                            $("#" + GreatGreatGrandParentClass + 'FTCB').prop('checked', false);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ($('.' + MainClass + ':checked').length == $('.' + MainClass).length) {
            $('#' + pid + 'FTCB').prop('checked', true);
            if ($('#' + pid + 'FTCB').length != 0 && pid != null) {
                ParentClass = $('#' + pid + 'FTCB').attr('class').slice(7);
                if ($('.' + ParentClass + ':checked').length == $('.' + ParentClass).length) {
                    $("#" + ParentClass + 'FTCB').prop('checked', true);
                    if ($('#' + ParentClass + 'FTCB').length != 0 && ParentClass != null) {
                        GrandParentClass = $('#' + ParentClass + 'FTCB').attr('class').slice(7);
                        if ($('.' + GrandParentClass + ':checked').length == $('.' + GrandParentClass).length) {
                            $("#" + GrandParentClass + 'FTCB').prop('checked', true);
                            if ($('#' + GrandParentClass + 'FTCB').length != 0 && GrandParentClass != null) {
                                GreatGrandParentClass = $('#' + GrandParentClass + 'FTCB').attr('class').slice(7);
                                if ($('.' + GreatGrandParentClass + ':checked').length == $('.' + GreatGrandParentClass).length) {
                                    $("#" + GreatGrandParentClass + 'FTCB').prop('checked', true);
                                    if ($('#' + GreatGrandParentClass + 'FTCB').length != 0 && GreatGrandParentClass != null) {
                                        GreatGreatGrandParentClass = $('#' + GreatGrandParentClass + 'FTCB').attr('class').slice(7);
                                        if ($('.' + GreatGreatGrandParentClass + ':checked').length == $('.' + GreatGreatGrandParentClass).length) {
                                            $("#" + GreatGreatGrandParentClass + 'FTCB').prop('checked', true);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ($('.' + MainClass + ':checked').length == 0) {
            $("#InsertEmployeeList").hide();
        } else
        {
            $("#InsertEmployeeList").show();
        }
        var values = $('input:checkbox:checked.itmchk').map(function () {
            return this.value;
        }).get();

        $("#FilterTreeCustomerList").jqGrid('GridUnload');
        $.post("getFilteredCustomerList?values=" + values, function (data) {
            jQuery("#FilterTreeCustomerList").jqGrid({
                datatype: "jsonstring",
                datastr: data,
                colNames: ['CustomerCode', 'CustomerName'],
                colModel: [
                { name: 'CUSTOMER_CODE', index: 'CUSTOMER_CODE', width: 55, hidden:true, key:true },
                { name: 'CUSTOMER_EDESC', index: 'CustomerName', width: 90, sort:true },
                ],
                height:300,
                rowNum: 10,
                rowList: [10, 20, 30],
                //pager: '#pager9',
                autowidth: true,
                sortname: 'id',
                recordpos: 'left',
                viewrecords: true,
                sortorder: "desc",
                multiselect: true,
                //caption: "Customer List"
            });
            //$("#FilterTreeCustomerList").trigger('reloadGrid');
        });
    }



    function CheckBoxValuesItems(id, pid, ClsNme) {
        MainClass = ClsNme.slice(7);
        if ($('#' + id).prop('checked') == false) {
            $('#' + pid + 'ITCB').prop('checked', false);
            if ($('#' + pid + 'ITCB').length != 0 && pid != null) {
                ParentClass = $('#' + pid + 'ITCB').attr('class').slice(7);
                if ($('.' + ParentClass + ':checked').length != $('.' + ParentClass).length) {
                    $("#" + ParentClass + 'ITCB').prop('checked', false);
                    if ($('#' + ParentClass + 'ITCB').length != 0 && ParentClass != null) {
                        GrandParentClass = $('#' + ParentClass + 'ITCB').attr('class').slice(7);
                        if ($('.' + GrandParentClass + ':checked').length != $('.' + GrandParentClass).length) {
                            $("#" + GrandParentClass + 'ITCB').prop('checked', false);
                            if ($('#' + GrandParentClass + 'ITCB').length != 0 && GrandParentClass != null) {
                                GreatGrandParentClass = $('#' + GrandParentClass + 'ITCB').attr('class').slice(7);
                                if ($('.' + GreatGrandParentClass + ':checked').length != $('.' + GreatGrandParentClass).length) {
                                    $("#" + GreatGrandParentClass + 'ITCB').prop('checked', false);
                                    if ($('#' + GreatGrandParentClass + 'ITCB').length != 0 && GreatGrandParentClass != null) {
                                        GreatGreatGrandParentClass = $('#' + GreatGrandParentClass + 'ITCB').attr('class').slice(7);
                                        if ($('.' + GreatGreatGrandParentClass + ':checked').length != $('.' + GreatGreatGrandParentClass).length) {
                                            $("#" + GreatGreatGrandParentClass + 'ITCB').prop('checked', false);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ($('.' + MainClass + ':checked').length == $('.' + MainClass).length) {
            $('#' + pid + 'ITCB').prop('checked', true);
            if ($('#' + pid + 'ITCB').length != 0 && pid != null) {
                ParentClass = $('#' + pid + 'ITCB').attr('class').slice(7);
                if ($('.' + ParentClass + ':checked').length == $('.' + ParentClass).length) {
                    $("#" + ParentClass + 'ITCB').prop('checked', true);
                    if ($('#' + ParentClass + 'ITCB').length != 0 && ParentClass != null) {
                        GrandParentClass = $('#' + ParentClass + 'ITCB').attr('class').slice(7);
                        if ($('.' + GrandParentClass + ':checked').length == $('.' + GrandParentClass).length) {
                            $("#" + GrandParentClass + 'ITCB').prop('checked', true);
                            if ($('#' + GrandParentClass + 'ITCB').length != 0 && GrandParentClass != null) {
                                GreatGrandParentClass = $('#' + GrandParentClass + 'ITCB').attr('class').slice(7);
                                if ($('.' + GreatGrandParentClass + ':checked').length == $('.' + GreatGrandParentClass).length) {
                                    $("#" + GreatGrandParentClass + 'ITCB').prop('checked', true);
                                    if ($('#' + GreatGrandParentClass + 'ITCB').length != 0 && GreatGrandParentClass != null) {
                                        GreatGreatGrandParentClass = $('#' + GreatGrandParentClass + 'ITCB').attr('class').slice(7);
                                        if ($('.' + GreatGreatGrandParentClass + ':checked').length == $('.' + GreatGreatGrandParentClass).length) {
                                            $("#" + GreatGreatGrandParentClass + 'ITCB').prop('checked', true);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ($('.' + MainClass + ':checked').length == 0) {
            $("#InsertItemList").hide();
        } else
        {
            $("#InsertItemList").show();
        }
        var values = $('input:checkbox:checked.itmchk').map(function () {
            return this.value;
        }).get();

        $("#FilterTreeCustomerList").jqGrid('GridUnload');
        $.post("FilteredItemList?values=" + values, function (data) {
            jQuery("#FilterTreeCustomerList").jqGrid({
                datatype: "jsonstring",
                datastr: data,
                colNames: ['ItemCode ', 'ITEM NAME'],
                colModel: [
                { name: 'ITEM_CODE', index: 'ITEM_CODE', width: 55, hidden:true, key:true },
                { name: 'ITEM_EDESC', index: 'ITEM_EDESC', width: 90 },
                ],
                height:300,
                rowNum: 10,
                rowList: [10, 20, 30],
                autowidth: true,
                sortname: 'id',
                recordpos: 'left',
                viewrecords: true,
                sortorder: "desc",
                multiselect: true,
            });
        });
    }
</script>
<script>
    function SumbitItemCustomer(id){
        if (id == 'InsertEmployeeList'){
            var SelectedCustomers = jQuery("#FilterTreeCustomerList").jqGrid('getGridParam', 'selarrrow');
            SelectedCustomers = SelectedCustomers.toString();
            $.ajax({
                type: "post",
                data: {
                    id: SelectedCustomers,
                },
                dataType: "string",
                url: "InsertSelectedCustomerListSales",
                success: function (response) { alert(response); },
                error: function (err) {}
            });
            $('#filterModal').modal('toggle');
        }
        if (id == 'InsertItemList'){
            var SelectedCustomers = jQuery("#FilterTreeCustomerList").jqGrid('getGridParam', 'selarrrow');
            SelectedCustomers = SelectedCustomers.toString();
            $.ajax({
                type: "post",
                data: {
                    id: SelectedCustomers,
                },
                dataType: "string",
                url: "InsertSelectedProductListSales",
                success: function (response) { alert(response); },
                error: function (err) {}
            });
            $('#filterModal').modal('toggle');
        }
        return false;
    }

</script>


<script>
    $('#multiXaxis').change(function(){
        var ValueOfRow = $('#multiXaxis').val();
        if (ValueOfRow == "ProductTree" || ValueOfRow == "CustomerTree")
        {
            $('#multiYaxis').prop('disabled', true);
            $('#Filter').prop('disabled', true);
            $('#filterbutton').prop('disabled', true);
            $('#minAmt').prop('disabled', true);
            $('#maxAmt').prop('disabled', true)
        }
        else
        {
            $('#multiYaxis').prop('disabled', false);
            $('#Filter').prop('disabled', false);
            $('#filterbutton').prop('disabled', false);
            $('#minAmt').prop('disabled', false);
            $('#maxAmt').prop('disabled', false)
        }
        if (ValueOfRow == "Product")
        {
            $("#multiYaxis option[value='Product']").remove();
            if ($("#multiYaxis option[value='Customer']").length < 1)
            {
                $("#multiYaxis").append('<option value="Customer">Customer</option>');
            }
        }
        if (ValueOfRow == "Customer")
        {
            $("#multiYaxis option[value='Customer']").remove();
            if ($("#multiYaxis option[value='Product']").length < 1)
            {
                $("#multiYaxis").append('<option value="Product">Product</option>');
            }
        }
    });</script>
<script type="text/javascript">
    $("#CollapseAll").click(function () {
        $(".treeclick", "#grid").each(function () {
            if ($(this).hasClass("tree-minus")) { $(this).trigger('click'); }
        });
    });
    $("#ExpandAll").click(function () {
        $(".treeclick", "#grid").each(function () {
            if ($(this).hasClass("tree-plus")) { $(this).trigger('click'); }
        });
    });
</script>
<script>
    $("form").submit(function(){
        alert("Submitted");
    });   
</script>    
    <script>


        $('.formSubmit').click(function(){
            
            var param = {
                FromDate: $("#FromenglishDate").val(),
                ToDate: $("#ToenglishDate").val(),
                FromDateN: $("#FromnepaliDate").val(),
                ToDateN: $("#TonepaliDate").val(),
                DateStep:$("#ddlDateFilter").val(),  
                Amount:$("#Amount").val(), 
                Quantity:$("#Quantity").val(),  
                figureQuantity:$("#figure").val(),  
                figureAmount:$("#figure1").val(),  
                roundupQuantity:$("#round").val(),  
                roundupAmount:$("#round1").val(), 
                xaxis:$("#multiXaxis").val(),  
                yaxis:$("#multiYaxis").val(),  
                multiple_value:$("#multiple_value").val(),  
                PreferenceName:"",  
                ViewPrefName:"",  
                DefaultPreference:"",  
                ProductList:"",  
                minAmt:$("#minAmt").val(),  
                maxAmt:$("#maxAmt").val()
            
            };
        
            $.ajax({
                type: 'POST',
                async: false,
                url: "../Report/SalesReports/",
                data: JSON.stringify(param),
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    var newDoc = document.open("text/html", "replace");
                    newDoc.write(response);
                    newDoc.close();
                
                
                }});

        });        
       
 </script>
    
   }
   else
   {
       <div class="row">
    <div class="col-md-12" style="background-color: #f5f5f5; height: 38px;">
        <div class="btn-group" role="group" style="float: right; padding-top: 6px;">
            @Html.Partial("~/Views/Report/Search.cshtml")
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <form class="form-horizontal" action="~/Report/SalesReports" method="post" onsubmit="return ValidateDate(); ">
            @Html.Partial("~/Views/Report/SearchContent.cshtml")
            <div id="divBalanceSheetReport" class="row"></div>
        </form>
    </div>
</div>
   <div class="container-fluid wrapper">
    <div class="row">
        <div class="col-md-12">
            <div class="filterizeDate">
                
                    <label>Date Filter:</label>
                    <select name="DateStep" id="ddlDateFilter" class="dateFilterSelect">
                            <option value="TM">This Month</option>
                            <option value="TQ">This Quarter</option>
                            <option value="TD">Today</option>
                            <option value="LM">Last Month</option>
                            <option value="LQ">Last Quarter</option>
                            <option value="TH">This Half Year</option>
                            <option value="LH">Last Half Year</option>
                            <option value="TY">This Year</option>
                            <option value="LY">Last Year</option>
                            <option value="CT">Custom</option>

                        </select>
                    <label>From Date:</label>
                    <input type="text" name='from_date' id="FromnepaliDate" class="frmDataInput ndp-nepali-calendar" value="">
                        <input type="text" name='from_date' id="FromenglishDate" class="frmDataInput ndp-nepali-calendar readOnlyInput" value="">
                   <label>To Date:</label>
                    <input type="text" name='to_date' id="TonepaliDate" class="frmDataInput ndp-nepali-calendar" value="">
                        <input type="text" name='to_date' id="ToenglishDate" class="frmDataInput ndp-nepali-calendar readOnlyInput" value="">
                    <button type="submit" class="btn btn-default formSubmit" ><i class="fa fa-play"></i></button>
                <span class="ShowRadio" style="visibility:hidden;">
                    <label><input type="radio" id="CollapseAll" name="ExpanCollapse">Collapse All</label>
                    <label> <input type="radio" id="ExpandAll" name="ExpanCollapse">Expand All</label>
                </span>
               
            </div>
           @* <div class="btn-group btn-group-xs pull-right absolute-btn" style="position: absolute;right: 15px; top: 2px;">
                <a href="~/Report/SalesReportsWeekly" style="text-decoration: none">
                    <button value="W" name="Weekly" type="button" class="btn btn-default">Weekly</button>
                </a>
                <a href="~/Report/SalesReports" style="text-decoration: none">
                    <button value="M" name="Monthly" type="button" class="btn btn-default">Monthly</button>
                </a>
                <a href="~/Report/SalesReportsQuarterly" style="text-decoration: none">
                    <button value="Q" name="Quarterly" type="button" class="btn btn-default">Quarterly</button>
                </a>
            </div>*@
            <div class="table-content" style="margin-top:5px;" id="salesreport">
                <table id="grid" class="table table-bordered" style:"padding-right:10px;">
                </table>
            <div id='pager'></div>
            </div>
        </div>
    </div>
</div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width:800px;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <div id="PopupHeader">
                        <h4 class="modal-title" id="myModalLabel">Preference Setup</h4>
                    </div>
                </div>
                <div class="modal-body">
                        <div class="form-group">
                            <div class="col-md-12 filterizeDate">
                                <label>Date Filter:</label>
                    <select name="DateStep" id="ddlDateFilterP" class="dateFilterSelect">
                            <option value="TM">This Month</option>
                            <option value="TQ">This Quarter</option>
                            <option value="TD">Today</option>
                            <option value="LM">Last Month</option>
                            <option value="LQ">Last Quarter</option>
                            <option value="TH">This Half Year</option>
                            <option value="LH">Last Half Year</option>
                            <option value="TY">This Year</option>
                            <option value="LY">Last Year</option>
                            <option value="CT">Custom</option>

                        </select>
                    <label>From Date:</label>
                    <input type="text" name='from_date' id="FromnepaliDateP" class="frmDataInput ndp-nepali-calendar" value="">
                        <input type="text" name='from_date' id="FromenglishDateP" class="frmDataInput ndp-nepali-calendar readOnlyInput" value="">
                   <label>To Date:</label>
                    <input type="text" name='to_date' id="TonepaliDateP" class="frmDataInput ndp-nepali-calendar" value="">
                        <input type="text" name='to_date' id="ToenglishDateP" class="frmDataInput ndp-nepali-calendar readOnlyInput" value="">
                                <input type="hidden" name="ViewPrefName" id="ViewPrefName">
                            </div>
                        </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            <div class="form-group">
                                <div class="checkbox"style="float:left;width:100%">
                                    <label style="font-size: 12px">
                                        <input type="checkbox" id="Quantity" name="Quantity" checked>
                                        Show Quantity
                                    </label>
                                </div>
                                <div class="pref-slide">
                                    <p>
                                        <input type="text" id="figure" name="figureQuantity" readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                    </p>
                                    <div id="slider">
                                        <label for="figure" style="font-size: 12px; font-weight: normal">figure in</label>
                                    </div>
                                </div>
                                <div class="pref-slide">
                                    <p>
                                        <input type=" text" id="round" name="roundupQuantity" readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                    </p>
                                    <div id="roundSlider">
                                        <label for="round" style="font-size: 12px; font-weight: normal">round up</label>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="checkbox" style="float:left;width:100%">
                                    <label style="font-size: 12px">
                                        <input type="checkbox" id="Amount" name="Amount" checked>
                                        Show Amount
                                    </label>
                                </div>
                                <div class="pref-slide">
                                    <p>
                                        <input type="text" name="figureAmount" id="figure1" readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                    </p>
                                    <div id="slider1">
                                        <label for="figure" style="font-size: 12px; font-weight: normal">figure in</label>
                                    </div>
                                </div>
                                <div class="pref-slide">
                                    <p>
                                        <input type="text" id="round1" name="roundupAmount" readonly="" style="font-size: 10px; border: 0; color: #009999; font-weight: bold;">
                                    </p>
                                    <div id="roundSlider1">
                                        <label for="round" style="font-size: 12px; font-weight: normal">round up</label>
                                    </div>
                                </div>                                
                            </div>
                            <div class="form-group" style="margin-top:10px;float:left">
                                    <label style="font-size: 12px;margin-bottom: 0px;">Filter Amount:</label>
                                    <table style="width:100%;">
                                        <tr>
                                            <td><p style="font-size: 10px; border: 0; color: #009999; font-weight: bold;margin-bottom: 0px;">Min:</p></td>
                                            <td style="padding-left:10px;"><input type="number" min="0" class="form-control" style="padding:2px;margin-bottom:5px;" name="minAmt" id="minAmt" /></td>
                                        </tr>
                                        <tr>
                                            <td><p style="font-size: 10px; border: 0; color: #009999; font-weight: bold;margin-bottom: 0px;">Max:</p></td>
                                            <td style="padding-left:10px;"><input type="number" min="0" class="form-control" style="padding:2px;margin-bottom:5px;" name="maxAmt" id="maxAmt" /></td>
                                        </tr>
                                    </table>
                                </div>
                        </div>
                        <div class="col-md-6">
                            <p style="margin-bottom: 0px;font-size: small;">Rows:</p>
                            <select class="form-control" id="multiXaxis" name="xaxis" style="padding:2px;width:50%" required>
                                <option value='Product'>Product</option>
                                <option class="treeclick" value="ProductTree">Product Tree</option>
                                <option value='Customer'>Customer</option>
                                @*<option value="Category">Category</option>*@
                                <option class="treeclick" value="CustomerTree">Customer Tree</option>
                                @*<option value='Timeline' @if (xvalue == "Timeline")
                                          {<text>selected</text>}>Timeline</option>*@
                            </select>
                            <input type="hidden" name="multiple_value" id="multiple_value" />
                            <p style="margin-bottom: 0px;font-size: small;">Group:</p>
                            <select class="form-control" id="multiYaxis" name="yaxis" style="padding:2px;width:50%">
                                <option value=""></option>
                                <option value='Product'>Product</option>
                                <option value='Customer'>Customer</option>
                                @*<option value='Timeline'  @if (yvalue == "Timeline")
                                          {<text>selected</text>}>Timeline</option>*@
                            </select>
                            <p style="margin-bottom: 0px;font-size: small;">Filter:</p>
                            <select class="form-control" id="Filter" name="filter" style="padding:2px;width:50%;float:left;margin-right:5px">
                                <option value='C'>Customer</option>
                                <option value='P'>Product</option>
                            </select>
                            <!-- Button trigger modal -->
                            <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#filterModal" id="filterbutton">
                                ...
                            </button>
                        </div>   
                    </div>                    
                </div>
                <div class="modal-footer">
                     <button type="submit" onclick=" $('#myModal').modal('toggle'); " class="btn btn-primary formSubmit">OK</button>
                     <button type="button" id="btnLoad" class="btn btn-primary" onclick="return false;" data-toggle="modal" data-target="#MyPrefernces">Load</button>
                     <button type="submit" id="btnSave" onclick="return btnSaveClick();" class="btn btn-primary" data-toggle="modal" data-target="#mysave">Save</button>
                </div>
            </div>
        </div>
    <div class="modal fade" id="mysave" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
             <div class="modal-content modal-inner-popup">
                                <div class="modal-header">
                                    <button type="button" class="close DiaableInput" onclick=" $('#mysave').modal('toggle'); " aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    Save As
                                </div>
                                <div class="modal-body">
                                    <span id="MsgPrefName" style="font-size: 10px; color: indianred;"></span>
                                    <table id="ShowWhenSave"></table>
                                </div>
                                <div class="modal-footer">
                                    <div class="pref-input-div">
                                        <label>Preference Name:</label>
                                        <input id="PreferenceName" type="text" name="PreferenceName" disabled required />
                                        <input type="checkbox"  name="SetDefault" id="SetDefault" style="width: 22px; height: 16px;display:none;"><span id="SetDefaultMsg" style="font-size: 11px; color: indianred;"></span>
                                    </div>
                                    <button type="submit" class="btn btn-primary"><span class="fa fa-floppy-o" aria-hidden="true"></span></button>
                                    <button type="button" class="btn btn-danger DiaableInput" onclick=" $('#mysave').modal('toggle'); "><span class="glyphicon glyphicon-remove"></span></button>
                                </div>
                            </div>
     </div>
    <div class="modal fade" id="MyPrefernces" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
                            <div class="modal-content modal-inner-popup">
                                <div class="modal-header">
                                    <button type="button" class="close" onclick=" $('#MyPrefernces').modal('toggle'); " aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    Load
                                </div>
                                <div class="modal-body">
                                    <div id="LoadPreferncesWidth">
                                        <table id="LoadPrefernces"></table>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <div class="pref-input-div">
                                        <span id="ShowHideThisSpan" style="font-size: 11px; color: indianred; display: none">No rows are selected</span>
                                    </div>
                                    <button onclick="return getSelectedRow();" style="float: right;" class="btn btn-success">Load</button>
                                </div>
                            </div>
                        </div>
    <div class="modal fade" id="filterModal" tabindex="-1" role="dialog" aria-labelledby="filterModalLabel">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content modal-inner-popup">
                                    <div class="modal-header">
                                        <button type="button" class="close" onclick="$('#filterModal').modal('toggle');" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                        <h4 class="modal-title" id="filterModalLabel">Filter</h4>
                                    </div>
                                    <div class="modal-body">
                                        <div class="form-group">
                                            <div class="col-md-6 filterTree">
                                            <table id="tree"></table>
                                        </div>
                                        <div class="col-md-6">
                                            <table id="FilterTreeCustomerList"></table>
                                        </div>
                                        </div>                                        
                                    </div>
                                    <div class="modal-footer">
                                        <button id="Insert" style="float: right;display:none;" class="btn btn-success" onclick="return SumbitItemCustomer(this.id);">OK</button>
                                    </div>
                                </div>
                            </div>
                        </div>
</div>
    
    <script src="~/Sales/Content/jquery.ba-throttle-debounce.min.js"></script>
<script src="~/Sales/Content/jquery.stickyheader.js"></script>
<link href="~/Sales/Content/nepali.datepicker.v2.min.css" rel="stylesheet" />
<script src="~/Sales/Content/nepali.datepicker.v2.min.js"></script>
<link href="~/Content/multi-select-master/css/multi-select.css" rel="stylesheet" />
<script src="~/Content/multi-select-master/multi-select-master/js/jquery.multi-select.js"></script>
  <script>
      $(document).ready(function () {
          var pageHeight = $('div#search').outerHeight() + $('div.pull-right').outerHeight();
          $('.overflow-y').height($('.page-wrapper').height() - pageHeight);
          //$('#btnPreference').trigger('click');
      });</script>
    
     <script>
         $(document).ready(function () {


             $('.HideMe').hide();

             $('#FromnepaliDate').nepaliDatePicker({
                 ndpEnglishInput: 'FromenglishDate',
                 onChange: function () {
                     $('#ddlDateFilter').val("CT");
                     $('#ddlDateFilterP').val("CT");
                     $('#FromnepaliDateP').val($('#FromnepaliDate').val());
                     $('#FromenglishDateP').val($('#FromenglishDate').val());
                     $('#TonepaliDateP').val($('#TonepaliDate').val());
                     $('#ToenglishDateP').val($('#ToenglishDate').val());
                 }
             });
             $('#TonepaliDate').nepaliDatePicker({
                 ndpEnglishInput: 'ToenglishDate',
                 onChange: function () {
                     $('#ddlDateFilter').val("CT");
                     $('#ddlDateFilterP').val("CT");
                     $('#TonepaliDateP').val($('#TonepaliDate').val());
                     $('#ddlDateFilterP').val("CT");
                     $('#FromnepaliDateP').val($('#FromnepaliDate').val());
                     $('#FromenglishDateP').val($('#FromenglishDate').val());
                     $('#TonepaliDateP').val($('#TonepaliDate').val());
                     $('#ToenglishDateP').val($('#ToenglishDate').val());
                 }
             });
             //GET FIRST DATE NEPALI// 
             var d = new Date();
             var curr_date = d.getDate();
             var curr_month = d.getMonth() + 1;
             var curr_year = d.getFullYear();
             var today = curr_year + "-" + curr_month + "-" + curr_date;
             var nepaliDateToday = AD2BS(today);
             var splitDate = nepaliDateToday.split('-');
             var nepaliFirstDate = splitDate[0] + "-" + splitDate[1] + "-01";
             $('#FromnepaliDate').val(nepaliFirstDate);
            $('#FromenglishDate').val(BS2AD($('#FromnepaliDate').val()));
             //GET LAST DAY NEPALI//
             $.ajax({url: "../Report/LastDayNepali", success: function (result) {
                 var formatDate = result.split('/');
                 var nepaliLastDate = formatDate[2] + "-" + formatDate[1] + "-" + formatDate[0];
                 $('#TonepaliDate').val(nepaliLastDate);
                 $('#ToenglishDate').val(BS2AD($('#TonepaliDate').val()));
             }});
         });
</script>
<script>
    $(function () {
        $("#ddlDateFilter").change(function () {
            var current_date = getNepaliDate();
            var current_date = current_date.split("-");
            var cYear = current_date[0];
            var cMonth = current_date[1];
            var cDay = current_date[2];
            if ($('option:selected', this).val() == "TD") {
                var FromDate = cYear + "-" + cMonth + "-" + cDay;
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate)
            } else if ($('option:selected', this).val() == "TY") {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "LY") {
                var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "TM") {
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "LM") {
                if (cMonth == 1) {
                    cYear = cYear - 1;
                    cMonth = "12";
                } else {
                    cMonth = cMonth - 1;
                }
                var newToDate = numberOfBsDays(cYear, (cMonth - 1));
                if (cMonth > 1 && (cMonth) < 10)
                    cMonth = "0" + cMonth;
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + newToDate;
                $("#FromnepaliDate").val(FromDate);
                $("#TonepaliDate").val(ToDate);
            } else if ($('option:selected', this).val() == "TQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "LQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "06" + "-" + numberOfBsDays(cYear, "5");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, Number("8"));
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "12" + "-" + numberOfBsDays((cYear - 1), Number("11"));
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "TH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "LH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else if (cMonth >= 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                } else {
                    var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "09" + "-" + numberOfBsDays((cYear - 1), "8");
                    $("#FromnepaliDate").val(FromDate);
                    $("#TonepaliDate").val(ToDate);
                }
            }
            $('#FromenglishDate').val(BS2AD($('#FromnepaliDate').val()));
            $('#ToenglishDate').val(BS2AD($('#TonepaliDate').val()));
            $('#ddlDateFilterP').val($('#ddlDateFilter').val());
            $('#FromnepaliDateP').val($('#FromnepaliDate').val());
            $('#FromenglishDateP').val($('#FromenglishDate').val());
            $('#TonepaliDateP').val($('#TonepaliDate').val());
            $('#ToenglishDateP').val($('#ToenglishDate').val());
        });
    });

    $('#FromenglishDate').datepicker({dateFormat: 'yy-mm-dd', minDate: 0});
    $('#FromenglishDate').change(function () {
        $('#FromnepaliDate').val(AD2BS($('#FromenglishDate').val()));
        $('#ddlDateFilter').val("CT");
        $('#ddlDateFilterP').val("CT");
        $('#FromnepaliDateP').val($('#FromnepaliDate').val());
        $('#FromenglishDateP').val($('#FromenglishDate').val());
        $('#TonepaliDateP').val($('#TonepaliDate').val());
        $('#ToenglishDateP').val($('#ToenglishDate').val());
    });
    $('#ToenglishDate').datepicker({dateFormat: 'yy-mm-dd', minDate: 0});
    $('#ToenglishDate').change(function () {
        $('#TonepaliDate').val(AD2BS($('#ToenglishDate').val()));
        $('#ddlDateFilter').val("CT");
        $('#ddlDateFilterP').val("CT");
        $('#FromnepaliDateP').val($('#FromnepaliDate').val());
        $('#FromenglishDateP').val($('#FromenglishDate').val());
        $('#TonepaliDateP').val($('#TonepaliDate').val());
        $('#ToenglishDateP').val($('#ToenglishDate').val());
    });

    $('#FromnepaliDate').change(function () {
        $('#FromenglishDate').val(BS2AD($('#FromnepaliDate').val()));
        $('#ddlDateFilter').val("CT");
        $('#ddlDateFilterP').val("CT");
        $('#FromnepaliDateP').val($('#FromnepaliDate').val());
        $('#FromenglishDateP').val($('#FromenglishDate').val());
        $('#TonepaliDateP').val($('#TonepaliDate').val());
        $('#ToenglishDateP').val($('#ToenglishDate').val());
    });
    $('#TonepaliDate').change(function () {
        $('#ToenglishDate').val(BS2AD($('#TonepaliDate').val()));
        $('#ddlDateFilter').val("CT");
        $('#ddlDateFilterP').val("CT");
        $('#FromnepaliDateP').val($('#FromnepaliDate').val());
        $('#FromenglishDateP').val($('#FromenglishDate').val());
        $('#TonepaliDateP').val($('#TonepaliDate').val());
        $('#ToenglishDateP').val($('#ToenglishDate').val());
    });
</script>
    
       //PREFERENCE DATE //
     <script>
         $(document).ready(function () {
             $('#FromnepaliDateP').nepaliDatePicker({
                 ndpEnglishInput: 'FromenglishDateP',
                 onChange: function () {
                     $('#ddlDateFilterP').val("CT");
                     $('#ddlDateFilter').val("CT");
                     $('#FromnepaliDate').val($('#FromnepaliDateP').val());
                     $('#FromenglishDate').val($('#FromenglishDateP').val());
                     $('#TonepaliDate').val($('#TonepaliDateP').val());
                     $('#ToenglishDate').val($('#ToenglishDateP').val());
                 }
             });
             $('#TonepaliDateP').nepaliDatePicker({
                 ndpEnglishInput: 'ToenglishDateP',
                 onChange: function () {
                     $('#ddlDateFilterP').val("CT");
                     $('#ddlDateFilter').val("CT");
                     $('#FromnepaliDate').val($('#FromnepaliDateP').val());
                     $('#FromenglishDate').val($('#FromenglishDateP').val());
                     $('#TonepaliDate').val($('#TonepaliDateP').val());
                     $('#ToenglishDate').val($('#ToenglishDateP').val());
                 }
             });
             //GET FIRST DATE NEPALI// 
             var d = new Date();
             var curr_date = d.getDate();
             var curr_month = d.getMonth() + 1;
             var curr_year = d.getFullYear();
             var today = curr_year + "-" + curr_month + "-" + curr_date;
             var nepaliDateToday = AD2BS(today);
             var splitDate = nepaliDateToday.split('-');
             var nepaliFirstDate = splitDate[0] + "-" + splitDate[1] + "-01";
             $('#FromnepaliDateP').val(nepaliFirstDate);
             $('#FromenglishDateP').val(BS2AD($('#FromnepaliDateP').val()));
             //GET LAST DAY NEPALI//
             $.ajax({url: "../Report/LastDayNepali", success: function (result) {
                 var formatDate = result.split('/');
                 var nepaliLastDate = formatDate[2] + "-" + formatDate[1] + "-" + formatDate[0];
                 $('#TonepaliDateP').val(nepaliLastDate);
                 $('#ToenglishDateP').val(BS2AD($('#TonepaliDateP').val()));
             }});
         });
</script>
<script>
    $(function () {
        $("#ddlDateFilterP").change(function () {
            var current_date = getNepaliDate();
            var current_date = current_date.split("-");
            var cYear = current_date[0];
            var cMonth = current_date[1];
            var cDay = current_date[2];
            if ($('option:selected', this).val() == "TD") {
                var FromDate = cYear + "-" + cMonth + "-" + cDay;
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "TY") {
                var FromDate = cYear + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "LY") {
                var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "TM") {
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + cDay;
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "LM") {
                if (cMonth == 1) {
                    cYear = cYear - 1;
                    cMonth = "12";
                } else {
                    cMonth = cMonth - 1;
                }
                var newToDate = numberOfBsDays(cYear, (cMonth - 1));
                if (cMonth > 1 && (cMonth) < 10)
                    cMonth = "0" + cMonth;
                var FromDate = cYear + "-" + cMonth + "-" + "01";
                var ToDate = cYear + "-" + cMonth + "-" + newToDate;
                $("#FromnepaliDateP").val(FromDate);
                $("#TonepaliDateP").val(ToDate);
            } else if ($('option:selected', this).val() == "TQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "LQ") {
                if (cMonth > 3 && cMonth < 7) {
                    var FromDate = cYear + "-" + "01" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth > 6 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "06" + "-" + numberOfBsDays(cYear, "5");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth > 9 && cMonth <= 12) {
                    var FromDate = cYear + "-" + "07" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, Number("8"));
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth >= 1 && cMonth < 4) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "12" + "-" + numberOfBsDays((cYear - 1), Number("11"));
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "TH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else {
                    var FromDate = cYear + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + cMonth + "-" + cDay;
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                }
            } else if ($('option:selected', this).val() == "LH") {
                if (cMonth > 3 && cMonth < 10) {
                    var FromDate = (cYear - 1) + "-" + "10" + "-" + "01";
                    var ToDate = cYear + "-" + "03" + "-" + numberOfBsDays(cYear, "2");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else if (cMonth >= 10) {
                    var FromDate = cYear + "-" + "04" + "-" + "01";
                    var ToDate = cYear + "-" + "09" + "-" + numberOfBsDays(cYear, "8");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                } else {
                    var FromDate = (cYear - 1) + "-" + "04" + "-" + "01";
                    var ToDate = (cYear - 1) + "-" + "09" + "-" + numberOfBsDays((cYear - 1), "8");
                    $("#FromnepaliDateP").val(FromDate);
                    $("#TonepaliDateP").val(ToDate);
                }
            }
            $('#FromenglishDateP').val(BS2AD($('#FromnepaliDateP').val()));
            $('#ToenglishDateP').val(BS2AD($('#TonepaliDateP').val()));
            $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
            $('#FromnepaliDate').val($('#FromnepaliDateP').val());
            $('#FromenglishDate').val($('#FromenglishDateP').val());
            $('#TonepaliDate').val($('#TonepaliDateP').val());
            $('#ToenglishDate').val($('#ToenglishDateP').val());
        });
    });

    $('#FromenglishDateP').datepicker({dateFormat: 'yy-mm-dd', minDate: 0});
    $('#FromenglishDateP').change(function () {
        $('#FromnepaliDateP').val(AD2BS($('#FromenglishDateP').val()));
        $('#ddlDateFilterP').val("CT");
        $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
        $('#FromnepaliDate').val($('#FromnepaliDateP').val());
        $('#FromenglishDate').val($('#FromenglishDateP').val());
        $('#TonepaliDate').val($('#TonepaliDateP').val());
        $('#ToenglishDate').val($('#ToenglishDateP').val());
    });
    $('#ToenglishDateP').datepicker({dateFormat: 'yy-mm-dd', minDate: 0});
    $('#ToenglishDateP').change(function () {
        $('#TonepaliDateP').val(AD2BS($('#ToenglishDateP').val()));
        $('#ddlDateFilterP').val("CT");
        $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
        $('#FromnepaliDate').val($('#FromnepaliDateP').val());
        $('#FromenglishDate').val($('#FromenglishDateP').val());
        $('#TonepaliDate').val($('#TonepaliDateP').val());
        $('#ToenglishDate').val($('#ToenglishDateP').val());
    });

    $('#FromnepaliDateP').change(function () {
        $('#FromenglishDateP').val(BS2AD($('#FromnepaliDateP').val()));
        $('#ddlDateFilterP').val("CT");
        $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
        $('#FromnepaliDate').val($('#FromnepaliDateP').val());
        $('#FromenglishDate').val($('#FromenglishDateP').val());
        $('#TonepaliDate').val($('#TonepaliDateP').val());
        $('#ToenglishDate').val($('#ToenglishDateP').val());
    });
    $('#TonepaliDateP').change(function () {
        $('#ToenglishDateP').val(BS2AD($('#TonepaliDateP').val()));
        $('#ddlDateFilterP').val("CT");
        $('#ddlDateFilter').val( $("#ddlDateFilterP").val());
        $('#FromnepaliDate').val($('#FromnepaliDateP').val());
        $('#FromenglishDate').val($('#FromenglishDateP').val());
        $('#TonepaliDate').val($('#TonepaliDateP').val());
        $('#ToenglishDate').val($('#ToenglishDateP').val());
    });
</script>
<script>
    var a = $("#multiXaxis option:selected").val();
    var b = $("#multiYaxis option:selected").val();
    if (b == "")
    {
        $("#multiple_value").val(a);
    }
    else
    {
        $("#multiple_value").val(a + "," + b);
    }
    $('#multiXaxis').on('change', function() {
        a = this.value; // or $(this).val()
        if (b == "")
        {
            $("#multiple_value").val(a);
        }
        else
        {
            $("#multiple_value").val(a + "," + b);
        }
    });
    $('#multiYaxis').on('change', function() {
        b = this.value; // or $(this).val()
        if (b == "")
        {
            $("#multiple_value").val(a);
        } else
        {
            $("#multiple_value").val(a + "," + b); }
    });
    function CommonBtnFunction(){
        $("#FilterTreeCustomerList").jqGrid('GridUnload');
        if ($('#Filter').val() == "C")
        {
            $("#InsertItemList").hide();
            $("#tree").jqGrid('GridUnload');
            $("#filterbutton").trigger("click");
            $('#Insert').attr('id', 'InsertItemList');
            $('#InsertItemList').attr('id', 'InsertEmployeeList');
            jQuery('#tree').jqGrid({
                "url":"../Report/sales_report",
                "datatype":"json",
                "colModel": [
                {
                    "name": "CUSTOMER_CODE",
                    "index": "CUSTOMER_CODE",
                    "sorttype": "int",
                    "key": true,
                    "hidden": true,
                }, {
                    "name": "PARRENT_CODE",
                    "index": "PARRENT_CODE",
                    "sorttype": "int",
                    "hidden": true
                },
                {
                    "name": "CUSTOMER_EDESC",
                    "index": "CUSTOMER_EDESC",
                    "sorttype": "string",
                    "label": "Customers",
                    "width": 200,
                    formatter: function (cellvalue, options, rowObject, key) {
                        return "<input type='checkbox' class='itmchk " + rowObject.PARRENT_CODE + "' id='" + rowObject.CUSTOMER_CODE + 'FTCB' + "' name='FilterCheckTree' value='" + rowObject.CUSTOMER_CODE + "' style='background:red;' onchange='CheckBoxValues(this.id," + rowObject.PARRENT_CODE + ",this.className);' >" +
                                $.jgrid.htmlEncode(cellvalue);
                    }

                }
                ],
                "width": "100%",
                "autowidth": true,
                "hoverrows": true,
                "viewrecords": false,
                "gridview": true,
                "height": 300,
                "autoencode": true,
                "sortname": "CUSTOMER_CODE",
                "scrollrows": true,
                "treeGrid": true,
                "ExpandColumn": "CUSTOMER_EDESC",
                "treedatatype": "json",
                "treeGridModel": "adjacency",
                "loadonce": true,
                "rowNum": 10000,
                "treeReader": {
                    "parent_id_field": "PARRENT_CODE",
                    "level_field": "LEVEL",
                    "leaf_field": "ISLEAF",
                    "expanded_field": "EXPANDED",
                    "loaded": "LOADED",
                    "icon_field": "icon"
                },
                "ExpandColClick": true,
                "treeIcons": { leaf: 'ui-icon-blank' },
                "jsonReader": { repeatitems: false, root: "data" },
                "pager": "#pager",
                beforeSelectRow: function (rowid, e) {
                    var $this = $(this),
                            isLeafName = $this.jqGrid("getGridParam", "treeReader").leaf_field,
                            localIdName = $this.jqGrid("getGridParam", "localReader").id,
                            localData,
                            state,
                            setChechedStateOfChildrenItems = function (children) {
                                $.each(children, function () {
                                    $("#" + this[localIdName] + " input.itmchk").prop("checked", state);
                                    if (!this[isLeafName]) {
                                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", this));
                                    }
                                });
                            };
                    if (e.target.nodeName === "INPUT" && $(e.target).hasClass("itmchk")) {
                        state = $(e.target).prop("checked");
                        localData = $this.jqGrid("getLocalRow", rowid);
                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", localData), state);
                    }
                    cellValue = $("#FilterTree").jqGrid('getCell', rowid, 'PRE_CUSTOMER_CODE');
                }

            });
        }if ($('#Filter').val() == "P")
        {
            $("#InsertEmployeeList").hide();
            $("#tree").jqGrid('GridUnload');
            $("#filterbutton").trigger("click");
            $('#Insert').attr('id', 'InsertItemList');
            $('#InsertEmployeeList').attr('id', 'InsertItemList');
            jQuery('#tree').jqGrid({
                "url":"../Report/ProductFilter",
                "datatype":"json",
                "colModel": [
                {
                    "name": "ITEM_CODE",
                    "index": "ITEM_CODE",
                    "sorttype": "int",
                    "key": true,
                    "hidden": true,
                }, {
                    "name": "PARRENT_CODE",
                    "index": "PARRENT_CODE",
                    "sorttype": "int",
                    "hidden": true
                },
                {
                    "name": "ITEM_EDESC",
                    "index": "ITEM_EDESC",
                    "sorttype": "string",
                    "label": "Item Categories",
                    "width": 200,
                    formatter: function (cellvalue, options, rowObject, key) {
                        return "<input type='checkbox' class='itmchk " + rowObject.PARRENT_CODE + "' id='" + rowObject.ITEM_CODE + 'ITCB' + "' name='FilterCheckTree' value='" + rowObject.ITEM_CODE + "' style='background:red;' onchange='CheckBoxValuesItems(this.id," + rowObject.PARRENT_CODE + ",this.className);' >" +
                                $.jgrid.htmlEncode(cellvalue);
                    }

                }
                ],
                "width": "100%",
                "autowidth": true,
                "hoverrows": true,
                "viewrecords": false,
                "gridview": true,
                "height": 300,
                "autoencode": true,
                "sortname": "ITEM_CODE",
                "scrollrows": true,
                "treeGrid": true,
                "ExpandColumn": "ITEM_EDESC",
                "treedatatype": "json",
                "treeGridModel": "adjacency",
                "loadonce": true,
                "rowNum": 10000,
                "treeReader": {
                    "parent_id_field": "PARRENT_CODE",
                    "level_field": "LEVEL",
                    "leaf_field": "ISLEAF",
                    "expanded_field": "EXPANDED",
                    "loaded": "LOADED",
                    "icon_field": "icon"
                },
                "ExpandColClick": true,
                "treeIcons": { leaf: 'ui-icon-blank' },
                "jsonReader": { repeatitems: false, root: "data" },
                "pager": "#pager",
                beforeSelectRow: function (rowid, e) {
                    var $this = $(this),
                            isLeafName = $this.jqGrid("getGridParam", "treeReader").leaf_field,
                            localIdName = $this.jqGrid("getGridParam", "localReader").id,
                            localData,
                            state,
                            setChechedStateOfChildrenItems = function (children) {
                                $.each(children, function () {
                                    $("#" + this[localIdName] + " input.itmchk").prop("checked", state);
                                    if (!this[isLeafName]) {
                                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", this));
                                    }
                                });
                            };
                    if (e.target.nodeName === "INPUT" && $(e.target).hasClass("itmchk")) {
                        state = $(e.target).prop("checked");
                        localData = $this.jqGrid("getLocalRow", rowid);
                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", localData), state);
                    }
                    cellValue = $("#FilterTree").jqGrid('getCell', rowid, 'PRE_CUSTOMER_CODE');
                }

            });
        }

    }



    $('#filterbutton').click(function(){
        $("#FilterTreeCustomerList").jqGrid('GridUnload');
        if ($('#Filter').val() == "C")
        {
            $("#InsertItemList").hide();
            $("#tree").jqGrid('GridUnload');
            //$("#filterbutton" ).trigger( "click" );
            $('#Insert').attr('id', 'InsertItemList');
            $('#InsertItemList').attr('id', 'InsertEmployeeList');
            jQuery('#tree').jqGrid({
                "url":"../Report/sales_report",
                "datatype":"json",
                "colModel": [
                {
                    "name": "CUSTOMER_CODE",
                    "index": "CUSTOMER_CODE",
                    "sorttype": "int",
                    "key": true,
                    "hidden": true,
                }, {
                    "name": "PARRENT_CODE",
                    "index": "PARRENT_CODE",
                    "sorttype": "int",
                    "hidden": true
                },
                {
                    "name": "CUSTOMER_EDESC",
                    "index": "CUSTOMER_EDESC",
                    "sorttype": "string",
                    "label": "Customers",
                    "width": 200,
                    formatter: function (cellvalue, options, rowObject, key) {
                        return "<input type='checkbox' class='itmchk " + rowObject.PARRENT_CODE + "' id='" + rowObject.CUSTOMER_CODE + 'FTCB' + "' name='FilterCheckTree' value='" + rowObject.CUSTOMER_CODE + "' style='background:red;' onchange='CheckBoxValues(this.id," + rowObject.PARRENT_CODE + ",this.className);' >" +
                                $.jgrid.htmlEncode(cellvalue);
                    }

                }
                ],
                "width": "100%",
                "autowidth": true,
                "hoverrows": true,
                "viewrecords": false,
                "gridview": true,
                "height": 300,
                "autoencode": true,
                "sortname": "CUSTOMER_CODE",
                "scrollrows": true,
                "treeGrid": true,
                "ExpandColumn": "CUSTOMER_EDESC",
                "treedatatype": "json",
                "treeGridModel": "adjacency",
                "loadonce": true,
                "rowNum": 10000,
                "treeReader": {
                    "parent_id_field": "PARRENT_CODE",
                    "level_field": "LEVEL",
                    "leaf_field": "ISLEAF",
                    "expanded_field": "EXPANDED",
                    "loaded": "LOADED",
                    "icon_field": "icon"
                },
                "ExpandColClick": true,
                "treeIcons": { leaf: 'ui-icon-blank' },
                "jsonReader": { repeatitems: false, root: "data" },
                "pager": "#pager",
                beforeSelectRow: function (rowid, e) {
                    var $this = $(this),
                            isLeafName = $this.jqGrid("getGridParam", "treeReader").leaf_field,
                            localIdName = $this.jqGrid("getGridParam", "localReader").id,
                            localData,
                            state,
                            setChechedStateOfChildrenItems = function (children) {
                                $.each(children, function () {
                                    $("#" + this[localIdName] + " input.itmchk").prop("checked", state);
                                    if (!this[isLeafName]) {
                                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", this));
                                    }
                                });
                            };
                    if (e.target.nodeName === "INPUT" && $(e.target).hasClass("itmchk")) {
                        state = $(e.target).prop("checked");
                        localData = $this.jqGrid("getLocalRow", rowid);
                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", localData), state);
                    }
                    cellValue = $("#FilterTree").jqGrid('getCell', rowid, 'PRE_CUSTOMER_CODE');
                }

            });
        }if ($('#Filter').val() == "P")
        {
            $("#InsertEmployeeList").hide();
            $("#tree").jqGrid('GridUnload');
            //$( "#filterbutton" ).trigger( "click" );
            $('#Insert').attr('id', 'InsertItemList');
            $('#InsertEmployeeList').attr('id', 'InsertItemList');
            jQuery('#tree').jqGrid({
                "url":"../Report/ProductFilter",
                "datatype":"json",
                "colModel": [
                {
                    "name": "ITEM_CODE",
                    "index": "ITEM_CODE",
                    "sorttype": "int",
                    "key": true,
                    "hidden": true,
                }, {
                    "name": "PARRENT_CODE",
                    "index": "PARRENT_CODE",
                    "sorttype": "int",
                    "hidden": true
                },
                {
                    "name": "ITEM_EDESC",
                    "index": "ITEM_EDESC",
                    "sorttype": "string",
                    "label": "Item Categories",
                    "width": 200,
                    formatter: function (cellvalue, options, rowObject, key) {
                        return "<input type='checkbox' class='itmchk " + rowObject.PARRENT_CODE + "' id='" + rowObject.ITEM_CODE + 'ITCB' + "' name='FilterCheckTree' value='" + rowObject.ITEM_CODE + "' style='background:red;' onchange='CheckBoxValuesItems(this.id," + rowObject.PARRENT_CODE + ",this.className);' >" +
                                $.jgrid.htmlEncode(cellvalue);
                    }

                }
                ],
                "width": "100%",
                "autowidth": true,
                "hoverrows": true,
                "viewrecords": false,
                "gridview": true,
                "height": 300,
                "autoencode": true,
                "sortname": "ITEM_CODE",
                "scrollrows": true,
                "treeGrid": true,
                "ExpandColumn": "ITEM_EDESC",
                "treedatatype": "json",
                "treeGridModel": "adjacency",
                "loadonce": true,
                "rowNum": 10000,
                "treeReader": {
                    "parent_id_field": "PARRENT_CODE",
                    "level_field": "LEVEL",
                    "leaf_field": "ISLEAF",
                    "expanded_field": "EXPANDED",
                    "loaded": "LOADED",
                    "icon_field": "icon"
                },
                "ExpandColClick": true,
                "treeIcons": { leaf: 'ui-icon-blank' },
                "jsonReader": { repeatitems: false, root: "data" },
                "pager": "#pager",
                beforeSelectRow: function (rowid, e) {
                    var $this = $(this),
                            isLeafName = $this.jqGrid("getGridParam", "treeReader").leaf_field,
                            localIdName = $this.jqGrid("getGridParam", "localReader").id,
                            localData,
                            state,
                            setChechedStateOfChildrenItems = function (children) {
                                $.each(children, function () {
                                    $("#" + this[localIdName] + " input.itmchk").prop("checked", state);
                                    if (!this[isLeafName]) {
                                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", this));
                                    }
                                });
                            };
                    if (e.target.nodeName === "INPUT" && $(e.target).hasClass("itmchk")) {
                        state = $(e.target).prop("checked");
                        localData = $this.jqGrid("getLocalRow", rowid);
                        setChechedStateOfChildrenItems($this.jqGrid("getNodeChildren", localData), state);
                    }
                    cellValue = $("#FilterTree").jqGrid('getCell', rowid, 'PRE_CUSTOMER_CODE');
                }

            });
        }

    });
    $('#Filter').on('change', function() {
        CommonBtnFunction();
    });</script>

<script>
    var steps = [
            "weekly",
            "monthly",
            "quartely"
    ];
    var rsteps = [
            "0",
            "0.0",
            "0.00",
            "0.000",
            "0.0000"
    ];
    var fsteps = [
            "Actual",
            "thousand",
            "lakh",
            "crore",
    ];
    $(function () {
        $("#slider1").slider({
            value: 0,
            min: 0,
            max: 3,
            slide: function (event, ui) {
                $("#figure1").val(fsteps[ui.value]);
            }
        });
        var decimalPlacesAmount = '@ViewData["roundupAmount"]';
        decimalPlacesAmount = decimalPlacesAmount.split(".");
        if (decimalPlacesAmount == 0) {
            decimalPlacesAmount = 0;
        }
        else
        {
            decimalPlacesAmount = decimalPlacesAmount[1].length;
        }
        var decimalPlacesQuantity = '@ViewData["roundupQuantity"]';
        decimalPlacesQuantity = decimalPlacesQuantity.split(".");
        if (decimalPlacesQuantity == 0) {
            decimalPlacesQuantity = 0;
        }
        else {
            decimalPlacesQuantity = decimalPlacesQuantity[1].length;
        }
        $("#figure1").val(fsteps[$("#slider1").slider("value")]);
        $("#roundSlider1").slider({
            value: decimalPlacesAmount,
            min: 0,
            max: 4,
            slide: function (event, ui) {
                $("#round1").val(rsteps[ui.value]);
            }
        });
        $("#round1").val(rsteps[$("#roundSlider1").slider("value")]);
        $("#Amount").click(function () {
            if (this.checked) {
                // set the slider as disable
                $("#slider1").slider("option", "disabled", false);
                $("#roundSlider1").slider("option", "disabled", false);
                var trial = true;
            }
            else {
                // set the slider as enable again when you click to uncheck
                $("#slider1").slider("option", "disabled", true);
                $("#roundSlider1").slider("option", "disabled", true);
                trial = false;
            }
        });
        $("#slider").slider({
            value: 0,
            min: 0,
            max: 2,
            slide: function (event, ui) {
                $("#figure").val(fsteps[ui.value]);
            }
        });
        $("#figure").val(fsteps[$("#slider").slider("value")]);
        $("#roundSlider").slider({
            value: decimalPlacesQuantity,
            min: 0,
            max: 4,
            slide: function (event, ui) {
                $("#round").val(rsteps[ui.value]);
            }
        });
        $("#round").val(rsteps[$("#roundSlider").slider("value")]);
        $("#Quantity").click(function () {
            if (this.checked) {
                // set the slider as disable
                $("#slider").slider("option", "disabled", false);
                $("#roundSlider").slider("option", "disabled", false);
            }
            else {
                // set the slider as enable again when you click to uncheck
                $("#slider").slider("option", "disabled", true);
                $("#roundSlider").slider("option", "disabled", true);
            }
        });
        $("#periodSlider").slider({
            range: "min",
            value: 1,
            min: 0,
            max: 2,
            slide: function (event, ui) {
                $("#period").val(steps[ui.value]);
            }
        });
        $("#period").val(steps[$("#periodSlider").slider("value")]);
        $('#Quantity').on("click", function () {
            $("#roundSlider1").show();
        });
    });</script>
<script type="text/javascript">
    var Preference = {
        BindEvents: function () {
            $("#btnPreference").on('click', function () { });
        },
    }
</script>


<script>
    $("#btnLoad").click(function () {
        $(".HideMeOnLoad").remove();
        $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
        var $grid = $("#LoadPrefernces"),
        emptyMsgDiv = $("<div class='HideMeOnLoad'><span style='font-size:12px;padding:5px;'> No records found...</span></div>");
        $("#LoadPrefernces").jqGrid({
            url: '../Report/SalesReportAjax',
            mtype: "GET",
            datatype: "json",
            colModel: [
            { label: 'PrefernceId', name: 'PREF_CODE', key: true, autowidth: true, hidden: true },
            { label: 'NAME', name: 'PREF_NAME', width: 420 },
            { label: 'Default', name: 'ISDEFAULT', index: 'Default', align: 'center', width: 80, sortable: false },
            { name: 'Action', index: 'act', align: 'center', width: 80, sortable: false }
            ],
            emptyrecords: "prefernces are not saved",
            viewrecords: true,
            autowidth: true,
            shrinkToFit: false,
            width: 580,
            rowNum: 20,
            gridComplete: function () {
                var ts = this;
                if (ts.p.reccount === 0) {
                    $(this).hide();
                    emptyMsgDiv.show();
                } else {
                    $(this).show();
                    emptyMsgDiv.hide();
                }
                var ids = jQuery("#LoadPrefernces").jqGrid('getDataIDs');
                for (var i = 0; i < ids.length; i++) {
                    var cl = ids[i];
                    be = "<button class='btn-preference btn-pref-rem' onclick='return deleteSelectedRow(" + cl + ");'><span class='fa fa-close'></span></button>";
                    jQuery("#LoadPrefernces").jqGrid('setRowData', ids[i], { Action: be });
                }
            }
        });
    });
    function getSelectedRow() {
        var rsteps = ["0", "0.0", "0.00", "0.000", "0.0000"];
        var fsteps = ["Actual", "thousand", "lakh", "crore", ];
        $("#ShowHideThisSpan").hide();
        var grid = $("#LoadPrefernces");
        var rowKey = grid.jqGrid('getGridParam', "selrow");
        if (rowKey) {
            $.ajax({
                url: "../Report/CustomerDebtorAjaxComplete?rowKey=" + rowKey, success: function (result) {
                    var res = result.split(",");
                    var arrayLength = res.length;
                    var i = 0;
                    if (res[2] == "Actual") { var j = 0; }
                    if (res[2] == "thousand") { var j = 1; }
                    if (res[2] == "lakh") { var j = 2; }
                    if (res[2] == "crore") { var j = 3; }
                    $("#slider1").slider({
                        value: j,
                        min: 0,
                        max: 3,
                        slide: function (event, ui) {
                            $("#figure1").val(fsteps[ui.value]);
                        }
                    });
                    $("#figure1").val(fsteps[$("#slider1").slider("value")]);
                    if (res[3] == '0') { var k = 0; }
                    if (res[3] == '0.0') { var k = 1; }
                    if (res[3] == '0.00') { var k = 2; }
                    if (res[3] == '0.000') { var k = 3; }
                    if (res[3] == '0.0000') { var k = 4; }
                    $("#roundSlider1").slider({
                        value: k,
                        min: 0,
                        max: 4,
                        slide: function (event, ui) {
                            $("#round1").val(rsteps[ui.value]);
                        }
                    });
                    $("#round1").val(rsteps[j]);
                    var test = res[4].toString();
                    $('#multiYaxis').multiSelect('deselect_all');
                    var aa = res[4].toString().trim();
                    var bb = 'A';
                    if (aa == bb) {
                        $('#multiYaxis').multiSelect('select', 'A');
                    } else {
                        $('#multiYaxis').multiSelect('select', 'T');
                    }
                    $("#FromDate").val(res[5]);
                    $('#fromInputDate').val(AD2BS($("#FromDate").val()));
                    var id = $(".adddiv button:last").attr("id");
                    if ($(".adddiv button:last").attr("id") == null) {
                        document.getElementById("00").remove();
                        document.getElementById("0000").remove();
                    } else {
                        for (var l = 0; l <= id; l++) {
                            if (l == 0) {
                                document.getElementById(l.toString() + l.toString()).remove();
                                document.getElementById(l.toString() + l.toString() + l.toString() + l.toString()).remove();
                            } else {
                                document.getElementById(l.toString()).remove();
                                document.getElementById(l.toString() + l.toString()).remove();
                                document.getElementById(l.toString() + l.toString() + l.toString() + l.toString()).remove();
                            }
                        }
                    }
                    var SetId = 0;
                    $('.adddiv').append("<div class='newbox' id='" + SetId.toString() + SetId.toString() + SetId.toString() + "'><input type='text' id='" + SetId.toString() + SetId.toString() + SetId.toString() + SetId.toString() + "' value='" + 0 + "' readonly='true' style='width:30%;'><input type='text' id='" + SetId.toString() + SetId.toString() + "' name='Steps[" + SetId + "]'  style='width:30%;margin-left:0.5px;' value='" + res[6] + "' onblur='ModifyNextId(this.id);' /></div>");
                    SetId = 1;
                    for (var i = 7; i < arrayLength; i++) {
                        $('.adddiv').append("<div class='newbox' id='" + SetId.toString() + SetId.toString() + SetId.toString() + "'><input type='text' id='" + SetId.toString() + SetId.toString() + SetId.toString() + SetId.toString() + "' value='" + (parseInt(res[i - 1]) + 1) + "' readonly='true' style='width:30%;'><input type='text' id='" + SetId.toString() + SetId.toString() + "' name='Steps[" + SetId + "]'  style='width:30%;margin-left:0.5px;' value='" + res[i] + "' onblur='ModifyNextId(this.id);' /><button id=" + SetId.toString() + " onclick='return DeleteThis(this.id);' class='btn-preference btn-pref-rem'><span class='fa fa-close'></span></button></div>");
                        SetId = SetId + 1;
                    }
                    $('#MyPrefernces').modal('toggle');
                }
            });
        }
        else {
            $("#ShowHideThisSpan").show();
        }
        return false;
    }
    function deleteSelectedRow(rowKey) {
        $("#ShowHideThisSpan").hide();
        if (confirm('Are You Sure!')) {
            if (rowKey) {
                $.ajax({
                    url: "../Report/SalesReportAjaxRemoveRow?rowKey=" + rowKey, success: function () {
                        $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
                    }
                });
                $("#LoadPrefernces").jqGrid('setGridParam', { datatype: 'json' }).trigger('reloadGrid');
            }
            else {
                $("#ShowHideThisSpan").show();
            }
        }
        return false;
    }

    function btnSaveClick() {
        $("#PreferenceName").prop('disabled', false);
        $("#ShowWhenSave").jqGrid({
            url: '../Report/SalesReportAjax',
            mtype: "GET",
            datatype: "json",
            colModel: [
            { label: 'PrefernceId', name: 'PREF_CODE', key: true, width: 25, hidden: true },
            { label: 'NAME', name: 'PREF_NAME', width: 580, index: 'NAME' },
            ],
            emptyrecords: "prefernces are not saved",
            viewrecords: true,
            width: 580,
            rowNum: 20,
            onSelectRow: function (ids) {
                var rowData = jQuery('#ShowWhenSave').jqGrid('getRowData', ids);
                var InputValue = rowData.PREF_NAME;
                $("#PreferenceName").val(InputValue);
            }
        });
        return false;
    }
    $(".DiaableInput").click(function () {
        $("#PreferenceName").prop('disabled', true);
    });
    $("#PreferenceName").blur(function () {
        $.ajax({
            url: "../Report/GetPreferenceNameList", success: function (result) {
                var res = result.split(",");
                var arrayLength = res.length;
                var Name = $("#PreferenceName").val();
                for (var i = 0; i <= res.length - 1; i++) {
                    if (res[i] == Name) {
                        $("#MsgPrefName").html("<b>" + Name + "</b>" + " already exists and will be updated.");
                    }
                }
            },
        });
    });
    $("#SetDefault").change(function () {
        if ($('#SetDefault').is(':checked')) {
            $("#SetDefaultMsg").html("Default");
        } else {
            $("#SetDefaultMsg").html("");
        }
    });
    $(".DiaableInput").click(function () {
        $("#PreferenceName").prop('disabled', true);
    });
    $('#fromInputDate').nepaliDatePicker({
        ndpEnglishInput: 'FromDateP',
    });
    $('#fromInputDate').val(AD2BS($("#FromDateP").val()));
    $('#toInputDateP').val($('#fromInputDate').val());
    $('#ToDateP').val($('#FromDateP').val());
    $('#FromDateP').datepicker({ dateFormat: 'yy-mm-dd', onSelect: function (dateText, inst) { $('#fromInputDateP').val(AD2BS(dateText)); $("#ToDateP").val(BS2AD($("#fromInputDateP").val())); $("#toInputDateP").val($("#fromInputDateP").val()); } });
    $('#toInputDateP').nepaliDatePicker({
        ndpEnglishInput: 'ToDateP'
    });
    $('#ToDateP').datepicker({ dateFormat: 'yy-mm-dd', onSelect: function (dateText, inst) { $('#toInputDateP').val(AD2BS(dateText)); $("#FromDateP").val(BS2AD($("#toInputDateP").val())); $("#fromInputDate").val($("#toInputDateP").val()); } });
    $(document).mouseover(function () {
        $("#fromInputDate").val($('#toInputDateP').val());
        $("#FromDateP").val($("#FromDateP").val());
    });
    $(".modal-content").mouseover(function () {
        $("#toInputDateP").val($('#fromInputDate').val());
        $("#ToDateP").val($("#FromDateP").val());
    });</script>


<script type="text/javascript">

    function CheckBoxValues(id, pid, ClsNme) {
        MainClass = ClsNme.slice(7);
        if ($('#' + id).prop('checked') == false) {
            $('#' + pid + 'FTCB').prop('checked', false);
            if ($('#' + pid + 'FTCB').length != 0 && pid != null) {
                ParentClass = $('#' + pid + 'FTCB').attr('class').slice(7);
                if ($('.' + ParentClass + ':checked').length != $('.' + ParentClass).length) {
                    $("#" + ParentClass + 'FTCB').prop('checked', false);
                    if ($('#' + ParentClass + 'FTCB').length != 0 && ParentClass != null) {
                        GrandParentClass = $('#' + ParentClass + 'FTCB').attr('class').slice(7);
                        if ($('.' + GrandParentClass + ':checked').length != $('.' + GrandParentClass).length) {
                            $("#" + GrandParentClass + 'FTCB').prop('checked', false);
                            if ($('#' + GrandParentClass + 'FTCB').length != 0 && GrandParentClass != null) {
                                GreatGrandParentClass = $('#' + GrandParentClass + 'FTCB').attr('class').slice(7);
                                if ($('.' + GreatGrandParentClass + ':checked').length != $('.' + GreatGrandParentClass).length) {
                                    $("#" + GreatGrandParentClass + 'FTCB').prop('checked', false);
                                    if ($('#' + GreatGrandParentClass + 'FTCB').length != 0 && GreatGrandParentClass != null) {
                                        GreatGreatGrandParentClass = $('#' + GreatGrandParentClass + 'FTCB').attr('class').slice(7);
                                        if ($('.' + GreatGreatGrandParentClass + ':checked').length != $('.' + GreatGreatGrandParentClass).length) {
                                            $("#" + GreatGreatGrandParentClass + 'FTCB').prop('checked', false);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ($('.' + MainClass + ':checked').length == $('.' + MainClass).length) {
            $('#' + pid + 'FTCB').prop('checked', true);
            if ($('#' + pid + 'FTCB').length != 0 && pid != null) {
                ParentClass = $('#' + pid + 'FTCB').attr('class').slice(7);
                if ($('.' + ParentClass + ':checked').length == $('.' + ParentClass).length) {
                    $("#" + ParentClass + 'FTCB').prop('checked', true);
                    if ($('#' + ParentClass + 'FTCB').length != 0 && ParentClass != null) {
                        GrandParentClass = $('#' + ParentClass + 'FTCB').attr('class').slice(7);
                        if ($('.' + GrandParentClass + ':checked').length == $('.' + GrandParentClass).length) {
                            $("#" + GrandParentClass + 'FTCB').prop('checked', true);
                            if ($('#' + GrandParentClass + 'FTCB').length != 0 && GrandParentClass != null) {
                                GreatGrandParentClass = $('#' + GrandParentClass + 'FTCB').attr('class').slice(7);
                                if ($('.' + GreatGrandParentClass + ':checked').length == $('.' + GreatGrandParentClass).length) {
                                    $("#" + GreatGrandParentClass + 'FTCB').prop('checked', true);
                                    if ($('#' + GreatGrandParentClass + 'FTCB').length != 0 && GreatGrandParentClass != null) {
                                        GreatGreatGrandParentClass = $('#' + GreatGrandParentClass + 'FTCB').attr('class').slice(7);
                                        if ($('.' + GreatGreatGrandParentClass + ':checked').length == $('.' + GreatGreatGrandParentClass).length) {
                                            $("#" + GreatGreatGrandParentClass + 'FTCB').prop('checked', true);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ($('.' + MainClass + ':checked').length == 0) {
            $("#InsertEmployeeList").hide();
        } else
        {
            $("#InsertEmployeeList").show();
        }
        var values = $('input:checkbox:checked.itmchk').map(function () {
            return this.value;
        }).get();

        $("#FilterTreeCustomerList").jqGrid('GridUnload');
        $.post("getFilteredCustomerList?values=" + values, function (data) {
            jQuery("#FilterTreeCustomerList").jqGrid({
                datatype: "jsonstring",
                datastr: data,
                colNames: ['CustomerCode', 'CustomerName'],
                colModel: [
                { name: 'CUSTOMER_CODE', index: 'CUSTOMER_CODE', width: 55, hidden:true, key:true },
                { name: 'CUSTOMER_EDESC', index: 'CustomerName', width: 90, sort:true },
                ],
                height:300,
                rowNum: 10,
                rowList: [10, 20, 30],
                //pager: '#pager9',
                autowidth: true,
                sortname: 'id',
                recordpos: 'left',
                viewrecords: true,
                sortorder: "desc",
                multiselect: true,
                //caption: "Customer List"
            });
            //$("#FilterTreeCustomerList").trigger('reloadGrid');
        });
    }



    function CheckBoxValuesItems(id, pid, ClsNme) {
        MainClass = ClsNme.slice(7);
        if ($('#' + id).prop('checked') == false) {
            $('#' + pid + 'ITCB').prop('checked', false);
            if ($('#' + pid + 'ITCB').length != 0 && pid != null) {
                ParentClass = $('#' + pid + 'ITCB').attr('class').slice(7);
                if ($('.' + ParentClass + ':checked').length != $('.' + ParentClass).length) {
                    $("#" + ParentClass + 'ITCB').prop('checked', false);
                    if ($('#' + ParentClass + 'ITCB').length != 0 && ParentClass != null) {
                        GrandParentClass = $('#' + ParentClass + 'ITCB').attr('class').slice(7);
                        if ($('.' + GrandParentClass + ':checked').length != $('.' + GrandParentClass).length) {
                            $("#" + GrandParentClass + 'ITCB').prop('checked', false);
                            if ($('#' + GrandParentClass + 'ITCB').length != 0 && GrandParentClass != null) {
                                GreatGrandParentClass = $('#' + GrandParentClass + 'ITCB').attr('class').slice(7);
                                if ($('.' + GreatGrandParentClass + ':checked').length != $('.' + GreatGrandParentClass).length) {
                                    $("#" + GreatGrandParentClass + 'ITCB').prop('checked', false);
                                    if ($('#' + GreatGrandParentClass + 'ITCB').length != 0 && GreatGrandParentClass != null) {
                                        GreatGreatGrandParentClass = $('#' + GreatGrandParentClass + 'ITCB').attr('class').slice(7);
                                        if ($('.' + GreatGreatGrandParentClass + ':checked').length != $('.' + GreatGreatGrandParentClass).length) {
                                            $("#" + GreatGreatGrandParentClass + 'ITCB').prop('checked', false);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ($('.' + MainClass + ':checked').length == $('.' + MainClass).length) {
            $('#' + pid + 'ITCB').prop('checked', true);
            if ($('#' + pid + 'ITCB').length != 0 && pid != null) {
                ParentClass = $('#' + pid + 'ITCB').attr('class').slice(7);
                if ($('.' + ParentClass + ':checked').length == $('.' + ParentClass).length) {
                    $("#" + ParentClass + 'ITCB').prop('checked', true);
                    if ($('#' + ParentClass + 'ITCB').length != 0 && ParentClass != null) {
                        GrandParentClass = $('#' + ParentClass + 'ITCB').attr('class').slice(7);
                        if ($('.' + GrandParentClass + ':checked').length == $('.' + GrandParentClass).length) {
                            $("#" + GrandParentClass + 'ITCB').prop('checked', true);
                            if ($('#' + GrandParentClass + 'ITCB').length != 0 && GrandParentClass != null) {
                                GreatGrandParentClass = $('#' + GrandParentClass + 'ITCB').attr('class').slice(7);
                                if ($('.' + GreatGrandParentClass + ':checked').length == $('.' + GreatGrandParentClass).length) {
                                    $("#" + GreatGrandParentClass + 'ITCB').prop('checked', true);
                                    if ($('#' + GreatGrandParentClass + 'ITCB').length != 0 && GreatGrandParentClass != null) {
                                        GreatGreatGrandParentClass = $('#' + GreatGrandParentClass + 'ITCB').attr('class').slice(7);
                                        if ($('.' + GreatGreatGrandParentClass + ':checked').length == $('.' + GreatGreatGrandParentClass).length) {
                                            $("#" + GreatGreatGrandParentClass + 'ITCB').prop('checked', true);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        if ($('.' + MainClass + ':checked').length == 0) {
            $("#InsertItemList").hide();
        } else
        {
            $("#InsertItemList").show();
        }
        var values = $('input:checkbox:checked.itmchk').map(function () {
            return this.value;
        }).get();

        $("#FilterTreeCustomerList").jqGrid('GridUnload');
        $.post("FilteredItemList?values=" + values, function (data) {
            jQuery("#FilterTreeCustomerList").jqGrid({
                datatype: "jsonstring",
                datastr: data,
                colNames: ['ItemCode ', 'ITEM NAME'],
                colModel: [
                { name: 'ITEM_CODE', index: 'ITEM_CODE', width: 55, hidden:true, key:true },
                { name: 'ITEM_EDESC', index: 'ITEM_EDESC', width: 90 },
                ],
                height:300,
                rowNum: 10,
                rowList: [10, 20, 30],
                autowidth: true,
                sortname: 'id',
                recordpos: 'left',
                viewrecords: true,
                sortorder: "desc",
                multiselect: true,
            });
        });
    }
</script>
<script>
    function SumbitItemCustomer(id){
        if (id == 'InsertEmployeeList'){
            var SelectedCustomers = jQuery("#FilterTreeCustomerList").jqGrid('getGridParam', 'selarrrow');
            SelectedCustomers = SelectedCustomers.toString();
            $.ajax({
                type: "post",
                data: {
                    id: SelectedCustomers,
                },
                dataType: "string",
                url: "InsertSelectedCustomerListSales",
                success: function (response) { alert(response); },
                error: function (err) {}
            });
            $('#filterModal').modal('toggle');
        }
        if (id == 'InsertItemList'){
            var SelectedCustomers = jQuery("#FilterTreeCustomerList").jqGrid('getGridParam', 'selarrrow');
            SelectedCustomers = SelectedCustomers.toString();
            $.ajax({
                type: "post",
                data: {
                    id: SelectedCustomers,
                },
                dataType: "string",
                url: "InsertSelectedProductListSales",
                success: function (response) { alert(response); },
                error: function (err) {}
            });
            $('#filterModal').modal('toggle');
        }
        return false;
    }

</script>


<script>
    $('#multiXaxis').change(function(){
        var ValueOfRow = $('#multiXaxis').val();
        if (ValueOfRow == "ProductTree" || ValueOfRow == "CustomerTree")
        {
            $('#multiYaxis').prop('disabled', true);
            $('#Filter').prop('disabled', true);
            $('#filterbutton').prop('disabled', true);
            $('#minAmt').prop('disabled', true);
            $('#maxAmt').prop('disabled', true)
        }
        else
        {
            $('#multiYaxis').prop('disabled', false);
            $('#Filter').prop('disabled', false);
            $('#filterbutton').prop('disabled', false);
            $('#minAmt').prop('disabled', false);
            $('#maxAmt').prop('disabled', false)
        }
        if (ValueOfRow == "Product")
        {
            $("#multiYaxis option[value='Product']").remove();
            if ($("#multiYaxis option[value='Customer']").length < 1)
            {
                $("#multiYaxis").append('<option value="Customer">Customer</option>');
            }
        }
        if (ValueOfRow == "Customer")
        {
            $("#multiYaxis option[value='Customer']").remove();
            if ($("#multiYaxis option[value='Product']").length < 1)
            {
                $("#multiYaxis").append('<option value="Product">Product</option>');
            }
        }
    });</script>

<script>
    $('.formSubmit').click(function(e){
       // xyz();
        e.preventDefault();
        $('#Loading').hide();
        var param = {
            FromDate: $("#FromenglishDate").val(),
            ToDate: $("#ToenglishDate").val(),
            FromDateN: $("#FromnepaliDate").val(),
            ToDateN: $("#TonepaliDate").val(),
            DateStep:$("#ddlDateFilter").val(),  
            Amount:$("#Amount").val(), 
            Quantity:$("#Quantity").val(),  
            figureQuantity:$("#figure").val(),  
            figureAmount:$("#figure1").val(),  
            roundupQuantity:$("#round").val(),  
            roundupAmount:$("#round1").val(), 
            xaxis:$("#multiXaxis").val(),  
            yaxis:$("#multiYaxis").val(),  
            multiple_value:$("#multiple_value").val(),  
            PreferenceName:"",  
            ViewPrefName:"",  
            DefaultPreference:"",  
            ProductList:"",  
            minAmt:$("#minAmt").val(),  
            maxAmt:$("#maxAmt").val()
            
        };
        
        $.ajax({
            type: 'POST',
            async: false,
            url: "../Report/SalesReports/",
            data: JSON.stringify(param),
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                $("#Loading").hide();
                var newDoc = document.open("text/html", "replace");
                newDoc.write(response);
                newDoc.close();
            }});
    });        

   
       
 </script>
    
   }
}        



<script>
    
   @*if (ViewData["Type"] == "T")
   {
    <text>
    jQuery('#grid').jqGrid({
        "url": "../Report/TreeData",
        "datatype": "json",
        "colModel": [
        {
            "name": "CUSTOMER_CODE",
            "index": "CUSTOMER_CODE",
            "sorttype": "int",
            "key": true,
            "hidden": true,
        }, {
            "name": "PARRENT_CODE",
            "index": "PARRENT_CODE",
            "sorttype": "int",
            "hidden": true
        },
        {
            "name": "CUSTOMER_EDESC",
            "index": "CUSTOMER_EDESC",
            "sorttype": "string",
            "label": "Customers",
            "width": 200,
        },
        {
            "name": "JUL2015",
            "index": "JUL2015",
            "sorttype": "int",
            "label": "JUL-2015",
            "width": 200,

        },
        {
            "name": "AUG2015",
            "index": "AUG2015",
            "sorttype": "int",
            "label": "AUG-2015",
            "width": 200,
        },
        {
            "name": "SEP2015",
            "index": "SEP2015",
            "sorttype": "int",
            "label": "SEP-2015",
            "width": 200,
        },
        {
            "name": "OCT2015",
            "index": "OCT2015",
            "sorttype": "int",
            "label": "OCT-2015",
            "width": 200,
        }
        ],
        "width": "100%",
        "autowidth": true,
        "hoverrows": true,
        "viewrecords": false,
        "gridview": true,
        // "height": 300,
        "autoencode": true,
        "sortname": "CUSTOMER_CODE",
        "scrollrows": true,
        "treeGrid": true,
        "ExpandColumn": "CUSTOMER_EDESC",
        "treedatatype": "json",
        "treeGridModel": "adjacency",
        "loadonce": true,
        "rowNum": 10000,
        "treeReader": {
            "parent_id_field": "PARRENT_CODE",
            "level_field": "LEVEL",
            "leaf_field": "ISLEAF",
            "expanded_field": "EXPANDED",
            "loaded": "LOADED",
            "icon_field": "icon"
        },
        "ExpandColClick": true,
        "treeIcons": { leaf: 'ui-icon-blank' },
        "jsonReader": { repeatitems: false, root: "data" },
        "pager": "#pager",
    });


    </text>
       
   }*@
    
</script> 